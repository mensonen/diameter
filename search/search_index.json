{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Python Diameter Stack","text":"<p>This Python package provides tools to create and parse Diameter Messages and  AVPs, to communicate with diameter peers using the diameter base protocol and  to write diameter applications, as defined in the Diameter Base <code>rfc6733</code>.</p> <p>The diameter stack supports transports over both TCP and SCTP, with  SCTP support provided by an optional depency on pysctp.</p> <p>The provided Application and Node implementations handle the majority of the  basic protocol-level operations automatically, such as managing peer tables,  sending CER/CEA, DWR/DEA and disconnecting with DPR/DPA. </p>"},{"location":"#functional-overview","title":"Functional overview","text":"<p>The package contains an extensive AVP dictionary and allows constructing AVPs and Diameter messages either manually, or by parsing network-received  bytes. Message AVPs can be accessed directly as instance attributes.</p> <p>The <code>diameter</code> package provides tools for:</p> <ul> <li>Parsing and writing AVPs</li> <li>Parsing and writing diameter Mesages</li> <li>Creating diameter nodes and connecting to other peers</li> <li>Writing diameter applications</li> </ul>"},{"location":"#supported-diameter-application-commands","title":"Supported diameter application commands","text":"<p>The diameter stack provides a Python command class for the following  application message types:</p> Diameter Base Protocol <code>rfc3588</code>, <code>rfc6733</code> <ul> <li>Abort-Session</li> <li>Accounting</li> <li>Capabilities-Exchange</li> <li>Device-Watchdog</li> <li>Disconnect-PeerConnection</li> <li>Re-Auth</li> <li>Session-Termination</li> </ul> Diameter Mobile IPv4 <code>rfc4004</code> <ul> <li>AA-Mobile-Node</li> <li>Home-Agent-MIP</li> </ul> Diameter Network Access Server <code>rfc4005</code>, <code>rfc7155</code> <ul> <li>AA</li> <li>Abort-Session</li> <li>Accounting</li> <li>Re-Auth</li> <li>Session-Termination</li> </ul> Diameter Credit Control <code>rf4006</code>, <code>rfc6733</code>, <code>3GPP TS 32.299</code> <ul> <li>Credit-Control, with full 3GPP specification support</li> </ul> Diameter Extensible Authentication Protocol (EAP) <code>rfc4072</code> <ul> <li>Diameter-EAP</li> </ul> <p>The stack includes also a generic fallback Python class for every other message.</p>"},{"location":"setup/","title":"Installation","text":""},{"location":"setup/#system-requirements","title":"System requirements","text":"<p>The <code>diameter</code> package can be installed from PyPI:</p> <pre><code>~# pip install python-diameter\n</code></pre> <p>The minimum required Python version is 3.11, a fairly recent Linux kernel is recommended. There is no Windows or Mac compatibility.</p>"},{"location":"setup/#sctp","title":"SCTP","text":"<p>The <code>diameter</code> stack can operate in both TCP and SCTP modes. For connectivity over the SCTP transport, an optional dependency for  pysctp must be installed separately:</p> <pre><code>~# pip install pysctp\n</code></pre> <p>Note that installing the <code>pysctp</code> package requires at least an SCTP-aware kernel and possibly additional OS packages installed prior installation. Refer to  pysctp installation documentation for further instructions.</p> <p>There is no need to make <code>diameter</code> package SCTP-aware. If pysctp is available, it will be used automatically for any peer configured to use the SCTP  transport protocol.</p>"},{"location":"api/","title":"API reference","text":""},{"location":"api/application/","title":"Application","text":"<p>API reference for <code>diameter.node.application</code>.</p> <p>Diameter application implementations.</p> <p>Instances of Applications, or their subclasses, provided by this module can be passed directly to an instance of a <code>Node</code>, for receiving and sending diameter application messages.</p> <p>In most cases, the most suitable option to use is <code>SimpleThreadingApplication</code>, which will cover the most scenarios without requiring any unnecessary setup.</p>"},{"location":"api/application/#diameter.node.application.Application","title":"Application","text":"<pre><code>Application(\n    application_id: int = None,\n    is_acct_application: bool = False,\n    is_auth_application: bool = False,\n)\n</code></pre> <p>A basic diameter application that can be registered with a Node.</p> <p>Can be used as a starting point for building applications with custom logic. In most cases, <code>SimpleThreadingApplication</code> and <code>ThreadingApplication</code> are more practical.</p> <p>Parameters:</p> Name Type Description Default <code>application_id</code> <code>int</code> <p>Authentication application ID</p> <code>None</code> <code>is_acct_application</code> <code>bool</code> <p>Flag the application as an accounting app</p> <code>False</code> <code>is_auth_application</code> <code>bool</code> <p>Flag the application as an authorisation app</p> <code>False</code>"},{"location":"api/application/#diameter.node.application.Application.generate_answer","title":"generate_answer","text":"<pre><code>generate_answer(\n    message: _AnyMessageType,\n    result_code: int = None,\n    error_message: str = None,\n) -&gt; _AnyAnswerType\n</code></pre> <p>Produce an answer message from a request message.</p> <p>Calls Message.to_answer and adds origin host, origin realm, session id and application IDs automatically.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>_AnyMessageType</code> <p>Any diameter message with a python implementation, accepting AVPs as instance attributes</p> required <code>result_code</code> <code>int</code> <p>An optional result code to add to the answer</p> <code>None</code> <code>error_message</code> <code>str</code> <p>An optional error message to add to the answer</p> <code>None</code>"},{"location":"api/application/#diameter.node.application.Application.handle_answer","title":"handle_answer","text":"<pre><code>handle_answer(message: Message)\n</code></pre> <p>Called every time an unexpected answer message is received.</p> <p>Normally, answers are returned directly as the return values of <code>send_request</code>; overriding this method is not strictly required. It is called every time an answer is received, with nobody expecting one. This could happen e.g. when the answer wait timeout has been exceeded. By default, this method does nothing and only discards every unexpected message.</p> <p>Warning</p> <p>This method is called in the main thread; its execution blocks the diameter Node from processing any incoming or outgoing messages. The implementing party is expected to utilise a message queue and do the work in a separate thread.</p>"},{"location":"api/application/#diameter.node.application.Application.handle_request","title":"handle_request","text":"<pre><code>handle_request(message: Message)\n</code></pre> <p>Called every time a request message is received.</p> <p>The parent diameter node does not check or expect this method to return anyhing; the application is expected to send its answer messages back towards the network by using the <code>send_message</code> method.</p> <p>Warning</p> <p>This method is called in the main thread; its execution blocks the diameter Node from processing any incoming or outgoing messages. The implementing party is expected to utilise a message queue and do the work in a separate thread. Alternatively, the ThreadingApplication can be used, which spawns a new thread for every request.</p>"},{"location":"api/application/#diameter.node.application.Application.send_answer","title":"send_answer","text":"<pre><code>send_answer(message: Message)\n</code></pre> <p>Send an answer message.</p> <p>Routes the message directly to the parent diameter node, where it will be forwarded through the network to the appropriate peer. The application ID, hop-by-hop identifier and end-to-end identifiers must already be set (copied from the original request).</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>Message</code> <p>A diameter message to send</p> required <p>The method will return nothing; it returns immediately without waiting for any results from the network.</p>"},{"location":"api/application/#diameter.node.application.Application.send_request","title":"send_request","text":"<pre><code>send_request(message: Message, timeout: int = 30) -&gt; Message\n</code></pre> <p>Send a request message.</p> <p>Routes the message directly to the parent diameter node, where it will be forwarded through the network to the appropriate peer. The header application ID and end-to-end hop identifiers are set automatically, if not already present.</p> <p>The hop-by-hop identifier will be set by the node, if the message can be routed to a peer and if the identifier is not already present.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>Message</code> <p>A diameter message to send</p> required <code>timeout</code> <code>int</code> <p>A timeout in seconds to wait for an answer</p> <code>30</code> <p>Returns:</p> Type Description <code>Message</code> <p>A diameter answer message, if one was received within the timeout seconds, otherwise <code>None</code>. If the sent message was not a request, returns <code>None</code> immediately without waiting.</p>"},{"location":"api/application/#diameter.node.application.Application.wait_for_ready","title":"wait_for_ready","text":"<pre><code>wait_for_ready(timeout: int = 30)\n</code></pre> <p>Wait for application connectivity to become ready.</p> <p>Waits until at least one of the peers specified for the application has completed its CER/CEA procedure and become ready to accept requests. If all the configured peers for the application become again disconnected, <code>wait_for_ready</code> will block again, until at least one of the peers has returned and completed their CER/CEA.</p> <p>Note</p> <p>This method can be called every time before <code>send_request</code> is to be used, for increased certainty that a request will go through, however it will not guarantee that a peer will not go offline between calling this method and sending the request.</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>int</code> <p>Amount of time to wait, in seconds</p> <code>30</code> <p>Raises:</p> Type Description <code>ApplicationError</code> <p>If no peer becomes available before timeout</p>"},{"location":"api/application/#diameter.node.application.ApplicationError","title":"ApplicationError","text":"<p>             Bases: <code>Exception</code></p> <p>Base error class for all Application-raised errors.</p>"},{"location":"api/application/#diameter.node.application.EmptyAnswer","title":"EmptyAnswer","text":"<p>             Bases: <code>ApplicationError</code></p> <p>An error received when a diameter peer fails to respond.</p>"},{"location":"api/application/#diameter.node.application.RequestTimeout","title":"RequestTimeout","text":"<p>             Bases: <code>ApplicationError</code></p> <p>An error received when no answer is received within a given timeout.</p>"},{"location":"api/application/#diameter.node.application.SimpleThreadingApplication","title":"SimpleThreadingApplication","text":"<pre><code>SimpleThreadingApplication(\n    application_id: int = None,\n    is_acct_application: bool = False,\n    is_auth_application: bool = False,\n    max_threads: int = 0,\n    request_handler: Callable = None,\n)\n</code></pre> <p>             Bases: <code>ThreadingApplication</code></p> <p>A diameter application that starts a thread for each request.</p> <p>An alternative to the base threading application, that does not require subclassing or overwriting. The implementing party should pass a callback function in the <code>request_handler</code> argument. The application will call the passed function for every received request in a separate thread, passing an instance of the app itself and the message to handle as arguments.</p> <p>If the application acts as a client only and never expects any requests, the callback function is optional.</p> <pre><code>from diameter.node.application import SimpleThreadingApplication\nfrom diameter.message import constants\n\ndef handle_request(app: Application, message: Message):\n    print(\"Got\", message)\n    answer = app.generate_answer(message)\n    return answer\n\napp = SimpleThreadingApplication(\n    constants.APP_DIAMETER_BASE_ACCOUNTING,\n    is_acct_application=True,\n    request_handler=handle_request)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>application_id</code> <code>int</code> <p>Authentication application ID</p> <code>None</code> <code>is_acct_application</code> <code>bool</code> <p>Flag the application as an accounting app</p> <code>False</code> <code>is_auth_application</code> <code>bool</code> <p>Flag the application as an authorisation app</p> <code>False</code> <code>max_threads</code> <code>int</code> <p>Maximum threads to start simultaneously for processing messages. When maximum thread count is reached, the application does not handle any further messages, until at least one of the already started threads has exited. If set to 0, the amount of threads to spawn is unlimited.</p> <code>0</code> <code>request_handler</code> <code>Callable</code> <p>Any callable that will be called whenever a request is received. It will receive an instance of the app and request message as its arguments and is expected to return an answer message</p> <code>None</code>"},{"location":"api/application/#diameter.node.application.ThreadingApplication","title":"ThreadingApplication","text":"<pre><code>ThreadingApplication(\n    application_id: int = None,\n    is_acct_application: bool = False,\n    is_auth_application: bool = False,\n    max_threads: int = 0,\n)\n</code></pre> <p>             Bases: <code>Application</code></p> <p>A diameter application that starts a thread for each request.</p> <p>An alternative to the base application, where each message received by the diameter node is handled in a separate thread. The implementing party should override the <code>handle_request</code> method and do the message processing work within, returning a new answer.</p> <p>Parameters:</p> Name Type Description Default <code>application_id</code> <code>int</code> <p>Authentication application ID</p> <code>None</code> <code>is_acct_application</code> <code>bool</code> <p>Flag the application as an accounting app</p> <code>False</code> <code>is_auth_application</code> <code>bool</code> <p>Flag the application as an authorisation app</p> <code>False</code> <code>max_threads</code> <code>int</code> <p>Maximum threads to start simultaneously for processing messages. When maximum thread count is reached, the application does not handle any further messages, until at least one of the already started threads has exited. If set to 0, the amount of threads to spawn is unlimited.</p> <code>0</code>"},{"location":"api/application/#diameter.node.application.ThreadingApplication.handle_request","title":"handle_request","text":"<pre><code>handle_request(message: Message) -&gt; Message | None\n</code></pre> <p>Called by diameter node every time a request message is received.</p> <p>Unlike the base <code>Application</code> version of this same method, the <code>handle_request</code> is expected to return an answer, either <code>None</code> or a valid diameter Message. The return value of the method is sent automatically back towards the network. Any exceptions raised by the method are caught and result in a DIAMETER_UNABLE_TO_COMPLY result being returned to the network.</p>"},{"location":"api/message/","title":"Message","text":"<p>API reference for <code>diameter.message</code>.</p> <p>Diameter base message implementation.</p> <p>This module contains the base functions for encoding and decoding diameter message headers and messages.</p>"},{"location":"api/message/#diameter.message.Message","title":"Message","text":"<pre><code>Message(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>Base message class.</p> <p>All implemented diameter commands extend this class.</p> <p>The base message class is not intended to be used directly; its main purpose is to provide the Message.from_bytes class method, for parsing network-received bytes into Python diameter command message instances.</p>"},{"location":"api/message/#diameter.message.Message.code","title":"code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>code: int = 0\n</code></pre> <p>Diameter command code value.</p>"},{"location":"api/message/#diameter.message.Message.header","title":"header  <code>instance-attribute</code>","text":"<pre><code>header: MessageHeader = header or MessageHeader()\n</code></pre> <p>A message header. Always exists, defaults to an empty header for  new messages.</p> <p>Note</p> <p>The <code>length</code> property of the message header is zero for newly  created messages and will not be set until the message is rendered using the as_bytes method.</p>"},{"location":"api/message/#diameter.message.Message.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = 'Unknown'\n</code></pre> <p>A human-readable diameter command code name, e.g. \"Accounting-Request\".</p>"},{"location":"api/message/#diameter.message.Message.append_avp","title":"append_avp","text":"<pre><code>append_avp(avp: Avp)\n</code></pre> <p>Add an AVP to the internal list of AVPs.</p>"},{"location":"api/message/#diameter.message.Message.as_bytes","title":"as_bytes","text":"<pre><code>as_bytes() -&gt; bytes\n</code></pre> <p>Retrieve entire message as bytes.</p> <p>Retrieving the message also builds each AVP it contains. Until this point, the list of AVPs has not been built yet and the message header length is still zero. The header length is updated every time <code>as_bytes()</code> is called.</p>"},{"location":"api/message/#diameter.message.Message.find_avps","title":"find_avps","text":"<pre><code>find_avps(\n    *code_and_vendor: tuple[int, int], alt_list: list[Avp] = None\n) -&gt; list[Avp]\n</code></pre> <p>Find specific AVPs in the message internal AVP tree.</p> <p>If more than one <code>code_and_vendor</code> pair is given, the list is assumed to be a chain of AVPs to follow. The returned list of AVPs will be the AVPs found at the end of each chain.</p> <p>Examples:</p> <p>In an AVP structure such as:</p> <pre><code>Multiple-Services-Credit-Control &lt;Code: 0x1c8, Flags: 0x40 (-M-), Length: 168&gt;\n  Requested-Service-Unit &lt;Code: 0x1b5, Flags: 0x40 (-M-), Length: 0&gt;\n  Used-Service-Unit &lt;Code: 0x1be, Flags: 0x40 (-M-), Length: 84&gt;\n    CC-Time &lt;Code: 0x1a4, Flags: 0x40 (-M-), Length: 12, Val: 9&gt;\n    CC-Total-Octets &lt;Code: 0x1a5, Flags: 0x40 (-M-), Length: 16, Val: 0&gt;\n</code></pre> <p>The \"CC-Total-Octets\" AVP can be found with:</p> <pre><code>&gt;&gt;&gt; msg = Message()\n&gt;&gt;&gt; avp = msg.find_avps(\n&gt;&gt;&gt;     (AVP_MULTIPLE_SERVICES_CREDIT_CONTROL, 0),\n&gt;&gt;&gt;     (AVP_USED_SERVICE_UNIT, 0),\n&gt;&gt;&gt;     (AVP_CC_TOTAL_OCTETS, 0))\n&gt;&gt;&gt; print(avp[0])\nCC-Total-Octets &lt;Code: 0x1a5, Flags: 0x40 (-M-), Length: 16, Val: 0&gt;\n</code></pre> <p>The search is cached internally, repeating the same find operation will return a cached result.</p> <p>Note</p> <p>Searching for AVPs can be somewhat resource intensive, especially for larger command structures. For messages constructed from received network bytes, it is much cheaper to simply access the values of the message attributes directly. E.g. the example above is the same as:</p> <pre><code>&gt;&gt;&gt; avp = msg.multiple_services_credit_control[0].used_service_unit[0].cc_total_octets\n&gt;&gt;&gt; print(avp[0])\n0\n</code></pre> <p>The method can also be used to search any arbitrary AVP list, by passing an optional keyword argument <code>alt_avps</code>.</p>"},{"location":"api/message/#diameter.message.Message.from_bytes","title":"from_bytes  <code>classmethod</code>","text":"<pre><code>from_bytes(\n    msg_data: bytes, plain_msg: bool = False\n) -&gt; _AnyMessageType\n</code></pre> <p>Generate a new Message from network received bytes.</p> <p>Accepts a byte string containing received network data and constructs a new <code>Message</code> instance, returning one of its subclasses, if the command code is a known one.</p> <p>If possible, the returned insance is one of the specific subclasses, e.g. <code>CreditControlRequest</code> or <code>CapabilitiesExchangeRequest</code>, which attempt to be as smart as possible and offer direct access to AVPs as class attributes, i.e. <code>CreditControlRequest.session_id</code>. If this is not wanted, the additional keyword argument <code>plain_msg</code> can be set to True, which returns just an instance of <code>Message</code> that holds the list of parsed AVPs and does nothing else.</p> <pre><code>&gt;&gt;&gt; # construct a specific Message with parsed attributes\n&gt;&gt;&gt; ccr = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; ccr.session_id\nlabocs1.gy;379;3434872354\n&gt;&gt;&gt; # construct a plain message with no attribute access\n&gt;&gt;&gt; msg = Message.from_bytes(b\"...\", plain_msg=True)\n&gt;&gt;&gt; # does not work\n&gt;&gt;&gt; msg.session_id\nAttributeError: 'CreditControl' object has no attribute 'session_id'\n&gt;&gt;&gt; # this will work\n&gt;&gt;&gt; session_id = msg.find_avps((AVP_SESSION_ID, 0))[0]\n&gt;&gt;&gt; session_id.value\nlabocs1.gy;379;3434872354\n</code></pre>"},{"location":"api/message/#diameter.message.Message.to_answer","title":"to_answer","text":"<pre><code>to_answer() -&gt; _AnyMessageType\n</code></pre> <p>Produce answer from a request.</p> <p>Copies the request message header to a new answer message, clearing all the flags except the proxyable bit. Attempts to by determine if a suitable python Answer class exists, if not, uses the base class and returns a new instance with the copied header.</p>"},{"location":"api/message/#diameter.message.Message.type_factory","title":"type_factory  <code>classmethod</code>","text":"<pre><code>type_factory(header: MessageHeader) -&gt; Type[_AnyMessageType] | None\n</code></pre> <p>Generate a type that should be used to create new instances.</p> <p>This method is called internally by Message.from_bytes and it can be overridden by inheriting classes to indicate the specific type of message class to generate, e.g. in order to produce different types for \"Request\" and \"Answer\" messages, based on the given header.</p> <p>If no type is returned, the base class type will be used.</p>"},{"location":"api/message/#diameter.message.MessageHeader","title":"MessageHeader","text":"<pre><code>MessageHeader(\n    version: int = 1,\n    length: int = 0,\n    command_flags: int = 0,\n    command_code: int = 0,\n    application_id: int = 0,\n    hop_by_hop_identifier: int = 0,\n    end_to_end_identifier: int = 0,\n)\n</code></pre>"},{"location":"api/message/#diameter.message.DefinedMessage","title":"DefinedMessage","text":"<pre><code>DefinedMessage(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>Message</code></p> <p>A base class for every diameter message that is defined in Python.</p> <p>Every subclass of this class has AVPs defined as python instance attributes, defined based on the corresponding diameter specification.</p> <p>The attribute values can be changed. When a <code>DefinedMessage</code> instance is converted back to bytes, appropriate AVPs are generated based on the set instance attributes.</p>"},{"location":"api/message/#diameter.message.DefinedMessage.avps","title":"avps  <code>property</code> <code>writable</code>","text":"<pre><code>avps: list[Avp]\n</code></pre> <p>Full list of all AVPs within the message.</p> <p>If the message was generated from network-received bytes, the list of AVPs may not be in the same order as originally received. The returned list of AVPs contains first the AVPs defined by the base rfc6733 spec, if set, followed by any unknown AVPs.</p>"},{"location":"api/message/#diameter.message.DefinedMessage.append_avp","title":"append_avp","text":"<pre><code>append_avp(avp: Avp)\n</code></pre> <p>Add an individual custom AVP.</p>"},{"location":"api/message/#diameter.message.UndefinedMessage","title":"UndefinedMessage","text":"<pre><code>UndefinedMessage(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>Message</code></p> <p>A base class for every unknown command message.</p> <p>Every diameter command message that does not map to an instance of <code>DefinedMessage</code> will be represented as an instance of <code>UndefinedMessage</code>.</p> <p>This class will automatically attempt to convert received AVPs into read-only instance attributes, using a naive conversion based on the AVP's name. The AVP name is converted into lower case and all \"-\" are replaced with underscores. I.e. a \"Visited-PLMN-Id\" AVP would be converted to a \"visited_plmn_id\" instance attribute.</p> <p>If an AVP appears multiple times in the original message, it is converted into a list of AVPs.</p> <p>If an AVP is of the type Grouped, it is converted into an instance of <code>UndefinedGroupedAvp</code> and its sub-AVPs are set as instance attributes as well.</p> <p>Note</p> <p>Unlike <code>DefinedMessage</code>, instances of this class cannot be converted back to bytes; there is no conversion of set instance attributes into actual AVPs. Instances of this class are effectively read-only.</p>"},{"location":"api/message/#diameter.message.dump","title":"dump","text":"<pre><code>dump(msg: Message) -&gt; str\n</code></pre> <p>Produce a human-readable representation of the given message.</p> <p>Produces a recursive text dump of the given message, its header and all AVPs that it contains. Will work also on unknown AVPs and message command codes; data that is not known to the diameter package is marked with \"Unknown\".</p> <p>Is essentially the same as calling <code>str</code> on the message itself, and then recursively looping through each AVP and calling <code>str(avp)</code>.</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>Message</code> <p>Any message type</p> required <p>Sample output:</p> <pre><code>Credit-Control &lt;Version: 0x01, Length: 312, Flags: 0x40 (proxyable), Hop-by-Hop Identifier: 0x2711, End-to-End Identifier: 0x4e21&gt;\n  Session-Id &lt;Code: 0x107, Flags: 0x40 (-M-), Length: 73, Val: sctp-saegwc-poz01.lte.orange.pl;221424325;287370797;65574b0c-2d02&gt;\n  Result-Code &lt;Code: 0x10c, Flags: 0x40 (-M-), Length: 12, Val: 2001&gt;\n  Origin-Host &lt;Code: 0x108, Flags: 0x00 (---), Length: 21, Val: b'ocs6.mvno.net'&gt;\n  Origin-Realm &lt;Code: 0x128, Flags: 0x00 (---), Length: 16, Val: b'mvno.net'&gt;\n  Auth-Application-Id &lt;Code: 0x102, Flags: 0x40 (-M-), Length: 12, Val: 4&gt;\n  CC-Request-Type &lt;Code: 0x1a0, Flags: 0x40 (-M-), Length: 12, Val: 2&gt;\n  CC-Request-Number &lt;Code: 0x19f, Flags: 0x40 (-M-), Length: 12, Val: 952&gt;\n  Multiple-Services-Credit-Control &lt;Code: 0x1c8, Flags: 0x40 (-M-), Length: 128&gt;\n    Granted-Service-Unit &lt;Code: 0x1af, Flags: 0x40 (-M-), Length: 24&gt;\n      CC-Total-Octets &lt;Code: 0x1a5, Flags: 0x40 (-M-), Length: 16, Val: 174076000&gt;\n    Rating-Group &lt;Code: 0x1b0, Flags: 0x40 (-M-), Length: 12, Val: 8000&gt;\n    Validity-Time &lt;Code: 0x1c0, Flags: 0x40 (-M-), Length: 12, Val: 3600&gt;\n    Result-Code &lt;Code: 0x10c, Flags: 0x40 (-M-), Length: 12, Val: 2001&gt;\n    Final-Unit-Indication &lt;Code: 0x1ae, Flags: 0x40 (-M-), Length: 44&gt;\n      Final-Unit-Action &lt;Code: 0x1c1, Flags: 0x40 (-M-), Length: 12, Val: 0&gt;\n      Unknown &lt;Code: 0x266e, Flags: 0x80 (V--), Length: 21, Vnd: None, Val: b'TERMINATE'&gt;\n    Quota-Holding-Time &lt;Code: 0x367, Flags: 0xc0 (VM-), Length: 16, Vnd: TGPP, Val: 0&gt;\n</code></pre> <p>Note that:</p> <ul> <li>Message header version, flags and identifiers are as hexadecimal strings</li> <li>AVP flags are shown as three letters, \"VMP\", where \"V\" indicates vendor     specific, \"M\" indicates mandatory and \"P\" indicates private. If a flag     is not set, it is replaced by a \"-\"</li> <li>AVP codes are in hexadecimal</li> <li>Unknown AVPs are rendered, but shown as \"Unknown\"</li> </ul>"},{"location":"api/node/","title":"Node","text":"<p>API reference for <code>diameter.node</code>.</p>"},{"location":"api/node/#diameter.node.node.Node","title":"Node","text":"<pre><code>Node(\n    origin_host: str,\n    realm_name: str,\n    ip_addresses: list[str] = None,\n    tcp_port: int = None,\n    sctp_port: int = None,\n    vendor_ids: list[int] = None,\n)\n</code></pre> <p>A diameter node.</p> <p>A single diameter node represents the local peer. It handles connections to other peers, exchanging capabilities-exchange, device-watchdog and disconnect-peer requests and answers on its own.</p> <p>The node can act either as a server or as a client. In both cases it will handle both incoming and outgoing requests, however when acting as a client, other diameter nodes cannot connect to it, all connections must be initiated and managed by the client. When acting as a server, connections can be established by any party.</p> <p>The node supports both TCP and SCTP transport modes. When acting as a server, it can always listen on multiple addresses, however this is only useful when utilising SCTP, as other peers will only connect to a single TCP address at a time.</p> <p>The node can connect to multiple peers simultaneously; peers can be added using <code>Node.add_peer</code>. Both TCP and SCTP transport modes are accepted and can be mixed at will. Peers can be flagged as persistent, in which case the Node will periodically attempt to reconnect, if a connection is lost.</p> <pre><code>&gt;&gt;&gt; node = Node()\n&gt;&gt;&gt; node.add_peer(\"aaa://dra1.gy:3868;transport=tcp\", \"realm.net\", [\"10.16.17.5\"])\n&gt;&gt;&gt; node.add_peer(\"aaa://dra2.gy;transport=sctp\", \"realm.net\", [\"10.16.17.6\", \"172.16.0.6\"])\n&gt;&gt;&gt; node.start()\n</code></pre> <p>Any other message than CER/CEA, DWR/DWA and DPR/DPA will be routed to a diameter application that is expected to do the actual work. Applications can be created by subclassing either diameter.node.application.Application or diameter.node.application.ThreadingApplication and adding them to this node using add_application. If a message is received that is intended for an application that does not exist, a diameter error is returned to the peer.</p> <p>Outgoing requests are routed based on realm and peer routing tables; if a request does not contain the Destination-Host AVP, the request is forwarded to a peer that has a matching realm and application ID set. If multiple peers are available, a rudimentary load balancing based on least used connections is used. Answers are routed back to the peer that they originated from, or dropped if the peer has gone away.</p> <p>Parameters:</p> Name Type Description Default <code>origin_host</code> <code>str</code> <p>Our local node FQDN, must include the realm</p> required <code>realm_name</code> <code>str</code> <p>Realm FQDN</p> required <code>ip_addresses</code> <code>list[str]</code> <p>An optional list of IP address that the node will listen on for incoming requests. Must be set if the node is to act as a server. When not set, the node will not listen for any incoming connection attempts.</p> <code>None</code> <code>tcp_port</code> <code>int</code> <p>An optional TCP listen port, should be set if <code>ip_addresses</code> is set, defaults to 3868 if nothing is given</p> <code>None</code> <code>sctp_port</code> <code>int</code> <p>An optional SCTP listen port, should be set if <code>ip_addresses</code> is set, defaults to 3868 if nothing is given</p> <code>None</code> <code>vendor_ids</code> <code>list[int]</code> <p>List of supported vendor IDs. If not set, will default to all known vendor IDs. The list of vendor IDs is only used in advertising the node's capabilities in  CER/CEA</p> <code>None</code>"},{"location":"api/node/#diameter.node.node.Node.applications","title":"applications  <code>instance-attribute</code>","text":"<pre><code>applications: list[Application] = []\n</code></pre> <p>List of configured applications.</p>"},{"location":"api/node/#diameter.node.node.Node.cea_timeout","title":"cea_timeout  <code>instance-attribute</code>","text":"<pre><code>cea_timeout: int = 4\n</code></pre> <p>Default timeout waiting for a CEA after sending a CER, in seconds. Will be used if no specific timeout value has been configured for a  peer.</p>"},{"location":"api/node/#diameter.node.node.Node.cer_timeout","title":"cer_timeout  <code>instance-attribute</code>","text":"<pre><code>cer_timeout: int = 4\n</code></pre> <p>Default timeout waiting for a CER after receiving a connection  attempt, in seconds. Will be used if no specific timeout value has been  configured for a peer</p>"},{"location":"api/node/#diameter.node.node.Node.connections","title":"connections  <code>instance-attribute</code>","text":"<pre><code>connections: dict[str, PeerConnection] = {}\n</code></pre> <p>Currently handled peer connections.</p>"},{"location":"api/node/#diameter.node.node.Node.dwa_timeout","title":"dwa_timeout  <code>instance-attribute</code>","text":"<pre><code>dwa_timeout: int = 4\n</code></pre> <p>Default timeout waiting for a DWA after sending a DWR, in seconds.  Will be used if no specific timeout value has been configured for a  peer.</p>"},{"location":"api/node/#diameter.node.node.Node.end_to_end_seq","title":"end_to_end_seq  <code>instance-attribute</code>","text":"<pre><code>end_to_end_seq = SequenceGenerator(self.state_id)\n</code></pre> <p>An end-to-end identifier generator. The next identifier can be  retrieved with <code>Node.end_to_end_seq.next_sequence()</code>.</p>"},{"location":"api/node/#diameter.node.node.Node.idle_timeout","title":"idle_timeout  <code>instance-attribute</code>","text":"<pre><code>idle_timeout: int = 30\n</code></pre> <p>Default time spent idle before a DWR is triggered, in seconds.  Will be used if no specific timeout value has been configured for a  peer.</p>"},{"location":"api/node/#diameter.node.node.Node.peer_sockets","title":"peer_sockets  <code>instance-attribute</code>","text":"<pre><code>peer_sockets: dict[str, socket.socket | sctp.sctpsocket] = {}\n</code></pre> <p>Currently held sockets, one for each peer connection.</p>"},{"location":"api/node/#diameter.node.node.Node.peers","title":"peers  <code>instance-attribute</code>","text":"<pre><code>peers: dict[str, Peer] = {}\n</code></pre> <p>All currently known peers as a dictionary of host identities as  keys and instances of <code>Peer</code> as values..</p>"},{"location":"api/node/#diameter.node.node.Node.peers_logging","title":"peers_logging  <code>instance-attribute</code>","text":"<pre><code>peers_logging: bool = False\n</code></pre> <p>If enabled, will dump a JSON representation of each peer configuration and their current connection status, at every <code>wakeup_interval</code> seconds. The logging will be done through \"diameter.stats\" log facility an can also be silenced by changing the log level to anything above DEBUG.</p>"},{"location":"api/node/#diameter.node.node.Node.product_name","title":"product_name  <code>instance-attribute</code>","text":"<pre><code>product_name: str = 'python-diameter'\n</code></pre> <p>Our product name.</p>"},{"location":"api/node/#diameter.node.node.Node.retransmit_queue_size","title":"retransmit_queue_size  <code>instance-attribute</code>","text":"<pre><code>retransmit_queue_size: int = 10240\n</code></pre> <p>The amount of request end-to-end identifiers to \"remember\" after  sending an answer. The list of remembered identifiers is checked every  time a request with the \"T\" flag is received. The request will be  rejected if a matching end-to-end identifier is still present in the  queue. The size of this should match roughly with the amount of  requests that are expected to arrive within a time period that retransmits may arrive. There is no noticeable performance loss when setting this higher than the default value of <code>10240</code>.</p>"},{"location":"api/node/#diameter.node.node.Node.session_generator","title":"session_generator  <code>instance-attribute</code>","text":"<pre><code>session_generator = SessionGenerator(self.origin_host)\n</code></pre> <p>A unique diameter session ID generator. The next unique session  ID can be retrieved <code>Node.session_generator.next_id()</code>.</p>"},{"location":"api/node/#diameter.node.node.Node.socket_peers","title":"socket_peers  <code>instance-attribute</code>","text":"<pre><code>socket_peers: dict[int, PeerConnection] = {}\n</code></pre> <p>Peer connection lookup based on socket fileno.</p>"},{"location":"api/node/#diameter.node.node.Node.statistics","title":"statistics  <code>property</code>","text":"<pre><code>statistics: NodeStats\n</code></pre> <p>Calculated, cumulated and averaged statistics for the entire node.</p>"},{"location":"api/node/#diameter.node.node.Node.statistics_history","title":"statistics_history  <code>instance-attribute</code>","text":"<pre><code>statistics_history: deque[dict] = deque(maxlen=1440)\n</code></pre> <p>A list of node statistics snapshots, taken at one minute intervals and kept for 24 hours. Each snapshot is a dictionary representation of a NodeStats instance.</p>"},{"location":"api/node/#diameter.node.node.Node.stats_logging","title":"stats_logging  <code>instance-attribute</code>","text":"<pre><code>stats_logging: bool = False\n</code></pre> <p>If enabled, will dump a JSON representation of the statistics for each peer in the logs, at every <code>wakeup_interval</code> seconds. The logging will be done through \"diameter.stats\" log facility an can also be silenced by changing the log level to anything above DEBUG. Enabling this may have a slight performance impact, as the main thread will block while the statistics are being gathered.</p>"},{"location":"api/node/#diameter.node.node.Node.vendor_id","title":"vendor_id  <code>instance-attribute</code>","text":"<pre><code>vendor_id: int = 99999\n</code></pre> <p>Our vendor ID. Defaults to \"unknown\".</p>"},{"location":"api/node/#diameter.node.node.Node.wakeup_interval","title":"wakeup_interval  <code>instance-attribute</code>","text":"<pre><code>wakeup_interval: int = 6\n</code></pre> <p>Time in seconds between forced wakeups while waiting for connection sockets to become active. This timer value controls how often peer  timers are checked, how often reconnects are attempted and how often  statistics are dumped in the logfiles. </p> <p>As this also defines the interval at which peer timers are checked, it  is also the smallest possible value for a peer timer value. Setting  this value very low will consume more CPU, setting it too high will  make observing short timeouts impossible.</p> <p>This value also defines how long a node will continue to run, after  <code>stop</code> with <code>force</code> argument set to <code>True</code> is called.</p>"},{"location":"api/node/#diameter.node.node.Node.add_application","title":"add_application","text":"<pre><code>add_application(app: Application, peers: list[Peer])\n</code></pre> <p>Register an application with diameter node.</p> <p>The added application will receive diameter requests that the node receives, which an application-id message header value matching the application's ID.</p> <p>When added, the node calls the application's <code>start</code> method immediately. The application is stopped when the node stops.</p> <p>Parameters:</p> Name Type Description Default <code>app</code> <code>Application</code> <p>An instance of a class that implements <code>Application</code></p> required <code>peers</code> <code>list[Peer]</code> <p>A list of Peer instances that have been returned by <code>Node.add_peer</code>. The given list of peers will be used to determine how messages are to be routed</p> required"},{"location":"api/node/#diameter.node.node.Node.add_peer","title":"add_peer","text":"<pre><code>add_peer(\n    peer_uri: str,\n    realm_name: str = None,\n    ip_addresses: list[str] = None,\n    is_persistent: bool = False,\n    is_default: bool = False,\n) -&gt; Peer\n</code></pre> <p>Add a known peer.</p> <p>The node will only connect to known connections and (optionally) accept requests from known connections only.</p> <p>Parameters:</p> Name Type Description Default <code>peer_uri</code> <code>str</code> <p>A diameter node's DiameterIdentity as a DiameterURI string, i.e. \"aaa://:;transport=\". The URI must contain at least the scheme and FQDN; the port and transport will default to 3868 and \"TCP\" if not included required <code>realm_name</code> <code>str</code> <p>Peer realm name. If not given, will be set to the same realm as the node has been configured with</p> <code>None</code> <code>ip_addresses</code> <code>list[str]</code> <p>A list of IP addresses for the peer. If not given, no outgoing connection attempt to the peer will be made. For TCP, only the first IP of the list is used. For SCTP, a connection will be established to every address</p> <code>None</code> <code>is_persistent</code> <code>bool</code> <p>Enable persistent connection to the peer. If enabled, the node will automatically re-establish a connection to the peer on startup and at connection loss</p> <code>False</code> <code>is_default</code> <code>bool</code> <p>Set this peer as the default peer for the realm. Note that multiple defaults is permitted. Setting multiple pers as default will result in load balancing between the peers.</p> <code>False</code> <p>Returns:</p> Type Description <code>Peer</code> <p>An instance of the peer. The returned instance is the actual peer instance, permitting configuration to be adjusted after node has been started, by altering its attributes.</p>"},{"location":"api/node/#diameter.node.node.Node.close_connection_socket","title":"close_connection_socket","text":"<pre><code>close_connection_socket(\n    conn: PeerConnection,\n    disconnect_reason: int = DISCONNECT_REASON_UNKNOWN,\n)\n</code></pre> <p>Shuts down connection socket and stops observing it forever.</p> <p>If the corresponding peer has persistency enabled, the node will automatically re-establish the connection after <code>Node.reconnect_timeout</code> seconds.</p> <p>Closing the peer socket will automatically call <code>Node.remove_peer_connection</code>.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>PeerConnection</code> <p>An instance of a peer connection to disconnect</p> required <code>disconnect_reason</code> <code>int</code> <p>Reason for the connection being disconnected, one of the <code>PEER_DISCONNECT_REASON_*</code> constant values</p> <code>DISCONNECT_REASON_UNKNOWN</code>"},{"location":"api/node/#diameter.node.node.Node.remove_peer_connection","title":"remove_peer_connection","text":"<pre><code>remove_peer_connection(\n    conn: PeerConnection,\n    disconnect_reason: int = DISCONNECT_REASON_UNKNOWN,\n)\n</code></pre> <p>Removes a peer connection that is no longer connected.</p> <p>Warning</p> <p>This method should not be called directly, unless it is absolutely certain that the peer socket is no longer connected. The safer way is to use <code>Node.close_connection_socket</code> instead, which will first close the socket and then remove the peer.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>PeerConnection</code> <p>An instance of peer connection to remove from the list of active connections</p> required <code>disconnect_reason</code> <code>int</code> <p>A reason for the connection being disconnected, one of the <code>PEER_DISCONNECT_REASON_*</code> constant values.</p> <code>DISCONNECT_REASON_UNKNOWN</code>"},{"location":"api/node/#diameter.node.node.Node.route_answer","title":"route_answer","text":"<pre><code>route_answer(message: Message) -&gt; tuple[PeerConnection, Message]\n</code></pre> <p>Determine which peer should be used for sending an answer message.</p> <p>Should always be used by an application before sending an answer.</p> <p>Determines the proper peer to be used, by keeping track of which requests have been sent, and always forwarding answers in reverse direction to correct peer connections.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>Message</code> <p>The exact answer message to send</p> required <p>Returns:</p> Type Description <code>tuple[PeerConnection, Message]</code> <p>A tuple with an instance of a peer to route to, and the same message as was passed to the method.</p> <p>Raises:</p> Type Description <code>NotRoutable</code> <p>when there is either no peer waiting for the answer, or when the peer exists, but does not accept messages at the time</p>"},{"location":"api/node/#diameter.node.node.Node.route_request","title":"route_request","text":"<pre><code>route_request(\n    app: Application, message: Message\n) -&gt; tuple[PeerConnection, Message]\n</code></pre> <p>Determine which peer should be used for sending a request message.</p> <p>Should always be used by an application before sending a request.</p> <p>Determines the proper peer to be used for the particular message, by comparing the configured peer list with what is currently connected and ready to receive requests. If multiple connections are available, a rudimentary load balancing is used, with least-used peer selected.</p> <p>Sets the hop-by-hop identifier automatically based on the selected peer.</p> <p>Parameters:</p> Name Type Description Default <code>app</code> <code>Application</code> <p>The application instance that wants to send a request</p> required <code>message</code> <code>Message</code> <p>The exact message to send</p> required <p>Returns:</p> Type Description <code>tuple[PeerConnection, Message]</code> <p>A tuple with an instance of a peer to route to, and the same message as was passed to the method.</p> <p>Raises:</p> Type Description <code>NotRoutable</code> <p>when there is either no connections configured for the application, or if none of the configured connections is connected or accepting requests at the time</p>"},{"location":"api/node/#diameter.node.node.Node.send_message","title":"send_message","text":"<pre><code>send_message(conn: PeerConnection, message: Message)\n</code></pre> <p>Manually send a message towards a peer.</p> <p>Normally messages are sent through applications, but this method permits manually sending messages towards known connections.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>PeerConnection</code> <p>An instance of a peer connection to send the message to. The connection must be in <code>PEER_READY</code> or <code>PEER_READY_WAITING_DWA</code> state</p> required <code>message</code> <code>Message</code> <p>A valid diameter message instance to send, can be either a request or an answer.</p> required"},{"location":"api/node/#diameter.node.node.Node.start","title":"start","text":"<pre><code>start()\n</code></pre> <p>Start the node.</p> <p>This method must be called once after the peer has been created. At startup, the node will create the local listening sockets, start its work threads and connect to any connections that have persistent connections enabled.</p>"},{"location":"api/node/#diameter.node.node.Node.stop","title":"stop","text":"<pre><code>stop(wait_timeout: int = 180, force: bool = False)\n</code></pre> <p>Stop node.</p> <p>Stopping the node will emit a <code>Disconnect-PeerConnection-Request</code> towards each currently connected peer, with disonnect cause \"REBOOTING\". The node will then wait until each peer has produced a <code>Disconnect-PeerConnection-Answer</code>, and regardless of the answer's result code or error status, the peer sockets are closed. Some diameter vendors may also already close the socket from their end immediately, if no messages are pending.</p> <p>After all connections have disconnected, the node's own listening sockets will close, and afterwards the active applications are shut down.</p> <p>Parameters:</p> Name Type Description Default <code>wait_timeout</code> <code>int</code> <p>Set a timeout for the DPR/DPA procedure to cpmplete. This should be usually fairly high, as time must be given for not only for the DPR/DPA messages to travel, but also for the peer connections to empty their in- and out buffers and for the applications to finish processing responses.</p> <code>180</code> <code>force</code> <code>bool</code> <p>Optionally skip DPR/DPA procedure and just force each peer connection to close immediately, with a very short (5-10 seconds) wait period for their threads to join.</p> <code>False</code>"},{"location":"api/node/#diameter.node.node.NodeStats","title":"NodeStats  <code>dataclass</code>","text":"<p>Cumulated and averaged node statistics.</p> <p>Represents a snapshot with cumulated and averaged statistical values for all configured peers at the time of retrieval. The meaning of each statistical value is identical to those of PeerStats.</p>"},{"location":"api/node/#diameter.node.node.NodeStats.avg_response_time","title":"avg_response_time  <code>instance-attribute</code>","text":"<pre><code>avg_response_time: dict[str, float]\n</code></pre> <p>Average response time, split by message type.</p>"},{"location":"api/node/#diameter.node.node.NodeStats.avg_response_time_overall","title":"avg_response_time_overall  <code>instance-attribute</code>","text":"<pre><code>avg_response_time_overall: float\n</code></pre> <p>Overall average response time.</p>"},{"location":"api/node/#diameter.node.node.NodeStats.processed_req_per_second","title":"processed_req_per_second  <code>instance-attribute</code>","text":"<pre><code>processed_req_per_second: dict[str, float]\n</code></pre> <p>Rate of requests processed per second, split by message type.</p>"},{"location":"api/node/#diameter.node.node.NodeStats.processed_req_per_second_overall","title":"processed_req_per_second_overall  <code>instance-attribute</code>","text":"<pre><code>processed_req_per_second_overall: float\n</code></pre> <p>Rate of requests processed per second.</p>"},{"location":"api/node/#diameter.node.node.NodeStats.received_req_counters","title":"received_req_counters  <code>instance-attribute</code>","text":"<pre><code>received_req_counters: list[int]\n</code></pre> <p>Exact amount of requests received in the last minute, last five minutes and the last 15 minutes.</p>"},{"location":"api/node/#diameter.node.node.NodeStats.sent_result_code_range_counters","title":"sent_result_code_range_counters  <code>instance-attribute</code>","text":"<pre><code>sent_result_code_range_counters: dict[str, list[int]]\n</code></pre> <p>Exact amount of answers sent in the last minute, last five minutes and  the last 15 minutes, once for each diameter result code range. The result code range is expressed as a string in form of \"1xxx\", \"2xxx\" etc.</p>"},{"location":"api/node/#diameter.node.node.NodeError","title":"NodeError","text":"<p>             Bases: <code>Exception</code></p> <p>Base error for all exceptions raised by <code>Node</code>.</p>"},{"location":"api/node/#diameter.node.node.NotRoutable","title":"NotRoutable","text":"<p>             Bases: <code>NodeError</code></p> <p>Error raised when a message can not be routed to any peer.</p>"},{"location":"api/peer/","title":"Peer","text":"<p>API reference for <code>diameter.node.peer</code>.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_RECV","title":"PEER_RECV  <code>module-attribute</code>","text":"<pre><code>PEER_RECV = 1\n</code></pre> <p>Peer is a server, i.e. receives requests and sends answers.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_SEND","title":"PEER_SEND  <code>module-attribute</code>","text":"<pre><code>PEER_SEND = 2\n</code></pre> <p>Peer is a client, i.e. sends requests and receives answers.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_TRANSPORT_TCP","title":"PEER_TRANSPORT_TCP  <code>module-attribute</code>","text":"<pre><code>PEER_TRANSPORT_TCP = 10\n</code></pre> <p>Peer connection is via TCP.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_TRANSPORT_SCTP","title":"PEER_TRANSPORT_SCTP  <code>module-attribute</code>","text":"<pre><code>PEER_TRANSPORT_SCTP = 11\n</code></pre> <p>Peer connection is via SCTP.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_CONNECTING","title":"PEER_CONNECTING  <code>module-attribute</code>","text":"<pre><code>PEER_CONNECTING = 16\n</code></pre> <p>Peer is in a state waiting for socket to become active.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_CONNECTED","title":"PEER_CONNECTED  <code>module-attribute</code>","text":"<pre><code>PEER_CONNECTED = 17\n</code></pre> <p>Peer has established connection and is waiting for initial CER/CEA to  complete.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_READY","title":"PEER_READY  <code>module-attribute</code>","text":"<pre><code>PEER_READY = 18\n</code></pre> <p>Peer is ready to process messages.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_READY_WAITING_DWA","title":"PEER_READY_WAITING_DWA  <code>module-attribute</code>","text":"<pre><code>PEER_READY_WAITING_DWA = 19\n</code></pre> <p>Peer is ready to process messages, but is waiting for a DWA.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_DISCONNECTING","title":"PEER_DISCONNECTING  <code>module-attribute</code>","text":"<pre><code>PEER_DISCONNECTING = 26\n</code></pre> <p>Peer has sent a Disconnect-Peer-Request and is waiting for DPA.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_CLOSING","title":"PEER_CLOSING  <code>module-attribute</code>","text":"<pre><code>PEER_CLOSING = 27\n</code></pre> <p>Peer is about to be closed; it will no longer read any messages and will close its socket as soon as the write buffer has been emptied. This state is  not part of rfc6733, it is only an internal temporary flag.</p>"},{"location":"api/peer/#diameter.node.peer.PEER_CLOSED","title":"PEER_CLOSED  <code>module-attribute</code>","text":"<pre><code>PEER_CLOSED = 28\n</code></pre> <p>Peer has closed connection.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_DPR","title":"DISCONNECT_REASON_DPR  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_DPR = 32\n</code></pre> <p>Peer has been disconnected after receiving a peer disconnect request.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_NODE_SHUTDOWN","title":"DISCONNECT_REASON_NODE_SHUTDOWN  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_NODE_SHUTDOWN = 33\n</code></pre> <p>Peer has been disconnected, because node shutdown has been initiated.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_CLEAN_DISCONNECT","title":"DISCONNECT_REASON_CLEAN_DISCONNECT  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_CLEAN_DISCONNECT = 34\n</code></pre> <p>Peer has been disconnected due to no errors.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_SOCKET_FAIL","title":"DISCONNECT_REASON_SOCKET_FAIL  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_SOCKET_FAIL = 48\n</code></pre> <p>Peer has been disconnected, because the underlying socket has failed.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_GONE_AWAY","title":"DISCONNECT_REASON_GONE_AWAY  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_GONE_AWAY = 49\n</code></pre> <p>Peer has been disconnected, because the socket endpoint has gone away  (zero bytes read from socket).</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_FAILED_CONNECT","title":"DISCONNECT_REASON_FAILED_CONNECT  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_FAILED_CONNECT = 50\n</code></pre> <p>Peer has been disconnected, because the initial socket failed to connect.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_FAILED_CONNECT_CE","title":"DISCONNECT_REASON_FAILED_CONNECT_CE  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_FAILED_CONNECT_CE = 51\n</code></pre> <p>Peer has been disconnected, because the capabilities exchange failed to  complete after initial socket connect, e.g. due to a timeout.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_CER_REJECTED","title":"DISCONNECT_REASON_CER_REJECTED  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_CER_REJECTED = 52\n</code></pre> <p>Peer has been disconnected, because the sent capabilities exchange request was rejected by the other peer.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_DWA_TIMEOUT","title":"DISCONNECT_REASON_DWA_TIMEOUT  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_DWA_TIMEOUT = 53\n</code></pre> <p>Peer has been disconnected, because there was no response to a device  watchdog request within the configured timeout.</p>"},{"location":"api/peer/#diameter.node.peer.DISCONNECT_REASON_UNKNOWN","title":"DISCONNECT_REASON_UNKNOWN  <code>module-attribute</code>","text":"<pre><code>DISCONNECT_REASON_UNKNOWN = 64\n</code></pre> <p>Peer has been disconnected for unknown reasons.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters","title":"PeerCounters  <code>dataclass</code>","text":"<p>Peer message counters.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.cer","title":"cer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cer: int = 0\n</code></pre> <p>Amount of CER messages received.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.cea","title":"cea  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cea: int = 0\n</code></pre> <p>Amount of CEA messages sent.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.dwr","title":"dwr  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dwr: int = 0\n</code></pre> <p>Amount of DWR messages received.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.dwa","title":"dwa  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dwa: int = 0\n</code></pre> <p>Amount of DWA messages sent.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.dpr","title":"dpr  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dpr: int = 0\n</code></pre> <p>Amount of DPR messages received.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.dpa","title":"dpa  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dpa: int = 0\n</code></pre> <p>Amount of DPA messages sent.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.requests","title":"requests  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>requests: int = 0\n</code></pre> <p>Total amount of requests received.</p>"},{"location":"api/peer/#diameter.node.peer.PeerCounters.answers","title":"answers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>answers: int = 0\n</code></pre> <p>Total amount of messages sent.</p>"},{"location":"api/peer/#diameter.node.peer.PeerStats","title":"PeerStats","text":"<pre><code>PeerStats()\n</code></pre> <p>Peer statistics.</p>"},{"location":"api/peer/#diameter.node.peer.PeerStats.processed_req_per_second","title":"processed_req_per_second  <code>property</code>","text":"<pre><code>processed_req_per_second: dict[str, float]\n</code></pre> <p>Rate of requests processed per second, split by message type.</p> <p>Returns:</p> Type Description <code>dict[str, float]</code> <p>A dictionary with keys of diameter command names (e.g. \"Credit-Control\", \"Device-Watchdog\") and values of requests processed per second, derived from the total sum of work over the past 1024 requests for each message type.</p>"},{"location":"api/peer/#diameter.node.peer.PeerStats.processed_req_per_second_overall","title":"processed_req_per_second_overall  <code>property</code>","text":"<pre><code>processed_req_per_second_overall: float\n</code></pre> <p>Overall rate of requests processed per second.</p> <p>Derived from the total sum of work time over the past 1024 received requests.</p>"},{"location":"api/peer/#diameter.node.peer.PeerStats.avg_response_time","title":"avg_response_time  <code>property</code>","text":"<pre><code>avg_response_time: dict[str, float]\n</code></pre> <p>Average response time, split by message type.</p> <p>Returns:</p> Type Description <code>dict[str, float]</code> <p>A dictionary with keys of diameter command names (e.g. \"Credit-Control\", \"Device-Watchdog\") and values of response times in seconds, as an average over the last 1024 processed answers.</p>"},{"location":"api/peer/#diameter.node.peer.PeerStats.avg_response_time_overall","title":"avg_response_time_overall  <code>property</code>","text":"<pre><code>avg_response_time_overall: float\n</code></pre> <p>Overall average response time.</p> <p>Derived from the total sum of work time over the past 1024 processed answers.</p>"},{"location":"api/peer/#diameter.node.peer.Peer","title":"Peer  <code>dataclass</code>","text":"<p>Single configured or known peer.</p> <p>Collects all settings and a few timers for a single peer. The node collects one instance of <code>Peer</code> for every configured peer, or every discovered unknown peer. There exists one peer for each FQDN. An instance of <code>Peer</code> exists whether the peer is currently connected or not. The state peer connectivity is determined by the <code>connection</code> attribute.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.node_name","title":"node_name  <code>instance-attribute</code>","text":"<pre><code>node_name: str\n</code></pre> <p>Configured node name.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.realm_name","title":"realm_name  <code>instance-attribute</code>","text":"<pre><code>realm_name: str\n</code></pre> <p>Configured realm name.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.transport","title":"transport  <code>instance-attribute</code>","text":"<pre><code>transport: int\n</code></pre> <p>Transport method, either <code>PEER_TRANSPORT_TCP</code> or  <code>PEER_TRANSPORT_SCTP</code>.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.port","title":"port  <code>instance-attribute</code>","text":"<pre><code>port: int\n</code></pre> <p>Port number is always set, even if the peer has not been configured  for outgoing connections. It defaults to 3868.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.ip_addresses","title":"ip_addresses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_addresses: list[str] = dataclasses.field(default_factory=list)\n</code></pre> <p>A list of IP addresses configured for the peer.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.persistent","title":"persistent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>persistent: bool = False\n</code></pre> <p>Indicates that the connection to the peer is automatically established, at Node startup and at connection lost (see <code>reconnect_wait</code> timer). A  connection is automatically established regardless of whether the node acts  as a server or a client.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.always_reconnect","title":"always_reconnect  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>always_reconnect: bool = False\n</code></pre> <p>Indicates that the connection to the peer should always be attempted to be re-established, even if the peer has disconnected cleanly after a DPR/DPA procedure.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.cea_timeout","title":"cea_timeout  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cea_timeout: int = None\n</code></pre> <p>Timeout waiting for a CEA after sending a CER. If no CEA is received  within this timeframe, the connection to the peer is closed.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.cer_timeout","title":"cer_timeout  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cer_timeout: int = None\n</code></pre> <p>Timeout waiting for a CER after receiving a connection attempt. If the  peer does not send a CER within this timeframe, the connection is closed.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.dwa_timeout","title":"dwa_timeout  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dwa_timeout: int = None\n</code></pre> <p>Timeout waiting for a DWA after sending a DWR. If no DWA is received  within this timeframe, the connection to the peer is closed.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.idle_timeout","title":"idle_timeout  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>idle_timeout: int = None\n</code></pre> <p>Time spent idle before a DWR is triggered.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.reconnect_wait","title":"reconnect_wait  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reconnect_wait: int = 30\n</code></pre> <p>Time waited before a reconnect is attempted for a persistent peer. The wait time is only applied in a scenario where the peer connection has failed least once and has the <code>persistent</code> attribute enabled. If the peer has not yet (ever) been disconnected, a connection attempt is made immediately.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.disconnect_reason","title":"disconnect_reason  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>disconnect_reason: int | None = None\n</code></pre> <p>Reason for the peer having been disconnected. One of the  <code>PEER_DISCONNECT_REASON_*</code> constants, or <code>None</code> if the peer has not yet  been disconnected. The value is reset back to <code>None</code> after a peer has  been reconnected.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.last_connect","title":"last_connect  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_connect: int = None\n</code></pre> <p>Unix timestamp of last successful connect.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.last_disconnect","title":"last_disconnect  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_disconnect: int = None\n</code></pre> <p>Unix timestamp of last disconnect.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.counters","title":"counters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>counters: PeerCounters = dataclasses.field(\n    default_factory=PeerCounters\n)\n</code></pre> <p>Peer message counters.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.statistics","title":"statistics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>statistics: PeerStats = dataclasses.field(default_factory=PeerStats)\n</code></pre> <p>Peer connection statistics.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.connection","title":"connection  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>connection: PeerConnection = None\n</code></pre> <p>The actual, current connection to the peer. If the peer is not  connected, the value will be <code>None</code>. Note that even if the peer may be  connected, the actual connection readiness is determined by the  <code>Peer.connection.state</code>  attribute.</p>"},{"location":"api/peer/#diameter.node.peer.Peer.disconnected_since","title":"disconnected_since  <code>property</code>","text":"<pre><code>disconnected_since: int\n</code></pre> <p>Time since last disconnect, as seconds. If the peer has never been disconnected, the value -1 is returned.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection","title":"PeerConnection","text":"<pre><code>PeerConnection(\n    peer_ip: list[str] | str,\n    peer_port: int,\n    peer_direction: int,\n    interrupt_fileno: int,\n)\n</code></pre> <p>A connection with another diameter node.</p> <p>Instances of this class are assigned as the value for the <code>Peer.connection</code> attribute. Connections are created and closed by the parent governing diameter node.</p> <p>Parameters:</p> Name Type Description Default <code>peer_ip</code> <code>list[str] | str</code> <p>Either a list of possible IP addresses to connect to, or an individual IP address that the connection socket is already connected with.</p> required <code>peer_port</code> <code>int</code> <p>Peer connection port number</p> required <code>peer_direction</code> <code>int</code> <p>Indicates whether the connection is either a receiving or a sending instance</p> required <code>interrupt_fileno</code> <code>int</code> <p>A write socket/pipe file number that this connection will write its connection ID every time it needs attention. This occurs most often when the connection has something to write and needs to wake up the parent node's <code>select</code> sleep.</p> required"},{"location":"api/peer/#diameter.node.peer.PeerConnection.auth_application_ids","title":"auth_application_ids  <code>instance-attribute</code>","text":"<pre><code>auth_application_ids: list[int] = []\n</code></pre> <p>List of supported authentication application IDs for this peer. The  list is populated when CER/CEA has been completed and will be used by  the node to route messages to their proper applications.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.acct_application_ids","title":"acct_application_ids  <code>instance-attribute</code>","text":"<pre><code>acct_application_ids: list[int] = []\n</code></pre> <p>List of supported accounting application IDs for this peer. The  list is populated when CER/CEA has been completed and will be used by  the node to route messages to their proper applications.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.hop_by_hop_seq","title":"hop_by_hop_seq  <code>instance-attribute</code>","text":"<pre><code>hop_by_hop_seq = SequenceGenerator()\n</code></pre> <p>A sequence generator that will produce unique hop-by-hop IDs. Use  <code>PeerConnection.hop_by_hop_seq.next_sequence()</code> to retrieve the next  ID.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.host_identity","title":"host_identity  <code>instance-attribute</code>","text":"<pre><code>host_identity: str = ''\n</code></pre> <p>Resolved peer host ID. Will be set after CER/CEA has taken place.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.host_ip_address","title":"host_ip_address  <code>instance-attribute</code>","text":"<pre><code>host_ip_address: list[str] = []\n</code></pre> <p>Node's host IP addresses, resolved at the time of peer creation.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.ident","title":"ident  <code>instance-attribute</code>","text":"<pre><code>ident: str = '00' * 6\n</code></pre> <p>A unique (for the lifetime of the parent node) connection  identifier, a 6-byte long hexadecimal string.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.ip","title":"ip  <code>instance-attribute</code>","text":"<pre><code>ip: list[str] | str = peer_ip\n</code></pre> <p>The actual peer IP address(es) that the connection socket is  connected with.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.message_handler","title":"message_handler  <code>instance-attribute</code>","text":"<pre><code>message_handler: Callable[[PeerConnection, _AnyMessageType], None] = lambda , : None\n</code></pre> <p>A callback function that will be called each time a diameter  message is received. This should always be <code>Node._receive_message</code>.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.node_name","title":"node_name  <code>instance-attribute</code>","text":"<pre><code>node_name: str = ''\n</code></pre> <p>Configured node name. Is set for every known peer and should always  equal <code>host_identity</code>. If connections from unknown peers are accepted, this attribute remains always empty.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: str = ''\n</code></pre> <p>The value that will be used in sent requests, in the Host-Origin  AVP.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.port","title":"port  <code>instance-attribute</code>","text":"<pre><code>port: int = peer_port\n</code></pre> <p>The peer connection socket port.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.socket_fileno","title":"socket_fileno  <code>instance-attribute</code>","text":"<pre><code>socket_fileno: int = 0\n</code></pre> <p>The ID of the underlying socket. The peer does not hold the socket  itself, only the ID. The sockets are tracked by the parent node.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.socket_proto","title":"socket_proto  <code>instance-attribute</code>","text":"<pre><code>socket_proto: int = 0\n</code></pre> <p>Connected socket protocol, either PEER_TRANSPORT_TCP or  PEER_TRANSPORT_SCTP.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: int = PEER_CLOSED\n</code></pre> <p>The current peer state, one of <code>PEER_*</code> constants. The peer will  go through a transition of CONNECTING - CONNECTED - READY and will not handle any messages until the READY state has been reached.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.is_receiver","title":"is_receiver  <code>property</code>","text":"<pre><code>is_receiver: bool\n</code></pre> <p>Indicates the direction of connectivity. A receiver is a connection that has been established by a foreign peer, towards us. A receiver can both send and receive diameter messages, this property affects mostly only the CER/CEA procedure.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.is_sender","title":"is_sender  <code>property</code>","text":"<pre><code>is_sender: bool\n</code></pre> <p>Indicates the direction of connectivity. A sender is a connection that has been by our node, towards a foreign peer. A sender can both send and receive diameter messages, this property affects mostly only the CER/CEA procedure.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.is_waiting_for_dwa","title":"is_waiting_for_dwa  <code>property</code>","text":"<pre><code>is_waiting_for_dwa\n</code></pre> <p>Indicates that the connection is in a waiting-for-DWA state.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.dwa_wait_time","title":"dwa_wait_time  <code>property</code>","text":"<pre><code>dwa_wait_time: int\n</code></pre> <p>Time spent waiting for DWA, in seconds. If no DWR has been sent, returns zero.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.last_read_since","title":"last_read_since  <code>property</code>","text":"<pre><code>last_read_since: int\n</code></pre> <p>Seconds since bytes were last receveid from the network.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.add_in_bytes","title":"add_in_bytes","text":"<pre><code>add_in_bytes(read_bytes: bytes)\n</code></pre> <p>Add network-received bytes to parse and handle.</p> <p>Parameters:</p> Name Type Description Default <code>read_bytes</code> <code>bytes</code> <p>A byte string. Does not have to contain a complete message; the connection will buffer received bytes internally, until at least one valid message has been received</p> required"},{"location":"api/peer/#diameter.node.peer.PeerConnection.add_out_msg","title":"add_out_msg","text":"<pre><code>add_out_msg(out_msg: _AnyMessageType)\n</code></pre> <p>Add an outgoing Diameter message to send to network.</p> <p>Parameters:</p> Name Type Description Default <code>out_msg</code> <code>_AnyMessageType</code> <p>A message to send back towards the network. The message is queued internally and sent out as soon as possible. Messages are processed in the order that they were added.</p> required"},{"location":"api/peer/#diameter.node.peer.PeerConnection.close","title":"close","text":"<pre><code>close(signal_node: bool = True)\n</code></pre> <p>Close the peer connection.</p> <p>Sets peer connection state as closed and signals parent Node to close the underlying socket. Also stops processing input and output bytes immediately.</p> <p>Parameters:</p> Name Type Description Default <code>signal_node</code> <code>bool</code> <p>Send a signal to parent node so that it knows that the underlying socket should be closed. Should always be set to True, unless the socket has already been closed, before shutting down the peer.</p> <code>True</code>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.demand_attention","title":"demand_attention","text":"<pre><code>demand_attention()\n</code></pre> <p>Signal parent node that data can be sent or read for this peer.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.remove_out_bytes","title":"remove_out_bytes","text":"<pre><code>remove_out_bytes(sent_bytes: int)\n</code></pre> <p>Remove a given amount of bytes from outgoing buffer.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.reset_last_message","title":"reset_last_message","text":"<pre><code>reset_last_message()\n</code></pre> <p>Mark that a full diameter message has been received.</p> <p>Resets the internal idle counter.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.reset_last_read","title":"reset_last_read","text":"<pre><code>reset_last_read()\n</code></pre> <p>Mark that bytes have been received from the network.</p> <p>Resets the internal idle counter.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.reset_last_dwa","title":"reset_last_dwa","text":"<pre><code>reset_last_dwa()\n</code></pre> <p>Mark that a DWA has been received.</p> <p>Resets the timer that starts counting from a sent DWR. If no DWA is received within the configured timeout period, the peer connection is closed.</p>"},{"location":"api/peer/#diameter.node.peer.PeerConnection.reset_last_dwr","title":"reset_last_dwr","text":"<pre><code>reset_last_dwr()\n</code></pre> <p>Mark that a DWR has been sent.</p> <p>Starts the DWA wait timer and changes connection state to PEER_READY_WAITING_DWA.</p>"},{"location":"api/utilities/","title":"Node utilities","text":"<p>API reference for various utilities in <code>diameter.node</code>.</p>"},{"location":"api/utilities/#diameter.node.SequenceGenerator","title":"SequenceGenerator","text":"<pre><code>SequenceGenerator(include_now: int = None)\n</code></pre> <p>A sequence generator base class.</p> <p>By default, is just a non-persistent counter that loops back to 1 when max sequence is reached. Can be overwritten by implementing parties, if any kind of persistence over reboots is required.</p> <p>Parameters:</p> Name Type Description Default <code>include_now</code> <code>int</code> <p>An optional unix timestamp. If provided, sets the high order bits of the initial sequence value to the provided time, as suggested by rfc6733. The remaining bits are always initialised to a random value.</p> <code>None</code>"},{"location":"api/utilities/#diameter.node.SequenceGenerator.sequence","title":"sequence  <code>property</code>","text":"<pre><code>sequence: int\n</code></pre> <p>Current sequence number.</p>"},{"location":"api/utilities/#diameter.node.SequenceGenerator.next_sequence","title":"next_sequence","text":"<pre><code>next_sequence() -&gt; int\n</code></pre> <p>Increase and then return current sequence.</p>"},{"location":"api/utilities/#diameter.node.SessionGenerator","title":"SessionGenerator","text":"<pre><code>SessionGenerator(node_name: str)\n</code></pre> <p>A sequential session generator that guarantees uniqueness.</p> <p>This generator produces diameter session IDs that conform to rfc6733 8.8 by producing \"globally and eternally unique\" IDs, by creating session IDs that begin with the diameter entity and have \";\"-separated sections of hexadecimal values that guarantee uniqueness. Optional implementation specific values may be appended to each session.</p> <p>The rfc-suggested method of producing uniqueness is not used. Instead, the generator sets a base initial value on generator creation that equals the current time. This value remains unchanged for the lifetime of the generator. The generator also creates a random 64-bit integer on startup and will increase it by one for every new session ID. The integer values are encoded in hexacecimal. The format is:</p> <pre><code>&lt;DiameterIdentity&gt;;&lt;startup timestamp&gt;;&lt;high 32 bits&gt;;&lt;low 32 bits&gt;[;&lt;optional values&gt;]\n</code></pre> <p>The generator holds a threading lock while session IDs are generated, ensuring that no duplicate IDs may be produced. If the internal 64-bit sequence reaches maximum value of 0xffffffffffffffff, it overflows back to 1.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; g = SessionGenerator(\"test2.gy.local.realm\")\n&gt;&gt;&gt; g.next_id()\ntest2.gy.local.realm;6571a525;5bd295f2;6c76d6b6\n&gt;&gt;&gt; g.next_id()\ntest2.gy.local.realm;6571a525;5bd295f2;6c76d6b7\n&gt;&gt;&gt; # note how the base timestamp changes when generator restarts:\ng = SessionGenerator(\"test2.gy.local.realm\")\n&gt;&gt;&gt; g.next_id()\ntest2.gy.local.realm;6571a525;1967cbd0;8e9e3a16\n&gt;&gt;&gt; # passing optional values:\n&gt;&gt;&gt; g.next_id(\"user@host\", \"hello\")\ntest2.gy.local.realm;6571a525;1967cbd0;8e9e3a17;user@host;hello\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>node_name</code> <code>str</code> <p>Diameter identity of the node, will be embedded in the generated session IDs.</p> required"},{"location":"api/utilities/#diameter.node.SessionGenerator.next_id","title":"next_id","text":"<pre><code>next_id(*optional: str) -&gt; str\n</code></pre> <p>Generate the next session ID.</p> <p>Parameters:</p> Name Type Description Default <code>*optional</code> <code>str</code> <p>Any string values to append as optional fields at the end of the generated session IDs. The values will be separated by \";\"</p> <code>()</code>"},{"location":"api/utilities/#diameter.node.parse_diameter_uri","title":"parse_diameter_uri","text":"<pre><code>parse_diameter_uri(uri: str) -&gt; DiameterUri\n</code></pre> <p>Parses a diameter URI.</p> <p>Follows the rfc6733 4.3.1 specification for a DiameterURI value and parses URIs such as:</p> <ul> <li>aaa://host.example.com;transport=tcp</li> <li>aaa://host.example.com:5959;transport=tcp;protocol=diameter</li> <li>aaas://host.example.com;transport=sctp</li> </ul> <p>Parameters:</p> Name Type Description Default <code>uri</code> <code>str</code> <p>A string that contains at least \"://\"</p> required <p>Returns:</p> Type Description <code>DiameterUri</code> <p>A <code>DiameterUri</code> named tuple instance, which contains the scheme, fqdn port, params and is_secure attributes</p>"},{"location":"api/utilities/#diameter.node._helpers.DiameterUri","title":"DiameterUri","text":"<p>             Bases: <code>NamedTuple</code></p>"},{"location":"api/utilities/#diameter.node._helpers.DiameterUri.fqdn","title":"fqdn  <code>instance-attribute</code>","text":"<pre><code>fqdn: str\n</code></pre>"},{"location":"api/utilities/#diameter.node._helpers.DiameterUri.is_secure","title":"is_secure  <code>instance-attribute</code>","text":"<pre><code>is_secure: bool\n</code></pre>"},{"location":"api/utilities/#diameter.node._helpers.DiameterUri.params","title":"params  <code>instance-attribute</code>","text":"<pre><code>params: dict\n</code></pre>"},{"location":"api/utilities/#diameter.node._helpers.DiameterUri.port","title":"port  <code>instance-attribute</code>","text":"<pre><code>port: int\n</code></pre>"},{"location":"api/utilities/#diameter.node._helpers.DiameterUri.scheme","title":"scheme  <code>instance-attribute</code>","text":"<pre><code>scheme: str\n</code></pre>"},{"location":"api/utilities/#diameter.node.validate_message_avps","title":"validate_message_avps","text":"<pre><code>validate_message_avps(msg: _AnyMessageType) -&gt; list[Avp]\n</code></pre> <p>Validate that a message has all the mandatory AVPs set.</p> <p>The validation works only for the commands that have a python implementation, containing an <code>avp_def</code> attribute, listing the mandatory AVPs. This is true for every <code>message.commands.*</code> subclass. For any other message type will return an empty list.</p> <p>Returns:</p> Type Description <code>list[Avp]</code> <p>A list of <code>Avp</code> instances with the AVP code and vendor ID set, for every AVP that is missing in the message</p>"},{"location":"api/avp/","title":"Index","text":"<p>API reference for <code>diameter.message.avp</code>.</p> <p>AVP and AVP type definitions.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpEnumerated","title":"AvpEnumerated  <code>module-attribute</code>","text":"<pre><code>AvpEnumerated = AvpInteger32\n</code></pre> <p>An AVP type that implements the \"Enumerated\". type.</p> <p>As enumeration is a list of valid integer values, is an alias for  AvpInteger32</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp","title":"Avp","text":"<pre><code>Avp(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>A generic AVP type.</p> <p>Represents a single Diameter AVP with (practically) any content. Normally this class should not be instantiated manually at all. If an AVP is to be constructed by hand, it should be done using one of the subclasses, e.g. <code>AvpInteger64</code>, <code>AvpTime</code> etc, as those perform value type conversion, packing and unpacking automatically.</p> <p>In most cases, an AVP should be constructed using the <code>Avp.new</code> factory, that produces a correct AVP type and pre-populates it if necessary, using the <code>AVP_*</code> and <code>VENDOR_*</code> constant values:</p> <pre><code>&gt;&gt;&gt; session_id = Avp.new(constants.AVP_SESSION_ID)\n&gt;&gt;&gt; session_id.value = \"dra.gy.mvno.net;221424325;287370797;65574b0c-2d02\"\n&gt;&gt;&gt; pdp_address = Avp.new(constants.AVP_TGPP_PDP_ADDRESS, constants.VENDOR_TGPP)\n&gt;&gt;&gt; pdp_address.value = \"10.40.93.32\"\n&gt;&gt;&gt; # this has been set automatically\n&gt;&gt;&gt; pdp_address.is_mandatory\nTrue\n</code></pre> <p>AVPs can also be created directly from received network bytes, or from an <code>Unpacker</code> instance that has its position set to the start of an AVP:</p> <pre><code>&gt;&gt;&gt; avp_bytes = bytes.fromhex(\"000001cd40000016333232353140336770702e6f72670000\")\n&gt;&gt;&gt; service_context_id = Avp.from_bytes(avp_bytes)\n&gt;&gt;&gt; str(service_context_id)\nService-Context-Id &lt;Code: 0x1cd, Flags: 0x40 (-M-), Length: 22, Val: 32251@3gpp.org&gt;\n</code></pre> <p>See Avp.from_bytes and Avp.from_unpacker for more details.</p> <p>AVPs have a human-readable <code>str</code> output:</p> <pre><code>&gt;&gt;&gt; input_packets = Avp.new(constants.AVP_ACCT_INPUT_PACKETS, value=17347878)\n&gt;&gt;&gt; str(input_packets)\nAcct-Input-Packets &lt;Code: 0x2f, Flags: 0x00 (---), Length: 12, Val: 17347878&gt;\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.code","title":"code  <code>instance-attribute</code>","text":"<pre><code>code: int = code\n</code></pre> <p>AVP code. Corresponds to <code>AVP_*</code> constant values.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.flags","title":"flags  <code>instance-attribute</code>","text":"<pre><code>flags: int = flags\n</code></pre> <p>AVP flags. These should not be set manually, refer to <code>is_mandatory</code>, <code>is_private</code> and <code>vendor_id</code>. The flags are updated automatically as  these properties are changed.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.is_mandatory","title":"is_mandatory  <code>property</code> <code>writable</code>","text":"<pre><code>is_mandatory: bool\n</code></pre> <p>Indicates if the mandatory (M) flag is set, or sets it.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.is_private","title":"is_private  <code>property</code> <code>writable</code>","text":"<pre><code>is_private: bool\n</code></pre> <p>Indicates if the private (P) flag is set, or sets it.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.is_vendor","title":"is_vendor  <code>property</code>","text":"<pre><code>is_vendor: bool\n</code></pre> <p>Indicates if the AVP is vendor-specific (has non-zero vendor_id).</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.length","title":"length  <code>property</code>","text":"<pre><code>length\n</code></pre> <p>The entire length of the AVP, including header and vendor bit.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str = 'Unknown'\n</code></pre> <p>The name of the AVP, e.g. \"Session-Id\". Not unique in any way.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.payload","title":"payload  <code>instance-attribute</code>","text":"<pre><code>payload: bytes = payload\n</code></pre> <p>The actual AVP payload as encoded bytes. This should not be set  directly; the <code>value</code> property should be changed instead, which will  automatically encode the payload correctly based on the type of the  AVP.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: Any\n</code></pre> <p>The actual AVP value. When altered, the AVP instance encodes and decodes the property accordingly, and alters its <code>payload</code> property.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.vendor_id","title":"vendor_id  <code>property</code> <code>writable</code>","text":"<pre><code>vendor_id: int\n</code></pre> <p>The current vendor ID. When modified, the AVP flags are also automatically updated with the vendor set bit.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.as_bytes","title":"as_bytes","text":"<pre><code>as_bytes() -&gt; bytes\n</code></pre> <p>Retrieve a byte-encoded AVP, including its header.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.as_packed","title":"as_packed","text":"<pre><code>as_packed(packer: Packer) -&gt; Packer\n</code></pre> <p>Append AVP byte-encoded contents, into a Packer instance.</p> <p>Parameters:</p> Name Type Description Default <code>packer</code> <code>Packer</code> <p>A packer instance, where the AVP contents are appended to, including its header</p> required <p>Returns:</p> Type Description <code>Packer</code> <p>The modified packer instance.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.from_avp","title":"from_avp  <code>classmethod</code>","text":"<pre><code>from_avp(another_avp: _AnyAvpType) -&gt; _AnyAvpType\n</code></pre> <p>Create a copy based on another AVP.</p> <p>Encodes the given AVP into bytes, then constructs a new AVP instance using <code>Avp.from_bytes</code>.</p> <p>Parameters:</p> Name Type Description Default <code>another_avp</code> <code>_AnyAvpType</code> <p>The AVP to copy.</p> required <p>Returns:</p> Type Description <code>_AnyAvpType</code> <p>A new AVP instance with data identical to the copy.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.from_bytes","title":"from_bytes  <code>classmethod</code>","text":"<pre><code>from_bytes(avp_data: bytes) -&gt; _AnyAvpType\n</code></pre> <p>Create new AVP from network received bytes.</p> <p>Accepts byte strings and returns a python representation of the contents.</p> <pre><code>&gt;&gt;&gt; avp_bytes = bytes.fromhex(\"000001cd40000016333232353140336770702e6f72670000\")\n&gt;&gt;&gt; a = avp.Avp.from_bytes(avp_bytes)\n&gt;&gt;&gt;\n&gt;&gt;&gt; assert a.code == 461\n&gt;&gt;&gt; assert a.is_mandatory is True\n&gt;&gt;&gt; assert a.is_private is False\n&gt;&gt;&gt; assert a.is_vendor is False\n&gt;&gt;&gt; assert a.length == 22\n&gt;&gt;&gt; assert a.value == \"32251@3gpp.org\"\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>avp_data</code> <code>bytes</code> <p>Any network-received bytes that starts at an AVP boundary. May contain more than one AVP; the byte string is consumed until one full AVP has been decoded and the rest is discarded.</p> required"},{"location":"api/avp/#diameter.message.avp.avp.Avp.from_unpacker","title":"from_unpacker  <code>classmethod</code>","text":"<pre><code>from_unpacker(unpacker: Unpacker) -&gt; _AnyAvpType\n</code></pre> <p>Create a new AVP from an Unpacker instance.</p> <p>Parameters:</p> Name Type Description Default <code>unpacker</code> <code>Unpacker</code> <p>An instance of Unpacker that has its buffer set to a position where an AVP begins.</p> required <p>Returns:</p> Type Description <code>_AnyAvpType</code> <p>A new AVP. The position of the unpacker is set at the end of the AVP byte stream.</p>"},{"location":"api/avp/#diameter.message.avp.avp.Avp.new","title":"new  <code>classmethod</code>","text":"<pre><code>new(\n    avp_code: int,\n    vendor_id: int = 0,\n    value: str\n    | int\n    | float\n    | bytes\n    | list\n    | datetime.datetime = None,\n    is_mandatory: bool = None,\n    is_private: bool = None,\n) -&gt; _AnyAvpType\n</code></pre> <p>Generates a new AVP.</p> <p>The preferred way to build a new AVP. Returns an AVP that has a type that matches the AVP code, e.g. <code>AVP_ACCT_INPUT_PACKETS</code> would return an \"Acct-Input_packets\" AVP, as an instance of <code>AvpInteger32</code>.</p> <p>Parameters:</p> Name Type Description Default <code>avp_code</code> <code>int</code> <p>An AVP code or one of the <code>AVP_*</code> constants</p> required <code>vendor_id</code> <code>int</code> <p>A known vendor ID, must be set if a vendor-specific AVP is to be built</p> <code>0</code> <code>value</code> <code>str | int | float | bytes | list | datetime</code> <p>An optional AVP value. If not given, will also not set any value, which may be an invalid operation for the AVP. A value can be set later by assigning a value to the <code>value</code> attribute. If given, the value must be valid for the type of AVP being created. E.g. an \"Integer32\" AVP must have a 32-bit integer as its value, a \"Grouped\" AVP must have a list of AVPs as its value, etc.</p> <code>None</code> <code>is_mandatory</code> <code>bool</code> <p>Optionally sets or unsets the mandatory flag manually. If not given, detaults to setting the flag based on whatever was defined in the dictionary originally</p> <code>None</code> <code>is_private</code> <code>bool</code> <p>Optionally sets or unsets the private flag. Default is to leave the flag untouched</p> <code>None</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpAddress","title":"AvpAddress","text":"<pre><code>AvpAddress(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements \"Address\".</p> <p>According to <code>rfc677</code>, an Address format is derived from the OctetString format and represents usually an IPv4 or an IPv6 address, or an E.164 subscriber ID. The format contains both the value and the address family defined by IANAADFAM.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpAddress.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: tuple[int, str]\n</code></pre> <p>The address family and its value. When reading, always returns a tuple containing the address family and a string representation of the actual address. Currently implemented address families are:</p> <ul> <li>1: IP version 4</li> <li>2: IP version 6</li> <li>8: E.164</li> </ul> <p>When setting a new value, only the actual string value should be set, the address family is determined automatically. E.g.:</p> <pre><code>&gt;&gt;&gt; addr = AvpAddress()\n&gt;&gt;&gt; addr.value = \"10.0.0.1\"\n&gt;&gt;&gt; addr.value\n(1, '10.0.0.1')\n&gt;&gt;&gt; addr.value = \"41780009999\"\n&gt;&gt;&gt; addr.value\n(8, '41780009999')\n</code></pre> <p>If the value to be set cannot be parsed as a valid IPv4 or an IPv6 address, the address family is automatically set to E.164.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpFloat32","title":"AvpFloat32","text":"<pre><code>AvpFloat32(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements \"Float32\".</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpFloat32.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: float\n</code></pre> <p>AVP value as a python float. When setting the value, it must be a 32-bit integer. Larger intergers will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpFloat64","title":"AvpFloat64","text":"<pre><code>AvpFloat64(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements \"Float64\".</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpFloat64.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: float\n</code></pre> <p>AVP value as a python float. When setting the value, it must be a 64-bit integer. Larger numbers will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpGrouped","title":"AvpGrouped","text":"<pre><code>AvpGrouped(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements \"Grouped\".</p> <p>The \"Grouped\" AVP contains a sequence of AVPs. The actual AVP payload consists of a concatenated byte stream of individual AVPs, containing also their headers. The python value is represented as a <code>list</code> of <code>Avp</code> instances.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpGrouped.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: list[_AnyAvpType]\n</code></pre> <p>Set or read the list of grouped AVPs. The actual AVPs contained within are not decoded until the value is read for the first time. Once read, the value is cached internally and will not change, unless the entire AVP list is overwritten.</p> <p>When setting a value, it must be set to an entire list of AVPs:</p> <pre><code>&gt;&gt;&gt; grp = AvpGrouped()\n&gt;&gt;&gt; grp.value = [AvpOctetString(), AvpOctetString()]\n</code></pre> <p>Alternatively, the value can be operated as a regular list:</p> <pre><code>&gt;&gt;&gt; grp = AvpGrouped()\n&gt;&gt;&gt; grp.value.append(AvpOctetString())\n</code></pre>"},{"location":"api/avp/#diameter.message.avp.avp.AvpInteger32","title":"AvpInteger32","text":"<pre><code>AvpInteger32(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements the \"Integer32\" type.</p> <p>The \"Integer32\" type has a 32-bit signed value.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpInteger32.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: int\n</code></pre> <p>Sets or retrieves the AVP value as a python integer. When setting the value, it must be a 32-bit integer. Larger integers will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpInteger64","title":"AvpInteger64","text":"<pre><code>AvpInteger64(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements the \"Integer64\" type.</p> <p>The \"Integer64\" type has a 64-bit signed value.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpInteger64.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: int\n</code></pre> <p>Sets or retrieves the AVP value as a python integer. When setting the value, it must be a 64-bit integer. Larger integers will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpOctetString","title":"AvpOctetString","text":"<pre><code>AvpOctetString(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements the \"OctetString\" type.</p> <p>The \"OctetString\" type contains arbitrary data of variable length.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpOctetString.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: bytes\n</code></pre> <p>Sets or retrieves the AVP value, as python bytes. When setting the value, it must be bytes. Any other type will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpTime","title":"AvpTime","text":"<pre><code>AvpTime(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements the \"Time\" type.</p> <p>According to <code>rfc677</code>, a Time format is derived from the OctetString basic AVP format. It contains four octets, in the same format as the first four bytes are in the NTP timestamp format, as defined in <code>rfc5905</code>.</p> <p>The octets represent either the number of seconds since 0h on 1 January 1900 UTC, or since 6h 28m 16s on 7 February 2036 UTC. The NTP timestamp format would normally overflow in 2036, however <code>rfc2030</code> extends its usage until 2104, by defining a specific date in 1968 as a cutoff point. Time values before the cutoff date in 1968 are considered to be dates after 2036, while time values after the cutoff are dates between 1968 and 2036.</p> <p>As a result, the <code>AvpTime</code> type cannot represent dates before 20 January 1968 at all.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpTime.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: datetime.datetime\n</code></pre> <p>Sets or retrieves the AVP value, as an instance of python datetime. When setting the value, it must be an instance of datetime. Any other data type, or if the datetime instance contains an unsupported value, will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpUnsigned32","title":"AvpUnsigned32","text":"<pre><code>AvpUnsigned32(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements the \"Unsigned32\" type.</p> <p>The \"Unsigned32\" type has a 32-bit unsigned value.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpUnsigned32.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: int\n</code></pre> <p>Sets or retrieves the AVP value as a python integer. When setting the value, it must be a 32-bit unsigned integer. Larger and signed integers will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpUnsigned64","title":"AvpUnsigned64","text":"<pre><code>AvpUnsigned64(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements the \"Unsigned64\" type.</p> <p>The \"Unsigned64\" type has a 64-bit unsigned value.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpUnsigned64.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: int\n</code></pre> <p>Sets or retrieves the AVP value as a python integer. When setting the value, it must be a 64-bit unsigned integer. Larger and signed integers will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/#diameter.message.avp.avp.AvpUtf8String","title":"AvpUtf8String","text":"<pre><code>AvpUtf8String(\n    code: int = 0,\n    vendor_id: int = 0,\n    payload: bytes = b\"\",\n    flags: int = 0,\n)\n</code></pre> <p>             Bases: <code>Avp</code></p> <p>An AVP type that implements the \"UTF8String\" type.</p> <p>According to <code>rfc677</code>, a UTF8String format is derived from the OctetString basic AVP format. It is defined as a human-readable string represented using the ISO/IEC IS 10646-1 character set, encoded as an OctetString using the UTF-8 transformation format. It translates to the basic python <code>str</code> type.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>int</code> <p>An AVP code, does not need to be a known code</p> <code>0</code> <code>vendor_id</code> <code>int</code> <p>A vendor ID, or zero if no vendor is set</p> <code>0</code> <code>payload</code> <code>bytes</code> <p>An optional AVP payload to initialise the AVP with. Must be a properly encoded value that matches the type of AVP.</p> <code>b''</code> <code>flags</code> <code>int</code> <p>An optional integer value for the AVP flags</p> <code>0</code>"},{"location":"api/avp/#diameter.message.avp.avp.AvpUtf8String.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: str\n</code></pre> <p>Sets or retrieves the AVP value, as a python str. When setting the value, it must be a string that can be encoded as utf-8. Any other data type, or strings that will not encode as utf-8, will raise an <code>AvpEncodeError</code>.</p>"},{"location":"api/avp/grouped/","title":"Grouped AVPs","text":"<p>API reference for <code>diameter.message.avp.grouped</code>.</p> <p>Python classes that represent individual grouped AVPs.</p> <p>Each grouped AVP is represented by a python dataclass. Each dataclass contains one special attribute named <code>avp_def</code>, which is always a tuple of <code>AvpGenType</code> instances, which dictate to which AVP each dataclass attribute maps to.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RequestedServiceUnit","title":"RequestedServiceUnit  <code>module-attribute</code>","text":"<pre><code>RequestedServiceUnit = GrantedServiceUnit\n</code></pre> <p>A data container that represents the \"Requested-Service-Unit\" grouped AVP.</p> <p>This is an alias for \"Granted-Service-Unit\", as they both are technically  identical.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessNetworkInfoChange","title":"AccessNetworkInfoChange  <code>dataclass</code>","text":"<p>A data container that represents the \"Access-Network-Info-Change\" (4401) grouped AVP.</p> <p>33GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessNetworkInfoChange.access_network_information","title":"access_network_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_network_information: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessNetworkInfoChange.cellular_network_information","title":"cellular_network_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cellular_network_information: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessNetworkInfoChange.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation","title":"AccessTransferInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Access-Transfer-Information\" (2709) grouped AVP.</p> <p>33GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.access_network_information","title":"access_network_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_network_information: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.access_transfer_type","title":"access_transfer_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_transfer_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.cellular_network_information","title":"cellular_network_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cellular_network_information: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.instance_id","title":"instance_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>instance_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.inter_ue_transfer","title":"inter_ue_transfer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inter_ue_transfer: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.related_ims_charging_identifier","title":"related_ims_charging_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related_ims_charging_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.related_ims_charging_identifier_node","title":"related_ims_charging_identifier_node  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related_ims_charging_identifier_node: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccessTransferInformation.user_equipment_info","title":"user_equipment_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info: UserEquipmentInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccumulatedCost","title":"AccumulatedCost  <code>dataclass</code>","text":"<p>A data container that represents the \"Accumulated-Digits\" (2052) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccumulatedCost.exponent","title":"exponent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exponent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AccumulatedCost.value_digits","title":"value_digits  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value_digits: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AdditionalContentInformation","title":"AdditionalContentInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Additional-Content-Information\" (1207) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AdditionalContentInformation.additional_type_information","title":"additional_type_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_type_information: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AdditionalContentInformation.content_size","title":"content_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AdditionalContentInformation.type_number","title":"type_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AddressDomain","title":"AddressDomain  <code>dataclass</code>","text":"<p>A data container that represents the \"Address-Domain\" (898) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AddressDomain.domain_name","title":"domain_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AddressDomain.tgpp_imsi_mcc_mnc","title":"tgpp_imsi_mcc_mnc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_imsi_mcc_mnc: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AfCorrelationInformation","title":"AfCorrelationInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"AF-Correlation-Information\" (1276) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AfCorrelationInformation.af_charging_identifier","title":"af_charging_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>af_charging_identifier: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AfCorrelationInformation.flows","title":"flows  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flows: list[Flows] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation","title":"AnnouncementInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Announcement-Information\" (3904) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.announcement_identifier","title":"announcement_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>announcement_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.announcement_order","title":"announcement_order  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>announcement_order: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.language","title":"language  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>language: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.play_alternative","title":"play_alternative  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>play_alternative: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.privacy_indicator","title":"privacy_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>privacy_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.quota_indicator","title":"quota_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quota_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.time_indicator","title":"time_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AnnouncementInformation.variable_part","title":"variable_part  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>variable_part: list[VariablePart] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocCostInformation","title":"AocCostInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"AoC-Cost-Information\" (2053) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocCostInformation.accumulated_cost","title":"accumulated_cost  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accumulated_cost: AccumulatedCost = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocCostInformation.currency_code","title":"currency_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>currency_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocCostInformation.incremental_cost","title":"incremental_cost  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>incremental_cost: list[IncrementalCost] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocInformation","title":"AocInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"AoC-Information\" (2054) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocInformation.aoc_cost_information","title":"aoc_cost_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_cost_information: AocCostInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocInformation.aoc_subscription_information","title":"aoc_subscription_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_subscription_information: AocSubscriptionInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocInformation.tariff_information","title":"tariff_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tariff_information: TariffInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocService","title":"AocService  <code>dataclass</code>","text":"<p>A data container that represents the \"AoC-Service\" (2311) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocService.aoc_service_obligatory_type","title":"aoc_service_obligatory_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_service_obligatory_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocService.aoc_service_type","title":"aoc_service_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_service_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocSubscriptionInformation","title":"AocSubscriptionInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"AoC-Subscription-Information\" (2314) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocSubscriptionInformation.aoc_format","title":"aoc_format  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_format: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocSubscriptionInformation.aoc_service","title":"aoc_service  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_service: list[AocService] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.AocSubscriptionInformation.preferred_aoc_currency","title":"preferred_aoc_currency  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>preferred_aoc_currency: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControl","title":"ApnRateControl  <code>dataclass</code>","text":"<p>A data container that represents the \"APN-Rate-Control\" (3933) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControl.apn_rate_control_downlink","title":"apn_rate_control_downlink  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>apn_rate_control_downlink: ApnRateControlDownlink = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControl.apn_rate_control_uplink","title":"apn_rate_control_uplink  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>apn_rate_control_uplink: ApnRateControlUplink = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlDownlink","title":"ApnRateControlDownlink  <code>dataclass</code>","text":"<p>A data container that represents the \"APN-Rate-Control-Downlink\" (3935) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlDownlink.additional_exception_reports","title":"additional_exception_reports  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_exception_reports: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlDownlink.rate_control_max_rate","title":"rate_control_max_rate  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rate_control_max_rate: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlDownlink.rate_control_time_unit","title":"rate_control_time_unit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rate_control_time_unit: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlUplink","title":"ApnRateControlUplink  <code>dataclass</code>","text":"<p>A data container that represents the \"APN-Rate-Control-Uplink\" (3934) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlUplink.rate_control_max_message_size","title":"rate_control_max_message_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rate_control_max_message_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlUplink.rate_control_max_rate","title":"rate_control_max_rate  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rate_control_max_rate: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApnRateControlUplink.rate_control_time_unit","title":"rate_control_time_unit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rate_control_time_unit: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApplicationServerInformation","title":"ApplicationServerInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Application-Server-Information\" (850) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApplicationServerInformation.application_provided_called_party_address","title":"application_provided_called_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_provided_called_party_address: list[\n    str\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApplicationServerInformation.application_server","title":"application_server  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_server: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ApplicationServerInformation.status_as_code","title":"status_as_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>status_as_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.BasicServiceCode","title":"BasicServiceCode  <code>dataclass</code>","text":"<p>A data container that represents the \"Basic-Service-Code\" (3411) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.BasicServiceCode.bearer_service","title":"bearer_service  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bearer_service: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.BasicServiceCode.teleservice","title":"teleservice  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>teleservice: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalledIdentityChange","title":"CalledIdentityChange  <code>dataclass</code>","text":"<p>A data container that represents the \"Called-Identity-Change\" (3917) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalledIdentityChange.called_identity","title":"called_identity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_identity: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalledIdentityChange.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalleeInformation","title":"CalleeInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Callee-Information\" (565) grouped AVP.</p> <p>3GPP TS 29.214 version 16.3.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalleeInformation.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalleeInformation.called_asserted_identity","title":"called_asserted_identity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_asserted_identity: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalleeInformation.called_party_address","title":"called_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_party_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CalleeInformation.requested_party_address","title":"requested_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>requested_party_address: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CcMoney","title":"CcMoney  <code>dataclass</code>","text":"<p>A data container that represents the \"CC-Money\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CcMoney.currency_code","title":"currency_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>currency_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CcMoney.unit_value","title":"unit_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_value: UnitValue = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ChapAuth","title":"ChapAuth  <code>dataclass</code>","text":"<p>A data container that represents the \"Chap-Auth\" (402) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ChapAuth.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ChapAuth.chap_algorithm","title":"chap_algorithm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>chap_algorithm: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ChapAuth.chap_ident","title":"chap_ident  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>chap_ident: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ChapAuth.chap_response","title":"chap_response  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>chap_response: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier","title":"Classifier  <code>dataclass</code>","text":"<p>A data container that represents the \"Clasifier\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.classifier_id","title":"classifier_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>classifier_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.diffserv_code_point","title":"diffserv_code_point  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>diffserv_code_point: list[int] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.direction","title":"direction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>direction: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.eth_option","title":"eth_option  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eth_option: list[EthOption] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.fragmentation_flag","title":"fragmentation_flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fragmentation_flag: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.from_spec","title":"from_spec  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>from_spec: list[FromSpec] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.icmp_type","title":"icmp_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icmp_type: list[IcmpType] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.ip_option","title":"ip_option  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_option: list[IpOption] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.protocol","title":"protocol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>protocol: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.tcp_flags","title":"tcp_flags  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tcp_flags: TcpFlags = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.tcp_option","title":"tcp_option  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tcp_option: list[TcpOption] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Classifier.to_spec","title":"to_spec  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>to_spec: list[ToSpec] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CostInformation","title":"CostInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Cost-Information\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CostInformation.cost_unit","title":"cost_unit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cost_unit: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CostInformation.currency_code","title":"currency_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>currency_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CostInformation.unit_value","title":"unit_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_value: UnitValue = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CoverageInfo","title":"CoverageInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Coverage-Info\" (3459) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CoverageInfo.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CoverageInfo.coverage_status","title":"coverage_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coverage_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CoverageInfo.location_info","title":"location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>location_info: list[LocationInfo] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CpdtInformation","title":"CpdtInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"CPDT-Information\" (3927) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CpdtInformation.external_identifier","title":"external_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>external_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CpdtInformation.nidd_submission","title":"nidd_submission  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nidd_submission: NiddSubmission = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CpdtInformation.scef_id","title":"scef_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scef_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CpdtInformation.serving_node_identity","title":"serving_node_identity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serving_node_identity: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CpdtInformation.sgw_change","title":"sgw_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgw_change: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CurrentTariff","title":"CurrentTariff  <code>dataclass</code>","text":"<p>A data container that represents the \"Current-Tariff\" (2056) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CurrentTariff.currency_code","title":"currency_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>currency_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CurrentTariff.rate_element","title":"rate_element  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rate_element: list[RateElement] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.CurrentTariff.scale_factor","title":"scale_factor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scale_factor: ScaleFactor = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DcdInformation","title":"DcdInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"DCD-Information\" (2115) grouped AVP.</p> <p>OMA-DDS-Charging_Data-V1_0-20110201-A</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DcdInformation.content_id","title":"content_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DcdInformation.content_provider_id","title":"content_provider_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_provider_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DestinationInterface","title":"DestinationInterface  <code>dataclass</code>","text":"<p>A data container that represents the \"Destination-Interface\" (2002) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DestinationInterface.interface_id","title":"interface_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DestinationInterface.interface_port","title":"interface_port  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_port: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DestinationInterface.interface_text","title":"interface_text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_text: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.DestinationInterface.interface_type","title":"interface_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EarlyMediaDescription","title":"EarlyMediaDescription  <code>dataclass</code>","text":"<p>A data container that represents the \"Early-Media-Description\" (1272) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EarlyMediaDescription.sdp_media_component","title":"sdp_media_component  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_media_component: list[SdpMediaComponent] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EarlyMediaDescription.sdp_session_description","title":"sdp_session_description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_session_description: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EarlyMediaDescription.sdp_timestamps","title":"sdp_timestamps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_timestamps: SdpTimestamps = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EnhancedDiagnostics","title":"EnhancedDiagnostics  <code>dataclass</code>","text":"<p>A data container that represents the \"Enhanced-Diagnostics\" (3901) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EnhancedDiagnostics.ran_nas_release_cause","title":"ran_nas_release_cause  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ran_nas_release_cause: list[bytes] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Envelope","title":"Envelope  <code>dataclass</code>","text":"<p>A data container that represents the \"Envelope\" (1266) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Envelope.cc_input_octets","title":"cc_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Envelope.cc_output_octets","title":"cc_output_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_output_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Envelope.cc_service_specific_units","title":"cc_service_specific_units  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_service_specific_units: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Envelope.cc_total_octets","title":"cc_total_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_total_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Envelope.envelope_end_time","title":"envelope_end_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>envelope_end_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Envelope.envelope_start_time","title":"envelope_start_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>envelope_start_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthOption","title":"EthOption  <code>dataclass</code>","text":"<p>A data container that represents the ETH-Option AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthOption.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthOption.eth_proto_type","title":"eth_proto_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eth_proto_type: EthProtoType = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthOption.user_priority_range","title":"user_priority_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_priority_range: list[int] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthOption.vlan_id_range","title":"vlan_id_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vlan_id_range: list[VlanIdRange] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthProtoType","title":"EthProtoType  <code>dataclass</code>","text":"<p>A data container that represents the ETH-Proto-Type AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthProtoType.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthProtoType.eth_ether_type","title":"eth_ether_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eth_ether_type: list[bytes] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EthProtoType.eth_sap","title":"eth_sap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eth_sap: list[bytes] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Eui64AddressMask","title":"Eui64AddressMask  <code>dataclass</code>","text":"<p>A data container that represents the \"EUI64-Address-Mask\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Eui64AddressMask.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Eui64AddressMask.eui64_address","title":"eui64_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eui64_address: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Eui64AddressMask.eui64_address_mask_pattern","title":"eui64_address_mask_pattern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eui64_address_mask_pattern: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EventType","title":"EventType  <code>dataclass</code>","text":"<p>A data container that represents the \"Event-Type\" (823) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EventType.event","title":"event  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>event: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EventType.expires","title":"expires  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>expires: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.EventType.sip_method","title":"sip_method  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sip_method: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExcessTreatment","title":"ExcessTreatment  <code>dataclass</code>","text":"<p>A data container that represents the \"Excess-Treatment\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExcessTreatment.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExcessTreatment.qos_parameters","title":"qos_parameters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_parameters: QosParameters = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExcessTreatment.qos_profile_template","title":"qos_profile_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_profile_template: QosProfileTemplate = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExcessTreatment.treatment_action","title":"treatment_action  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>treatment_action: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExperimentalResult","title":"ExperimentalResult  <code>dataclass</code>","text":"<p>A data container that represents the \"Experimental-Result\" (297) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExperimentalResult.experimental_result_code","title":"experimental_result_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>experimental_result_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ExperimentalResult.vendor_id","title":"vendor_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vendor_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FailedAvp","title":"FailedAvp  <code>dataclass</code>","text":"<p>A data container that represents the \"Failed-AVP\" (279) grouped AVP.</p> <p><code>rfc6733</code>, defines this as just a list of arbitrary AVPs; the actual failed AVPs should be copied into the <code>additional_avps</code> attribute.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FailedAvp.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule","title":"FilterRule  <code>dataclass</code>","text":"<p>A data container that represents the \"Filter-Rule\" grouped AVP.</p> <p>The \"Filter-Rule\" AVP, as well as its sub-AVP \"Classifier\" are defined in rfc5777.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.classifier","title":"classifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>classifier: Classifier = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.excess_treatment","title":"excess_treatment  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>excess_treatment: ExcessTreatment = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.filter_rule_precedence","title":"filter_rule_precedence  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>filter_rule_precedence: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.qos_parameters","title":"qos_parameters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_parameters: QosParameters = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.qos_profile_template","title":"qos_profile_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_profile_template: QosProfileTemplate = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.qos_semantics","title":"qos_semantics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_semantics: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.time_of_day_condition","title":"time_of_day_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_of_day_condition: list[TimeOfDayCondition] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FilterRule.treatment_action","title":"treatment_action  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>treatment_action: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FinalUnitIndication","title":"FinalUnitIndication  <code>dataclass</code>","text":"<p>A data container that represents the \"Final-Unit-Indication\" grouped AVP.</p> <p>This data container also has the <code>additional_avps</code> attribute, which permits appending custom AVPs to the Final-Unit-Indication, even though <code>rfc8560</code> doesn't actually permit it.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FinalUnitIndication.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FinalUnitIndication.filter_id","title":"filter_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>filter_id: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FinalUnitIndication.final_unit_action","title":"final_unit_action  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>final_unit_action: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FinalUnitIndication.redirect_server","title":"redirect_server  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>redirect_server: RedirectServer = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FinalUnitIndication.restriction_filter_rule","title":"restriction_filter_rule  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>restriction_filter_rule: list[bytes] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FixedUserLocationInfo","title":"FixedUserLocationInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Fixed-User-Location-Info\" (2825) grouped AVP.</p> <p>(FBA access type) 3GPP TS 29.212 version 14.11.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FixedUserLocationInfo.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FixedUserLocationInfo.bssid","title":"bssid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bssid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FixedUserLocationInfo.logical_access_id","title":"logical_access_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logical_access_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FixedUserLocationInfo.physical_access_id","title":"physical_access_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>physical_access_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FixedUserLocationInfo.ssid","title":"ssid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ssid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Flows","title":"Flows  <code>dataclass</code>","text":"<p>A data container that represents the \"Flows\" (510) grouped AVP.</p> <p>3GPP TS 29.214 version 16.3.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Flows.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Flows.content_version","title":"content_version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_version: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Flows.final_unit_action","title":"final_unit_action  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>final_unit_action: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Flows.flow_number","title":"flow_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flow_number: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Flows.media_component_number","title":"media_component_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>media_component_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Flows.media_component_status","title":"media_component_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>media_component_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromSpec","title":"FromSpec  <code>dataclass</code>","text":"<p>             Bases: <code>FromToSpec</code></p> <p>A data container that represents the From-Spec AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec","title":"FromToSpec  <code>dataclass</code>","text":""},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.eu164_address","title":"eu164_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eu164_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.eu164_address_mask","title":"eu164_address_mask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>eu164_address_mask: list[Eui64AddressMask] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.ip_address","title":"ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.ip_address_mask","title":"ip_address_mask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_address_mask: list[IpAddressMask] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.ip_address_range","title":"ip_address_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_address_range: list[IpAddressRange] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.mac_address","title":"mac_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mac_address: list[bytes] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.mac_address_mask","title":"mac_address_mask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mac_address_mask: list[MacAddressMask] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.negated","title":"negated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>negated: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.port","title":"port  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>port: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.port_range","title":"port_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>port_range: list[PortRange] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.FromToSpec.use_assigned_address","title":"use_assigned_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>use_assigned_address: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GenericSpec","title":"GenericSpec  <code>dataclass</code>","text":""},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GenericSpec.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GrantedServiceUnit","title":"GrantedServiceUnit  <code>dataclass</code>","text":"<p>A data container that represents the \"Granted-Service-Unit\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GrantedServiceUnit.cc_input_octets","title":"cc_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GrantedServiceUnit.cc_money","title":"cc_money  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_money: CcMoney = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GrantedServiceUnit.cc_service_specific_units","title":"cc_service_specific_units  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_service_specific_units: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GrantedServiceUnit.cc_time","title":"cc_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GrantedServiceUnit.cc_total_octets","title":"cc_total_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_total_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GsuPoolReference","title":"GsuPoolReference  <code>dataclass</code>","text":"<p>A data container that represents the \"G-S-U-Pool-Reference\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GsuPoolReference.cc_unit_type","title":"cc_unit_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_unit_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GsuPoolReference.g_s_u_pool_identifier","title":"g_s_u_pool_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>g_s_u_pool_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.GsuPoolReference.unit_value","title":"unit_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_value: UnitValue = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IcmpType","title":"IcmpType  <code>dataclass</code>","text":"<p>A data container that represents the ICMP-Type AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IcmpType.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IcmpType.icmp_code","title":"icmp_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icmp_code: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IcmpType.icmp_type_number","title":"icmp_type_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icmp_type_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IcmpType.negated","title":"negated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>negated: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImInformation","title":"ImInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"IM-Information\" (2110) grouped AVP.</p> <p>OMA-DDS-Charging_Data-V1_0-20110201-A</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImInformation.number_of_messages_successfully_exploded","title":"number_of_messages_successfully_exploded  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_messages_successfully_exploded: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImInformation.number_of_messages_successfully_sent","title":"number_of_messages_successfully_sent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_messages_successfully_sent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImInformation.total_number_of_messages_exploded","title":"total_number_of_messages_exploded  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_number_of_messages_exploded: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImInformation.total_number_of_messages_sent","title":"total_number_of_messages_sent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_number_of_messages_sent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation","title":"ImsInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"IMS-Information\" (876) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.access_network_info_change","title":"access_network_info_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_network_info_change: list[\n    AccessNetworkInfoChange\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.access_network_information","title":"access_network_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_network_information: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.access_transfer_information","title":"access_transfer_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_transfer_information: list[\n    AccessTransferInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.account_expiration","title":"account_expiration  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_expiration: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.alternate_charged_party_address","title":"alternate_charged_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>alternate_charged_party_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.application_server_information","title":"application_server_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_server_information: list[\n    ApplicationServerInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.associated_uri","title":"associated_uri  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>associated_uri: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.bearer_service","title":"bearer_service  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bearer_service: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.called_asserted_identity","title":"called_asserted_identity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_asserted_identity: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.called_identity_change","title":"called_identity_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_identity_change: CalledIdentityChange = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.called_party_address","title":"called_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_party_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.calling_party_address","title":"calling_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>calling_party_address: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.carrier_select_routing_information","title":"carrier_select_routing_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>carrier_select_routing_information: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.cause_code","title":"cause_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cause_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.cellular_network_information","title":"cellular_network_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cellular_network_information: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.early_media_description","title":"early_media_description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>early_media_description: list[\n    EarlyMediaDescription\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.event_type","title":"event_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>event_type: EventType = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.fe_identifier_list","title":"fe_identifier_list  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fe_identifier_list: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.from_address","title":"from_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>from_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.ims_application_reference_identifier","title":"ims_application_reference_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ims_application_reference_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.ims_charging_identifier","title":"ims_charging_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ims_charging_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.ims_communication_service_identifier","title":"ims_communication_service_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ims_communication_service_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.ims_emergency_indicator","title":"ims_emergency_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ims_emergency_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.ims_visited_network_identifier","title":"ims_visited_network_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ims_visited_network_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.initial_ims_charging_identifier","title":"initial_ims_charging_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>initial_ims_charging_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.instance_id","title":"instance_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>instance_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.inter_operator_identifier","title":"inter_operator_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inter_operator_identifier: list[\n    InterOperatorIdentifier\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.message_body","title":"message_body  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_body: list[MessageBody] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.nni_information","title":"nni_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nni_information: list[NniInformation] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.node_functionality","title":"node_functionality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>node_functionality: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.number_portability_routing_information","title":"number_portability_routing_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_portability_routing_information: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.online_charging_flag","title":"online_charging_flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>online_charging_flag: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.outgoing_session_id","title":"outgoing_session_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>outgoing_session_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.real_time_tariff_information","title":"real_time_tariff_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>real_time_tariff_information: RealTimeTariffInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.reason_header","title":"reason_header  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reason_header: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.related_ims_charging_identifier","title":"related_ims_charging_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related_ims_charging_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.related_ims_charging_identifier_node","title":"related_ims_charging_identifier_node  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related_ims_charging_identifier_node: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.requested_party_address","title":"requested_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>requested_party_address: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.role_of_node","title":"role_of_node  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>role_of_node: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.route_header_received","title":"route_header_received  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>route_header_received: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.route_header_transmitted","title":"route_header_transmitted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>route_header_transmitted: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.sdp_media_component","title":"sdp_media_component  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_media_component: list[SdpMediaComponent] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.sdp_session_description","title":"sdp_session_description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_session_description: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.served_party_ip_address","title":"served_party_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>served_party_ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.server_capabilities","title":"server_capabilities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>server_capabilities: ServerCapabilities = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.service_id","title":"service_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.service_specific_info","title":"service_specific_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_specific_info: list[ServiceSpecificInfo] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.session_priority","title":"session_priority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>session_priority: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.tad_identifier","title":"tad_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tad_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.time_stamps","title":"time_stamps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_stamps: TimeStamps = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.transit_ioi_list","title":"transit_ioi_list  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transit_ioi_list: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.trunk_group_id","title":"trunk_group_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trunk_group_id: TrunkGroupId = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ImsInformation.user_session_id","title":"user_session_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_session_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IncrementalCost","title":"IncrementalCost  <code>dataclass</code>","text":"<p>A data container that represents the \"Incremental-Cost\" (2062) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IncrementalCost.exponent","title":"exponent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exponent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IncrementalCost.value_digits","title":"value_digits  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value_digits: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.InterOperatorIdentifier","title":"InterOperatorIdentifier  <code>dataclass</code>","text":"<p>A data container that represents the \"Inter-Operator-Identifier\" (838) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.InterOperatorIdentifier.originating_ioi","title":"originating_ioi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>originating_ioi: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.InterOperatorIdentifier.terminating_ioi","title":"terminating_ioi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>terminating_ioi: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressMask","title":"IpAddressMask  <code>dataclass</code>","text":"<p>A data container that represents the \"IP-Address-Mask\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressMask.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressMask.ip_address","title":"ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressMask.ip_bit_mask_width","title":"ip_bit_mask_width  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_bit_mask_width: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressRange","title":"IpAddressRange  <code>dataclass</code>","text":"<p>A data container that represents the \"IP-Address-Range\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressRange.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressRange.ip_address_end","title":"ip_address_end  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_address_end: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpAddressRange.ip_address_start","title":"ip_address_start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_address_start: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpOption","title":"IpOption  <code>dataclass</code>","text":"<p>A data container that represents the IP-Option AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpOption.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpOption.ip_option_type","title":"ip_option_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_option_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpOption.ip_option_value","title":"ip_option_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_option_value: list[bytes] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IpOption.negated","title":"negated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>negated: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IsupCause","title":"IsupCause  <code>dataclass</code>","text":"<p>A data container that represents the \"ISUP-Cause\" (3416) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IsupCause.isup_cause_diagnostics","title":"isup_cause_diagnostics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isup_cause_diagnostics: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IsupCause.isup_cause_location","title":"isup_cause_location  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isup_cause_location: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.IsupCause.isup_cause_value","title":"isup_cause_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isup_cause_value: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientId","title":"LcsClientId  <code>dataclass</code>","text":"<p>A data container that represents the \"LCS-Client-ID\" (1232) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientId.lcs_apn","title":"lcs_apn  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_apn: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientId.lcs_client_dialed_by_ms","title":"lcs_client_dialed_by_ms  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_client_dialed_by_ms: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientId.lcs_client_external_id","title":"lcs_client_external_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_client_external_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientId.lcs_client_name","title":"lcs_client_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_client_name: LcsClientName = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientId.lcs_client_type","title":"lcs_client_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_client_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientId.lcs_requestor_id","title":"lcs_requestor_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_requestor_id: LcsRequestorId = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientName","title":"LcsClientName  <code>dataclass</code>","text":"<p>A data container that represents the \"LCS-Client-Name\" (1235) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientName.lcs_data_coding_scheme","title":"lcs_data_coding_scheme  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_data_coding_scheme: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientName.lcs_format_indicator","title":"lcs_format_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_format_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsClientName.lcs_name_string","title":"lcs_name_string  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_name_string: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsInformation","title":"LcsInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"LCS-Information\" (878) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsInformation.lcs_client_id","title":"lcs_client_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_client_id: LcsClientId = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsInformation.location_estimate","title":"location_estimate  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>location_estimate: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsInformation.location_type","title":"location_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>location_type: LocationType = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsInformation.msisdn","title":"msisdn  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>msisdn: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsInformation.positioning_data","title":"positioning_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>positioning_data: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsInformation.tgpp_imsi","title":"tgpp_imsi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_imsi: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsRequestorId","title":"LcsRequestorId  <code>dataclass</code>","text":"<p>A data container that represents the \"LCS-Requestor-ID\" (1239) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsRequestorId.lcs_data_coding_scheme","title":"lcs_data_coding_scheme  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_data_coding_scheme: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LcsRequestorId.lcs_requestor_id_string","title":"lcs_requestor_id_string  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_requestor_id_string: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LocationInfo","title":"LocationInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Location-Info\" (3460) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LocationInfo.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LocationInfo.tgpp_user_location_info","title":"tgpp_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_user_location_info: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LocationType","title":"LocationType  <code>dataclass</code>","text":"<p>A data container that represents the \"Location-Type\" (1244) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LocationType.deferred_location_event_type","title":"deferred_location_event_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>deferred_location_event_type: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.LocationType.location_estimate_type","title":"location_estimate_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>location_estimate_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation","title":"M2mInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"M2M-Information\" (1011) grouped AVP.</p> <p>oneM2M TS-0004 version 1.6.0 Release 1</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.access_network_identifier","title":"access_network_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_network_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.application_entity_id","title":"application_entity_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_entity_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.control_memory_size","title":"control_memory_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>control_memory_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.current_number_members","title":"current_number_members  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>current_number_members: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.data_memory_size","title":"data_memory_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data_memory_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.external_id","title":"external_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>external_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.group_name","title":"group_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>group_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.hosting_cse_id","title":"hosting_cse_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hosting_cse_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.m2m_event_record_timestamp","title":"m2m_event_record_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>m2m_event_record_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.maximum_number_members","title":"maximum_number_members  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>maximum_number_members: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.node_id","title":"node_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>node_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.occupancy","title":"occupancy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>occupancy: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.originator","title":"originator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>originator: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.protocol_type","title":"protocol_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>protocol_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.rating_group","title":"rating_group  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rating_group: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.receiver","title":"receiver  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>receiver: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.request_body_size","title":"request_body_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>request_body_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.request_headers_size","title":"request_headers_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>request_headers_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.request_operation","title":"request_operation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>request_operation: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.response_body_size","title":"response_body_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>response_body_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.response_headers_size","title":"response_headers_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>response_headers_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.response_status_code","title":"response_status_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>response_status_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.subgroup_name","title":"subgroup_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>subgroup_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.M2mInformation.target_id","title":"target_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>target_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MacAddressMask","title":"MacAddressMask  <code>dataclass</code>","text":"<p>A data container that represents the \"MAC-Address-Mask\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MacAddressMask.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MacAddressMask.mac_address","title":"mac_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mac_address: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MacAddressMask.mac_address_mask_pattern","title":"mac_address_mask_pattern  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mac_address_mask_pattern: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation","title":"MbmsInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"MBMS-Information\" (880) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.cn_ip_multicast_distribution","title":"cn_ip_multicast_distribution  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cn_ip_multicast_distribution: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.file_repair_supported","title":"file_repair_supported  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>file_repair_supported: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_2g_3g_indicator","title":"mbms_2g_3g_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_2g_3g_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_charged_party","title":"mbms_charged_party  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_charged_party: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_data_transfer_start","title":"mbms_data_transfer_start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_data_transfer_start: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_data_transfer_stop","title":"mbms_data_transfer_stop  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_data_transfer_stop: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_gw_address","title":"mbms_gw_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_gw_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_service_area","title":"mbms_service_area  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_service_area: list[bytes] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_service_type","title":"mbms_service_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_service_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_session_identity","title":"mbms_session_identity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_session_identity: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.mbms_user_service_type","title":"mbms_user_service_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_user_service_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.msisdn","title":"msisdn  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>msisdn: list[bytes] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.rai","title":"rai  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rai: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.required_mbms_bearer_capabilities","title":"required_mbms_bearer_capabilities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>required_mbms_bearer_capabilities: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MbmsInformation.tmgi","title":"tmgi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tmgi: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageBody","title":"MessageBody  <code>dataclass</code>","text":"<p>A data container that represents the \"Message-Body\" (889) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageBody.content_disposition","title":"content_disposition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_disposition: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageBody.content_length","title":"content_length  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_length: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageBody.content_type","title":"content_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_type: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageBody.originator","title":"originator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>originator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageClass","title":"MessageClass  <code>dataclass</code>","text":"<p>A data container that represents the \"Message-Class\" (1213) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageClass.class_identifier","title":"class_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>class_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MessageClass.token_text","title":"token_text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_text: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToHaMsa","title":"MipFaToHaMsa  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-FA-to-HA-MSA\" (328) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToHaMsa.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToHaMsa.mip_algorithm_type","title":"mip_algorithm_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_algorithm_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToHaMsa.mip_fa_to_ha_spi","title":"mip_fa_to_ha_spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_fa_to_ha_spi: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToHaMsa.mip_session_key","title":"mip_session_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_session_key: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToMnMsa","title":"MipFaToMnMsa  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-FA-to-MN-MSA\" (326) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToMnMsa.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToMnMsa.mip_algorithm_type","title":"mip_algorithm_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_algorithm_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToMnMsa.mip_fa_to_mn_spi","title":"mip_fa_to_mn_spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_fa_to_mn_spi: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipFaToMnMsa.mip_session_key","title":"mip_session_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_session_key: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToFaMsa","title":"MipHaToFaMsa  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-HA-to-FA-MSA\" (329) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToFaMsa.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToFaMsa.mip_algorithm_type","title":"mip_algorithm_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_algorithm_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToFaMsa.mip_ha_to_fa_spi","title":"mip_ha_to_fa_spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_ha_to_fa_spi: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToFaMsa.mip_session_key","title":"mip_session_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_session_key: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToMnMsa","title":"MipHaToMnMsa  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-HA-to-MN-MSA\" (332) grouped AVP.</p> <p>Warning</p> <p>The rfc4004 fails to define the \"MIP-HA-to-MN-SPI\" AVP. This implementation uses the definition of the \"MIP-HA-to-FA-SPI\" AVP (323) in its place, as they're technically identocal.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToMnMsa.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToMnMsa.mip_algorithm_type","title":"mip_algorithm_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_algorithm_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToMnMsa.mip_ha_to_mn_spi","title":"mip_ha_to_mn_spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_ha_to_mn_spi: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToMnMsa.mip_replay_mode","title":"mip_replay_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_replay_mode: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHaToMnMsa.mip_session_key","title":"mip_session_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_session_key: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHomeAgentHost","title":"MipHomeAgentHost  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-Home-Agent-Host\" (348) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHomeAgentHost.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHomeAgentHost.origin_host","title":"origin_host  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipHomeAgentHost.origin_realm","title":"origin_realm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnAaaAuth","title":"MipMnAaaAuth  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-MN-AAA-Auth\" (322) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnAaaAuth.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnAaaAuth.mip_auth_input_data_length","title":"mip_auth_input_data_length  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_auth_input_data_length: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnAaaAuth.mip_authenticator_length","title":"mip_authenticator_length  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_authenticator_length: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnAaaAuth.mip_authenticator_offset","title":"mip_authenticator_offset  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_authenticator_offset: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnAaaAuth.mip_mn_aaa_spi","title":"mip_mn_aaa_spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_mn_aaa_spi: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToFaMsa","title":"MipMnToFaMsa  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-MN-to-FA-MSA\" (325) grouped AVP.</p> <p>Warning</p> <p>The rfc4004 fails to define the \"MIP-MN-to-FA-SPI\" AVP. This implementation assumes that it is the unclaimed AVP code 324.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToFaMsa.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToFaMsa.mip_algorithm_type","title":"mip_algorithm_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_algorithm_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToFaMsa.mip_mn_to_fa_spi","title":"mip_mn_to_fa_spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_mn_to_fa_spi: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToFaMsa.mip_nonce","title":"mip_nonce  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_nonce: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToHaMsa","title":"MipMnToHaMsa  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-MN-to-HA-MSA\" (331) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToHaMsa.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToHaMsa.mip_algorithm_type","title":"mip_algorithm_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_algorithm_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToHaMsa.mip_mn_ha_spi","title":"mip_mn_ha_spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_mn_ha_spi: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToHaMsa.mip_nonce","title":"mip_nonce  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_nonce: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipMnToHaMsa.mip_replay_mode","title":"mip_replay_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mip_replay_mode: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipOriginatingForeignAaa","title":"MipOriginatingForeignAaa  <code>dataclass</code>","text":"<p>A data container that represents the \"MIP-Originating-Foreign-AAA\" (347) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipOriginatingForeignAaa.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipOriginatingForeignAaa.origin_host","title":"origin_host  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MipOriginatingForeignAaa.origin_realm","title":"origin_realm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmContentType","title":"MmContentType  <code>dataclass</code>","text":"<p>A data container that represents the \"MM-Content-Type\" (1203) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmContentType.additional_content_information","title":"additional_content_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_content_information: list[\n    AdditionalContentInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmContentType.additional_type_information","title":"additional_type_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_type_information: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmContentType.content_size","title":"content_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmContentType.type_number","title":"type_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation","title":"MmsInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Service-Information\" (877) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.adaptations","title":"adaptations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>adaptations: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.applic_id","title":"applic_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>applic_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.aux_applic_info","title":"aux_applic_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aux_applic_info: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.content_class","title":"content_class  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_class: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.delivery_report_requested","title":"delivery_report_requested  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>delivery_report_requested: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.drm_content","title":"drm_content  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>drm_content: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.message_class","title":"message_class  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_class: MessageClass = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.message_id","title":"message_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.message_size","title":"message_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_size: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.message_type","title":"message_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.mm_content_type","title":"mm_content_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mm_content_type: MmContentType = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.mmbox_storage_requested","title":"mmbox_storage_requested  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mmbox_storage_requested: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.originator_address","title":"originator_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>originator_address: OriginatorAddress = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.priority","title":"priority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>priority: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.read_reply_report_requested","title":"read_reply_report_requested  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>read_reply_report_requested: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.recipient_address","title":"recipient_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipient_address: list[RecipientAddress] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.reply_applic_id","title":"reply_applic_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reply_applic_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.submission_time","title":"submission_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>submission_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.vas_id","title":"vas_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vas_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmsInformation.vasp_id","title":"vasp_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vasp_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmtelInformation","title":"MmtelInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"MMTel-Information\" (2030) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MmtelInformation.supplementary_service","title":"supplementary_service  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supplementary_service: list[SupplementaryService] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl","title":"MultipleServicesCreditControl  <code>dataclass</code>","text":"<p>A data container that represents the \"Multiple-Services-Credit-Control\" (456) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.af_correlation_information","title":"af_correlation_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>af_correlation_information: list[\n    AfCorrelationInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.announcement_information","title":"announcement_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>announcement_information: list[\n    AnnouncementInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.envelope","title":"envelope  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>envelope: list[Envelope] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.envelope_reporting","title":"envelope_reporting  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>envelope_reporting: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.final_unit_indication","title":"final_unit_indication  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>final_unit_indication: FinalUnitIndication = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.g_s_u_pool_reference","title":"g_s_u_pool_reference  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>g_s_u_pool_reference: list[GsuPoolReference] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.granted_service_unit","title":"granted_service_unit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>granted_service_unit: GrantedServiceUnit = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.ps_furnish_charging_information","title":"ps_furnish_charging_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ps_furnish_charging_information: PsFurnishChargingInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.qos_information","title":"qos_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_information: QosInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.quota_consumption_time","title":"quota_consumption_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quota_consumption_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.quota_holding_time","title":"quota_holding_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quota_holding_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.rating_group","title":"rating_group  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rating_group: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.refund_information","title":"refund_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>refund_information: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.related_trigger","title":"related_trigger  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related_trigger: RelatedTrigger = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.reporting_reason","title":"reporting_reason  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reporting_reason: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.requested_service_unit","title":"requested_service_unit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>requested_service_unit: RequestedServiceUnit = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.result_code","title":"result_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>result_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.service_identifier","title":"service_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_identifier: list[int] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.service_specific_info","title":"service_specific_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_specific_info: list[ServiceSpecificInfo] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.tariff_change_usage","title":"tariff_change_usage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tariff_change_usage: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.tgpp_rat_type","title":"tgpp_rat_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_rat_type: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.time_quota_mechanism","title":"time_quota_mechanism  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_quota_mechanism: TimeQuotaMechanism = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.time_quota_threshold","title":"time_quota_threshold  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_quota_threshold: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.trigger","title":"trigger  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trigger: Trigger = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.unit_quota_threshold","title":"unit_quota_threshold  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_quota_threshold: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.used_service_unit","title":"used_service_unit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>used_service_unit: list[UsedServiceUnit] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.validity_time","title":"validity_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>validity_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.MultipleServicesCreditControl.volume_quota_threshold","title":"volume_quota_threshold  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_quota_threshold: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NextTariff","title":"NextTariff  <code>dataclass</code>","text":"<p>A data container that represents the \"Next-Tariff\" (2057) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NextTariff.currency_code","title":"currency_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>currency_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NextTariff.rate_element","title":"rate_element  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rate_element: list[RateElement] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NextTariff.scale_factor","title":"scale_factor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scale_factor: ScaleFactor = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NiddSubmission","title":"NiddSubmission  <code>dataclass</code>","text":"<p>A data container that represents the \"NIDD-Submission\" (3928) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NiddSubmission.accounting_input_octets","title":"accounting_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NiddSubmission.accounting_output_octets","title":"accounting_output_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_output_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NiddSubmission.change_condition","title":"change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_condition: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NiddSubmission.event_timestamp","title":"event_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>event_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NniInformation","title":"NniInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"NNI-Information\" (2703) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NniInformation.neighbour_node_address","title":"neighbour_node_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>neighbour_node_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NniInformation.nni_type","title":"nni_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nni_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NniInformation.relationship_mode","title":"relationship_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relationship_mode: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.NniInformation.session_direction","title":"session_direction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>session_direction: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcOlr","title":"OcOlr  <code>dataclass</code>","text":"<p>A data container that represents the \"OC-OLR\" (623) grouped AVP.</p> <p>rfc7683</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcOlr.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcOlr.oc_reduction_percentage","title":"oc_reduction_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>oc_reduction_percentage: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcOlr.oc_report_type","title":"oc_report_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>oc_report_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcOlr.oc_sequence_number","title":"oc_sequence_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>oc_sequence_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcOlr.oc_validity_duration","title":"oc_validity_duration  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>oc_validity_duration: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcSupportedFeatures","title":"OcSupportedFeatures  <code>dataclass</code>","text":"<p>A data container that represents the \"OC-Supported-Features\" (621) grouped AVP.</p> <p>rfc7683</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcSupportedFeatures.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OcSupportedFeatures.oc_feature_vector","title":"oc_feature_vector  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>oc_feature_vector: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OfflineCharging","title":"OfflineCharging  <code>dataclass</code>","text":"<p>A data container that represents the \"Offline-Charging\" (1278) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OfflineCharging.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OfflineCharging.envelope_reporting","title":"envelope_reporting  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>envelope_reporting: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OfflineCharging.multiple_services_credit_control","title":"multiple_services_credit_control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>multiple_services_credit_control: list[\n    MultipleServicesCreditControl\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OfflineCharging.quota_consumption_time","title":"quota_consumption_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quota_consumption_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OfflineCharging.time_quota_mechanism","title":"time_quota_mechanism  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_quota_mechanism: TimeQuotaMechanism = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorAddress","title":"OriginatorAddress  <code>dataclass</code>","text":"<p>A data container that represents the \"Originator-Address\" (886) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorAddress.address_data","title":"address_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_data: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorAddress.address_domain","title":"address_domain  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_domain: AddressDomain = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorAddress.address_type","title":"address_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorInterface","title":"OriginatorInterface  <code>dataclass</code>","text":"<p>A data container that represents the \"Originator-Interface\" (2009) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorInterface.interface_id","title":"interface_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorInterface.interface_port","title":"interface_port  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_port: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorInterface.interface_text","title":"interface_text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_text: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorInterface.interface_type","title":"interface_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interface_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorReceivedAddress","title":"OriginatorReceivedAddress  <code>dataclass</code>","text":"<p>A data container that represents the \"Originator-Received-Address\" (2027) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorReceivedAddress.address_data","title":"address_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_data: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorReceivedAddress.address_domain","title":"address_domain  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_domain: AddressDomain = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.OriginatorReceivedAddress.address_type","title":"address_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ParticipantGroup","title":"ParticipantGroup  <code>dataclass</code>","text":"<p>A data container that represents the \"Participant-Group\" (1260) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ParticipantGroup.called_party_address","title":"called_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_party_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ParticipantGroup.participant_access_priority","title":"participant_access_priority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>participant_access_priority: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ParticipantGroup.user_participating_type","title":"user_participating_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_participating_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation","title":"PocInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"PoC-Information\" (879) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.charged_party","title":"charged_party  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>charged_party: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.number_of_participants","title":"number_of_participants  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_participants: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.participant_group","title":"participant_group  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>participant_group: list[ParticipantGroup] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.participants_involved","title":"participants_involved  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>participants_involved: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_controlling_address","title":"poc_controlling_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_controlling_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_event_type","title":"poc_event_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_event_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_group_name","title":"poc_group_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_group_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_server_role","title":"poc_server_role  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_server_role: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_session_id","title":"poc_session_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_session_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_session_initiation_type","title":"poc_session_initiation_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_session_initiation_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_session_type","title":"poc_session_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_session_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.poc_user_role","title":"poc_user_role  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_user_role: PocUserRole = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocInformation.talk_burst_exchange","title":"talk_burst_exchange  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>talk_burst_exchange: list[TalkBurstExchange] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocUserRole","title":"PocUserRole  <code>dataclass</code>","text":"<p>A data container that represents the \"PoC-User-Role\" (1252) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocUserRole.poc_user_role_ids","title":"poc_user_role_ids  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_user_role_ids: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PocUserRole.poc_user_role_info_units","title":"poc_user_role_info_units  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_user_role_info_units: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PolicyCounterStatusReport","title":"PolicyCounterStatusReport  <code>dataclass</code>","text":"<p>A data container that represents the \"Policy-Counter-Status-Report\" (2903) grouped AVP.</p> <p>3GPP TS 29.219 version 11.2.0 Release 11</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PolicyCounterStatusReport.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PolicyCounterStatusReport.policy_counter_identifier","title":"policy_counter_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>policy_counter_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PolicyCounterStatusReport.policy_counter_status","title":"policy_counter_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>policy_counter_status: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PortRange","title":"PortRange  <code>dataclass</code>","text":"<p>A data container that represents the \"Port-Range\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PortRange.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PortRange.port_end","title":"port_end  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>port_end: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PortRange.port_start","title":"port_start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>port_start: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PresenceReportingAreaInformation","title":"PresenceReportingAreaInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Presence-Reporting-Area-Information\" (2822) grouped AVP.</p> <p>3GPP TS 29.212 version 14.11.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PresenceReportingAreaInformation.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PresenceReportingAreaInformation.presence_reporting_area_elements_list","title":"presence_reporting_area_elements_list  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_elements_list: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PresenceReportingAreaInformation.presence_reporting_area_identifier","title":"presence_reporting_area_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_identifier: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PresenceReportingAreaInformation.presence_reporting_area_status","title":"presence_reporting_area_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer","title":"ProSeDirectCommunicationReceptionDataContainer  <code>dataclass</code>","text":"<p>A data container that represents the \"ProSe-Direct-Communication-Reception-Data-Container\" (3461) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.accounting_input_octets","title":"accounting_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.change_condition","title":"change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_condition: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.coverage_status","title":"coverage_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coverage_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.local_sequence_number","title":"local_sequence_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>local_sequence_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.radio_frequency","title":"radio_frequency  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>radio_frequency: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.radio_resources_indicator","title":"radio_resources_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>radio_resources_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.tgpp_user_location_info","title":"tgpp_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_user_location_info: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.usage_information_report_sequence_number","title":"usage_information_report_sequence_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>usage_information_report_sequence_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationReceptionDataContainer.visited_plmn_id","title":"visited_plmn_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>visited_plmn_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer","title":"ProSeDirectCommunicationTransmissionDataContainer  <code>dataclass</code>","text":"<p>A data container that represents the \"ProSe-Direct-Communication-Transmission-Data-Container\" (3441) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.accounting_output_octets","title":"accounting_output_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_output_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.change_condition","title":"change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_condition: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.coverage_status","title":"coverage_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coverage_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.local_sequence_number","title":"local_sequence_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>local_sequence_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.radio_frequency","title":"radio_frequency  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>radio_frequency: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.radio_resources_indicator","title":"radio_resources_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>radio_resources_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.tgpp_user_location_info","title":"tgpp_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_user_location_info: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.usage_information_report_sequence_number","title":"usage_information_report_sequence_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>usage_information_report_sequence_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProSeDirectCommunicationTransmissionDataContainer.visited_plmn_id","title":"visited_plmn_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>visited_plmn_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation","title":"ProseInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"ProSe-Information\" (3447) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.announcing_plmn_id","title":"announcing_plmn_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>announcing_plmn_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.announcing_ue_hplmn_identifier","title":"announcing_ue_hplmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>announcing_ue_hplmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.announcing_ue_vplmn_identifier","title":"announcing_ue_vplmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>announcing_ue_vplmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.application_specific_data","title":"application_specific_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_specific_data: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.coverage_info","title":"coverage_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coverage_info: list[CoverageInfo] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.layer_2_group_id","title":"layer_2_group_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>layer_2_group_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.monitored_hplmn_identifier","title":"monitored_hplmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>monitored_hplmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.monitoring_ue_hplmn_identifier","title":"monitoring_ue_hplmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>monitoring_ue_hplmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.monitoring_ue_identifier","title":"monitoring_ue_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>monitoring_ue_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.monitoring_ue_vplmn_identifier","title":"monitoring_ue_vplmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>monitoring_ue_vplmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.origin_app_layer_user_id","title":"origin_app_layer_user_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>origin_app_layer_user_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.pc3_control_protocol_cause","title":"pc3_control_protocol_cause  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pc3_control_protocol_cause: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.pc3_epc_control_protocol_cause","title":"pc3_epc_control_protocol_cause  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pc3_epc_control_protocol_cause: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.pc5_radio_technology","title":"pc5_radio_technology  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pc5_radio_technology: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_3rd_party_application_id","title":"prose_3rd_party_application_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_3rd_party_application_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_app_id","title":"prose_app_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_app_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_direct_communication_reception_data_container","title":"prose_direct_communication_reception_data_container  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_direct_communication_reception_data_container: list[\n    ProSeDirectCommunicationReceptionDataContainer\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_direct_communication_transmission_data_container","title":"prose_direct_communication_transmission_data_container  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_direct_communication_transmission_data_container: list[\n    ProSeDirectCommunicationTransmissionDataContainer\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_direct_discovery_model","title":"prose_direct_discovery_model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_direct_discovery_model: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_event_type","title":"prose_event_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_event_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_function_id","title":"prose_function_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_function_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_function_ip_address","title":"prose_function_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_function_ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_function_plmn_identifier","title":"prose_function_plmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_function_plmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_group_ip_multicast_address","title":"prose_group_ip_multicast_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_group_ip_multicast_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_range_class","title":"prose_range_class  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_range_class: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_reason_for_cancellation","title":"prose_reason_for_cancellation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_reason_for_cancellation: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_request_timestamp","title":"prose_request_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_request_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_role_of_ue","title":"prose_role_of_ue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_role_of_ue: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_source_ip_address","title":"prose_source_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_source_ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_target_layer_2_id","title":"prose_target_layer_2_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_target_layer_2_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_ue_id","title":"prose_ue_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_ue_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_ue_to_network_relay_ue_id","title":"prose_ue_to_network_relay_ue_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_ue_to_network_relay_ue_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.prose_validity_timer","title":"prose_validity_timer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_validity_timer: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.proximity_alert_indication","title":"proximity_alert_indication  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>proximity_alert_indication: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.proximity_alert_timestamp","title":"proximity_alert_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>proximity_alert_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.proximity_cancellation_timestamp","title":"proximity_cancellation_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>proximity_cancellation_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.radio_parameter_set_info","title":"radio_parameter_set_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>radio_parameter_set_info: list[\n    RadioParameterSetInfo\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.relay_ip_address","title":"relay_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>relay_ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.requested_plmn_identifier","title":"requested_plmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>requested_plmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.requesting_epuid","title":"requesting_epuid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>requesting_epuid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.requestor_plmn_identifier","title":"requestor_plmn_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>requestor_plmn_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.role_of_prose_function","title":"role_of_prose_function  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>role_of_prose_function: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.supported_features","title":"supported_features  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supported_features: list[SupportedFeatures] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.target_app_layer_user_id","title":"target_app_layer_user_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>target_app_layer_user_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.target_ip_address","title":"target_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>target_ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.time_first_reception","title":"time_first_reception  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_first_reception: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.time_first_transmission","title":"time_first_transmission  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_first_transmission: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.time_window","title":"time_window  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_window: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.transmitter_info","title":"transmitter_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transmitter_info: list[TransmitterInfo] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProseInformation.wlan_link_layer_id","title":"wlan_link_layer_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>wlan_link_layer_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProxyInfo","title":"ProxyInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Proxy-Info\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProxyInfo.proxy_host","title":"proxy_host  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>proxy_host: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ProxyInfo.proxy_state","title":"proxy_state  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>proxy_state: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsFurnishChargingInformation","title":"PsFurnishChargingInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"PS-Furnish-Charging-Information\" (865) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsFurnishChargingInformation.ps_append_free_format_data","title":"ps_append_free_format_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ps_append_free_format_data: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsFurnishChargingInformation.ps_free_format_data","title":"ps_free_format_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ps_free_format_data: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsFurnishChargingInformation.tgpp_charging_id","title":"tgpp_charging_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_charging_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation","title":"PsInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"PS-Information\" (874) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.adc_rule_base_name","title":"adc_rule_base_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>adc_rule_base_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.apn_rate_control","title":"apn_rate_control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>apn_rate_control: ApnRateControl = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.called_station_id","title":"called_station_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>called_station_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.cg_address","title":"cg_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cg_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.change_condition","title":"change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_condition: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.charging_characteristics_selection_mode","title":"charging_characteristics_selection_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>charging_characteristics_selection_mode: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.charging_per_ip_can_session_indicator","title":"charging_per_ip_can_session_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>charging_per_ip_can_session_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.charging_rule_base_name","title":"charging_rule_base_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>charging_rule_base_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.cn_operator_selection_entity","title":"cn_operator_selection_entity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cn_operator_selection_entity: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.cp_ciot_eps_optimisation_indicator","title":"cp_ciot_eps_optimisation_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cp_ciot_eps_optimisation_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.diagnostics","title":"diagnostics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>diagnostics: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.dynamic_address_flag","title":"dynamic_address_flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dynamic_address_flag: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.dynamic_address_flag_extension","title":"dynamic_address_flag_extension  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dynamic_address_flag_extension: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.enhanced_diagnostics","title":"enhanced_diagnostics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>enhanced_diagnostics: EnhancedDiagnostics = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.epdg_address","title":"epdg_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>epdg_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.fixed_user_location_info","title":"fixed_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fixed_user_location_info: FixedUserLocationInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.ggsn_address","title":"ggsn_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ggsn_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.imsi_unauthenticated_flag","title":"imsi_unauthenticated_flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>imsi_unauthenticated_flag: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.local_access_id","title":"local_access_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>local_access_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.low_priority_indicator","title":"low_priority_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>low_priority_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.mme_name","title":"mme_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mme_name: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.mme_number_for_mt_sms","title":"mme_number_for_mt_sms  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mme_number_for_mt_sms: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.mme_realm","title":"mme_realm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mme_realm: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.nbifom_mode","title":"nbifom_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nbifom_mode: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.nbifom_support","title":"nbifom_support  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nbifom_support: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.node_id","title":"node_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>node_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.offline_charging","title":"offline_charging  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>offline_charging: OfflineCharging = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.pdn_connection_charging_id","title":"pdn_connection_charging_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pdn_connection_charging_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.pdp_address","title":"pdp_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pdp_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.pdp_address_prefix_length","title":"pdp_address_prefix_length  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pdp_address_prefix_length: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.pdp_context_type","title":"pdp_context_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pdp_context_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.physical_access_id","title":"physical_access_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>physical_access_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.presence_reporting_area_information","title":"presence_reporting_area_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_information: list[\n    PresenceReportingAreaInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.ps_furnish_charging_information","title":"ps_furnish_charging_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ps_furnish_charging_information: PsFurnishChargingInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.qos_information","title":"qos_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_information: QosInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.ran_secondary_rat_usage_report","title":"ran_secondary_rat_usage_report  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ran_secondary_rat_usage_report: list[\n    RanSecondaryRatUsageReport\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.rrc_cause_counter","title":"rrc_cause_counter  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rrc_cause_counter: RrcCauseCounter = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.scs_as_address","title":"scs_as_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scs_as_address: ScsAsAddress = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.service_data_container","title":"service_data_container  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_data_container: list[\n    ServiceDataContainer\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.serving_node_type","title":"serving_node_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serving_node_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.serving_plmn_rate_control","title":"serving_plmn_rate_control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serving_plmn_rate_control: ServingPlmnRateControl = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.sgi_ptp_tunneling_method","title":"sgi_ptp_tunneling_method  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgi_ptp_tunneling_method: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.sgsn_address","title":"sgsn_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgsn_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.sgw_address","title":"sgw_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgw_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.sgw_change","title":"sgw_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgw_change: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.start_time","title":"start_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>start_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.stop_time","title":"stop_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stop_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.supported_features","title":"supported_features  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supported_features: list[SupportedFeatures] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tdf_ip_address","title":"tdf_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tdf_ip_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.terminal_information","title":"terminal_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>terminal_information: TerminalInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp2_bsid","title":"tgpp2_bsid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp2_bsid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_charging_characteristics","title":"tgpp_charging_characteristics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_charging_characteristics: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_charging_id","title":"tgpp_charging_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_charging_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_ggsn_mcc_mnc","title":"tgpp_ggsn_mcc_mnc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_ggsn_mcc_mnc: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_imsi_mcc_mnc","title":"tgpp_imsi_mcc_mnc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_imsi_mcc_mnc: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_ms_timezone","title":"tgpp_ms_timezone  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_ms_timezone: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_nsapi","title":"tgpp_nsapi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_nsapi: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_pdp_type","title":"tgpp_pdp_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_pdp_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_ps_data_off_status","title":"tgpp_ps_data_off_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_ps_data_off_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_rat_type","title":"tgpp_rat_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_rat_type: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_selection_mode","title":"tgpp_selection_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_selection_mode: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_session_stop_indicator","title":"tgpp_session_stop_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_session_stop_indicator: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_sgsn_mcc_mnc","title":"tgpp_sgsn_mcc_mnc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_sgsn_mcc_mnc: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.tgpp_user_location_info","title":"tgpp_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_user_location_info: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.traffic_data_volumes","title":"traffic_data_volumes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>traffic_data_volumes: list[TrafficDataVolumes] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.twag_address","title":"twag_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>twag_address: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.twan_user_location_info","title":"twan_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>twan_user_location_info: TwanUserLocationInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.uni_pdu_cp_only_flag","title":"uni_pdu_cp_only_flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>uni_pdu_cp_only_flag: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.unused_quota_timer","title":"unused_quota_timer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unused_quota_timer: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.user_csg_information","title":"user_csg_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_csg_information: UserCsgInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.user_equipment_info","title":"user_equipment_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info: UserEquipmentInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.user_location_info_time","title":"user_location_info_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_location_info_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.PsInformation.uwan_user_location_info","title":"uwan_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>uwan_user_location_info: UwanUserLocationInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosFinalUnitIndication","title":"QosFinalUnitIndication  <code>dataclass</code>","text":"<p>A data container that represents the \"QoS-Final-Unit-Indication\" (669) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosFinalUnitIndication.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosFinalUnitIndication.filter_id","title":"filter_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>filter_id: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosFinalUnitIndication.filter_rule","title":"filter_rule  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>filter_rule: list[FilterRule] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosFinalUnitIndication.final_unit_action","title":"final_unit_action  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>final_unit_action: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosFinalUnitIndication.redirect_server_extension","title":"redirect_server_extension  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>redirect_server_extension: RedirectServerExtension = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosInformation","title":"QosInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"QoS-Information\" (1016) grouped AVP.</p> <p>3GPP TS 29.212 version 7.4.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosInformation.bearer_identifier","title":"bearer_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bearer_identifier: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosInformation.guaranteed_bitrate_dl","title":"guaranteed_bitrate_dl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>guaranteed_bitrate_dl: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosInformation.guaranteed_bitrate_ul","title":"guaranteed_bitrate_ul  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>guaranteed_bitrate_ul: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosInformation.max_requested_bandwith_dl","title":"max_requested_bandwith_dl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_requested_bandwith_dl: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosInformation.max_requested_bandwith_ul","title":"max_requested_bandwith_ul  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_requested_bandwith_ul: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosInformation.qos_class_identifier","title":"qos_class_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_class_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosParameters","title":"QosParameters  <code>dataclass</code>","text":"<p>A data container that represents the \"QoS-Parameters\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosParameters.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosProfileTemplate","title":"QosProfileTemplate  <code>dataclass</code>","text":"<p>A data container that represents the \"QoS-Profile-Template\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosProfileTemplate.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosProfileTemplate.qos_profile_id","title":"qos_profile_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_profile_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.QosProfileTemplate.vendor_id","title":"vendor_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vendor_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RadioParameterSetInfo","title":"RadioParameterSetInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Radio-Parameter-Set-Values\" (3463) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RadioParameterSetInfo.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RadioParameterSetInfo.radio_parameter_set_values","title":"radio_parameter_set_values  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>radio_parameter_set_values: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RanSecondaryRatUsageReport","title":"RanSecondaryRatUsageReport  <code>dataclass</code>","text":"<p>A data container that represents the \"RAN-Secondary-RAT-Usage-Report\" (1302) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RanSecondaryRatUsageReport.accounting_input_octets","title":"accounting_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RanSecondaryRatUsageReport.accounting_output_octets","title":"accounting_output_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_output_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RanSecondaryRatUsageReport.ran_end_timestamp","title":"ran_end_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ran_end_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RanSecondaryRatUsageReport.ran_start_timestamp","title":"ran_start_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ran_start_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RanSecondaryRatUsageReport.secondary_rat_type","title":"secondary_rat_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>secondary_rat_type: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RanSecondaryRatUsageReport.tgpp_charging_id","title":"tgpp_charging_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_charging_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RateElement","title":"RateElement  <code>dataclass</code>","text":"<p>A data container that represents the \"Rate-Element\" (2058) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RateElement.cc_unit_type","title":"cc_unit_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_unit_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RateElement.charge_reason_code","title":"charge_reason_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>charge_reason_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RateElement.unit_cost","title":"unit_cost  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_cost: UnitCost = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RateElement.unit_quota_threshold","title":"unit_quota_threshold  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_quota_threshold: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RateElement.unit_value","title":"unit_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_value: UnitValue = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RealTimeTariffInformation","title":"RealTimeTariffInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Real-Time-Tariff-Information\" (2305) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RealTimeTariffInformation.tariff_information","title":"tariff_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tariff_information: TariffInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RealTimeTariffInformation.tariff_xml","title":"tariff_xml  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tariff_xml: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientAddress","title":"RecipientAddress  <code>dataclass</code>","text":"<p>A data container that represents the \"Recipient-Address\" (1201) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientAddress.address_data","title":"address_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_data: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientAddress.address_domain","title":"address_domain  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_domain: AddressDomain = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientAddress.address_type","title":"address_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientAddress.addressee_type","title":"addressee_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>addressee_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientInfo","title":"RecipientInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Recipient-Info\" (2026) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientInfo.destination_interface","title":"destination_interface  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_interface: DestinationInterface = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientInfo.recipient_address","title":"recipient_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipient_address: list[RecipientAddress] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientInfo.recipient_received_address","title":"recipient_received_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipient_received_address: list[\n    RecipientReceivedAddress\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientInfo.recipient_sccp_address","title":"recipient_sccp_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipient_sccp_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientInfo.sm_protocol_id","title":"sm_protocol_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_protocol_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientReceivedAddress","title":"RecipientReceivedAddress  <code>dataclass</code>","text":"<p>A data container that represents the \"Recipient-Received-Address\" (2028) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientReceivedAddress.address_data","title":"address_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_data: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientReceivedAddress.address_domain","title":"address_domain  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_domain: AddressDomain = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RecipientReceivedAddress.address_type","title":"address_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServer","title":"RedirectServer  <code>dataclass</code>","text":"<p>A data container that represents the \"Redirect-Server\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServer.redirect_address_type","title":"redirect_address_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>redirect_address_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServer.redirect_server_address","title":"redirect_server_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>redirect_server_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServerExtension","title":"RedirectServerExtension  <code>dataclass</code>","text":"<p>A data container that represents the \"Redirect-Server-Extension\" grouped AVP.</p> <p>Warning</p> <p>Even though this data class permits adding more than one AVP in the <code>additional_avps</code> custom AVP list, the rfc8506 specification forbids adding more than one AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServerExtension.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServerExtension.redirect_address_ipaddress","title":"redirect_address_ipaddress  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>redirect_address_ipaddress: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServerExtension.redirect_address_sip_url","title":"redirect_address_sip_url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>redirect_address_sip_url: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RedirectServerExtension.redirect_address_url","title":"redirect_address_url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>redirect_address_url: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation","title":"RelatedChangeConditionInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Related-Change-Condition-Information\" (3925) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.change_condition","title":"change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_condition: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.presence_reporting_area_status","title":"presence_reporting_area_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.sgsn_address","title":"sgsn_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgsn_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.tgpp2_bsid","title":"tgpp2_bsid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp2_bsid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.tgpp_rat_type","title":"tgpp_rat_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_rat_type: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.tgpp_user_location_info","title":"tgpp_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_user_location_info: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.user_csg_information","title":"user_csg_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_csg_information: UserCsgInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedChangeConditionInformation.uwan_user_location_info","title":"uwan_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>uwan_user_location_info: UwanUserLocationInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedTrigger","title":"RelatedTrigger  <code>dataclass</code>","text":"<p>A data container that represents the \"Related-Trigger\" (3926) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RelatedTrigger.trigger_type","title":"trigger_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trigger_type: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RemainingBalance","title":"RemainingBalance  <code>dataclass</code>","text":"<p>A data container that represents the \"Remaining-Balance\" (2021) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RemainingBalance.currency_code","title":"currency_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>currency_code: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RemainingBalance.unit_value","title":"unit_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unit_value: UnitValue = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RrcCauseCounter","title":"RrcCauseCounter  <code>dataclass</code>","text":"<p>A data container that represents the \"RRC-Cause-Counter\" (4318) grouped AVP.</p> <p>3GPP TS 29.128 version 13.4.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RrcCauseCounter.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RrcCauseCounter.counter_value","title":"counter_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>counter_value: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.RrcCauseCounter.rrc_counter_timestamp","title":"rrc_counter_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rrc_counter_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ScaleFactor","title":"ScaleFactor  <code>dataclass</code>","text":"<p>A data container that represents the \"Scale-Factor\" (2059) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ScaleFactor.exponent","title":"exponent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exponent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ScaleFactor.value_digits","title":"value_digits  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value_digits: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ScsAsAddress","title":"ScsAsAddress  <code>dataclass</code>","text":"<p>A data container that represents the \"SCS-AS-Address\" (3940) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ScsAsAddress.scs_address","title":"scs_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scs_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ScsAsAddress.scs_realm","title":"scs_realm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scs_realm: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent","title":"SdpMediaComponent  <code>dataclass</code>","text":"<p>A data container that represents the \"SDP-Media-Component\" (843) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.access_network_charging_identifier_value","title":"access_network_charging_identifier_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_network_charging_identifier_value: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.ip_realm_default_indication","title":"ip_realm_default_indication  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ip_realm_default_indication: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.local_gw_inserted_indication","title":"local_gw_inserted_indication  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>local_gw_inserted_indication: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.media_initiator_flag","title":"media_initiator_flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>media_initiator_flag: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.media_initiator_party","title":"media_initiator_party  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>media_initiator_party: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.sdp_media_description","title":"sdp_media_description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_media_description: list[str] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.sdp_media_name","title":"sdp_media_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_media_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.sdp_type","title":"sdp_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.tgpp_charging_id","title":"tgpp_charging_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_charging_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpMediaComponent.transcoder_inserted_indication","title":"transcoder_inserted_indication  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transcoder_inserted_indication: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpTimestamps","title":"SdpTimestamps  <code>dataclass</code>","text":"<p>A data container that represents the \"SDP-Timestamps\" (1273) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpTimestamps.sdp_answer_timestamp","title":"sdp_answer_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_answer_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SdpTimestamps.sdp_offer_timestamp","title":"sdp_offer_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sdp_offer_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServerCapabilities","title":"ServerCapabilities  <code>dataclass</code>","text":"<p>A data container that represents the \"Server-Capabilities\" (603) grouped AVP.</p> <p>3GPP TS 29.229 version 11.3.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServerCapabilities.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServerCapabilities.mandatory_capability","title":"mandatory_capability  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mandatory_capability: list[int] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServerCapabilities.optional_capability","title":"optional_capability  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>optional_capability: list[int] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServerCapabilities.server_name","title":"server_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>server_name: list[str] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer","title":"ServiceDataContainer  <code>dataclass</code>","text":"<p>A data container that represents the \"Traffic-Data-Volumes\" (2040) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.accounting_input_octets","title":"accounting_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.accounting_output_octets","title":"accounting_output_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_output_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.adc_rule_base_name","title":"adc_rule_base_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>adc_rule_base_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.af_correlation_information","title":"af_correlation_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>af_correlation_information: AfCorrelationInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.apn_rate_control","title":"apn_rate_control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>apn_rate_control: ApnRateControl = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.application_service_provider_identity","title":"application_service_provider_identity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_service_provider_identity: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.change_condition","title":"change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_condition: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.charging_rule_base_name","title":"charging_rule_base_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>charging_rule_base_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.local_sequence_number","title":"local_sequence_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>local_sequence_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.presence_reporting_area_information","title":"presence_reporting_area_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_information: list[\n    PresenceReportingAreaInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.presence_reporting_area_status","title":"presence_reporting_area_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.qos_information","title":"qos_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_information: QosInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.rating_group","title":"rating_group  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rating_group: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.related_change_condition_information","title":"related_change_condition_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related_change_condition_information: RelatedChangeConditionInformation = (\n    None\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.service_identifier","title":"service_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.service_specific_info","title":"service_specific_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_specific_info: ServiceSpecificInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.serving_plmn_rate_control","title":"serving_plmn_rate_control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serving_plmn_rate_control: ServingPlmnRateControl = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.sgsn_address","title":"sgsn_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgsn_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.sponsor_identity","title":"sponsor_identity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sponsor_identity: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.tgpp2_bsid","title":"tgpp2_bsid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp2_bsid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.tgpp_ps_data_off_status","title":"tgpp_ps_data_off_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_ps_data_off_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.tgpp_rat_type","title":"tgpp_rat_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_rat_type: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.tgpp_user_location_info","title":"tgpp_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_user_location_info: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.time_first_usage","title":"time_first_usage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_first_usage: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.time_last_usage","title":"time_last_usage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_last_usage: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.time_usage","title":"time_usage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_usage: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.traffic_steering_policy_identifier_dl","title":"traffic_steering_policy_identifier_dl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>traffic_steering_policy_identifier_dl: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.traffic_steering_policy_identifier_ul","title":"traffic_steering_policy_identifier_ul  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>traffic_steering_policy_identifier_ul: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.twan_user_location_info","title":"twan_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>twan_user_location_info: TwanUserLocationInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.user_csg_information","title":"user_csg_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_csg_information: UserCsgInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.uwan_user_location_info","title":"uwan_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>uwan_user_location_info: UwanUserLocationInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceDataContainer.volte_information","title":"volte_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volte_information: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceGenericInformation","title":"ServiceGenericInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Service-Generic-Information\" (1256) grouped AVP.</p> <p>OMA-DDS-Charging_Data-V1_0-20110201-A</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceGenericInformation.application_server_id","title":"application_server_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_server_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceGenericInformation.application_service_type","title":"application_service_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_service_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceGenericInformation.application_session_id","title":"application_session_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_session_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceGenericInformation.delivery_status","title":"delivery_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>delivery_status: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation","title":"ServiceInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Service-Information\" (873) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.aoc_information","title":"aoc_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_information: AocInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.cpdt_information","title":"cpdt_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cpdt_information: CpdtInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.dcd_information","title":"dcd_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dcd_information: DcdInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.im_information","title":"im_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>im_information: ImInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.ims_information","title":"ims_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ims_information: ImsInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.lcs_information","title":"lcs_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_information: LcsInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.m2m_information","title":"m2m_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>m2m_information: M2mInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.mbms_information","title":"mbms_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mbms_information: MbmsInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.mms_information","title":"mms_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mms_information: MmsInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.mmtel_information","title":"mmtel_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mmtel_information: MmtelInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.poc_information","title":"poc_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_information: PocInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.prose_information","title":"prose_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_information: ProseInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.ps_information","title":"ps_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ps_information: PsInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.service_generic_information","title":"service_generic_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_generic_information: ServiceGenericInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.sms_information","title":"sms_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sms_information: SmsInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.subscription_id","title":"subscription_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>subscription_id: list[SubscriptionId] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceInformation.vcs_information","title":"vcs_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vcs_information: VcsInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceParameterInfo","title":"ServiceParameterInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Service-Parameter-Info\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceParameterInfo.service_parameter_type","title":"service_parameter_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_parameter_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceParameterInfo.service_parameter_value","title":"service_parameter_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_parameter_value: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceSpecificInfo","title":"ServiceSpecificInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Service-Specific-Info\" (1249) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceSpecificInfo.service_specific_data","title":"service_specific_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_specific_data: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServiceSpecificInfo.service_specific_type","title":"service_specific_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_specific_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode","title":"ServingNode  <code>dataclass</code>","text":"<p>A data container that represents the \"Serving-Node\" (2401) grouped AVP.</p> <p>3GPP TS 29.173 version 14.0.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.gmlc_address","title":"gmlc_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>gmlc_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.lcs_capabilities_sets","title":"lcs_capabilities_sets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lcs_capabilities_sets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.mme_name","title":"mme_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mme_name: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.mme_realm","title":"mme_realm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mme_realm: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.msc_number","title":"msc_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>msc_number: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.sgsn_name","title":"sgsn_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgsn_name: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.sgsn_number","title":"sgsn_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgsn_number: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.sgsn_realm","title":"sgsn_realm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sgsn_realm: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingNode.tgpp_aaa_server_name","title":"tgpp_aaa_server_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_aaa_server_name: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingPlmnRateControl","title":"ServingPlmnRateControl  <code>dataclass</code>","text":"<p>A data container that represents the \"Serving-PLMN-Rate-Control\" (4310) grouped AVP.</p> <p>3GPP TS 29.128 version 13.1.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingPlmnRateControl.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingPlmnRateControl.downlink_rate_limit","title":"downlink_rate_limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>downlink_rate_limit: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ServingPlmnRateControl.uplink_rate_limit","title":"uplink_rate_limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>uplink_rate_limit: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmDeviceTriggerInformation","title":"SmDeviceTriggerInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"SM-Device-Trigger-Information\" (3405) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmDeviceTriggerInformation.application_port_identifier","title":"application_port_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_port_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmDeviceTriggerInformation.mtc_iwf_address","title":"mtc_iwf_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mtc_iwf_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmDeviceTriggerInformation.priority_indication","title":"priority_indication  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>priority_indication: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmDeviceTriggerInformation.reference_number","title":"reference_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reference_number: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmDeviceTriggerInformation.serving_node","title":"serving_node  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serving_node: ServingNode = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmDeviceTriggerInformation.validity_time","title":"validity_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>validity_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation","title":"SmsInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"SMS-Information\" (2000) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.application_port_identifier","title":"application_port_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>application_port_identifier: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.client_address","title":"client_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>client_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.data_coding_scheme","title":"data_coding_scheme  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data_coding_scheme: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.external_identifier","title":"external_identifier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>external_identifier: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.mtc_iwf_address","title":"mtc_iwf_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mtc_iwf_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.number_of_messages_sent","title":"number_of_messages_sent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_messages_sent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.originator_interface","title":"originator_interface  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>originator_interface: OriginatorInterface = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.originator_received_address","title":"originator_received_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>originator_received_address: OriginatorReceivedAddress = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.originator_sccp_address","title":"originator_sccp_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>originator_sccp_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.recipient_info","title":"recipient_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipient_info: list[RecipientInfo] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.reply_path_requested","title":"reply_path_requested  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reply_path_requested: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_device_trigger_indicator","title":"sm_device_trigger_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_device_trigger_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_device_trigger_information","title":"sm_device_trigger_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_device_trigger_information: SmDeviceTriggerInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_discharge_time","title":"sm_discharge_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_discharge_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_message_type","title":"sm_message_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_message_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_protocol_id","title":"sm_protocol_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_protocol_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_service_type","title":"sm_service_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_service_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_status","title":"sm_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_status: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sm_user_data_header","title":"sm_user_data_header  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sm_user_data_header: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sms_node","title":"sms_node  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sms_node: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.sms_result","title":"sms_result  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sms_result: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SmsInformation.smsc_address","title":"smsc_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>smsc_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SubscriptionId","title":"SubscriptionId  <code>dataclass</code>","text":"<p>A data container that represents the \"Subscription-ID\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SubscriptionId.subscription_id_data","title":"subscription_id_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>subscription_id_data: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SubscriptionId.subscription_id_type","title":"subscription_id_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>subscription_id_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService","title":"SupplementaryService  <code>dataclass</code>","text":"<p>A data container that represents the \"Supplementary-Service\" (2048) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.aoc_information","title":"aoc_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>aoc_information: AocInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.associated_party_address","title":"associated_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>associated_party_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.cug_information","title":"cug_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cug_information: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.mmtel_service_type","title":"mmtel_service_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mmtel_service_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.number_of_diversions","title":"number_of_diversions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_diversions: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.number_of_participants","title":"number_of_participants  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_participants: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.participant_action_type","title":"participant_action_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>participant_action_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.service_id","title":"service_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupplementaryService.service_mode","title":"service_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>service_mode: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupportedFeatures","title":"SupportedFeatures  <code>dataclass</code>","text":"<p>A data container that represents the \"Supported-Features\" (628) grouped AVP.</p> <p>3GPP TS 29.229 version 11.3.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupportedFeatures.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupportedFeatures.feature_list","title":"feature_list  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>feature_list: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupportedFeatures.feature_list_id","title":"feature_list_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>feature_list_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.SupportedFeatures.vendor_id","title":"vendor_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vendor_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange","title":"TalkBurstExchange  <code>dataclass</code>","text":"<p>A data container that represents the \"Talk-Burst-Exchange\" (1255) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.number_of_participants","title":"number_of_participants  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_participants: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.number_of_received_talk_bursts","title":"number_of_received_talk_bursts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_received_talk_bursts: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.number_of_talk_bursts","title":"number_of_talk_bursts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_talk_bursts: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.poc_change_condition","title":"poc_change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_change_condition: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.poc_change_time","title":"poc_change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>poc_change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.received_talk_burst_time","title":"received_talk_burst_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>received_talk_burst_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.received_talk_burst_volume","title":"received_talk_burst_volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>received_talk_burst_volume: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.talk_burst_time","title":"talk_burst_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>talk_burst_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TalkBurstExchange.talk_burst_volume","title":"talk_burst_volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>talk_burst_volume: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TariffInformation","title":"TariffInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Tariff-Information\" (2060) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TariffInformation.current_tariff","title":"current_tariff  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>current_tariff: CurrentTariff = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TariffInformation.next_tariff","title":"next_tariff  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>next_tariff: NextTariff = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TariffInformation.tariff_time_change","title":"tariff_time_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tariff_time_change: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpFlags","title":"TcpFlags  <code>dataclass</code>","text":"<p>A data container that represents the Tcp-Flags AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpFlags.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpFlags.negated","title":"negated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>negated: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpFlags.tcp_flag_type","title":"tcp_flag_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tcp_flag_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpOption","title":"TcpOption  <code>dataclass</code>","text":"<p>             Bases: <code>GenericSpec</code></p> <p>A data container that represents the Tcp-Option AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpOption.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpOption.negated","title":"negated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>negated: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpOption.tcp_option_type","title":"tcp_option_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tcp_option_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TcpOption.tcp_option_value","title":"tcp_option_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tcp_option_value: list[bytes] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TerminalInformation","title":"TerminalInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"Terminal-Information\" (1401) grouped AVP.</p> <p>3GPP TS 29.272 version 8.3.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TerminalInformation.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TerminalInformation.imei","title":"imei  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>imei: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TerminalInformation.software_version","title":"software_version  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>software_version: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TerminalInformation.tgpp2_meid","title":"tgpp2_meid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp2_meid: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition","title":"TimeOfDayCondition  <code>dataclass</code>","text":"<p>A data container that represents the \"Time-Of-Day-Condition\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.absolute_end_time","title":"absolute_end_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>absolute_end_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.absolute_start_time","title":"absolute_start_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>absolute_start_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.day_of_month_mask","title":"day_of_month_mask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>day_of_month_mask: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.day_of_week_mask","title":"day_of_week_mask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>day_of_week_mask: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.month_of_year_mask","title":"month_of_year_mask  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>month_of_year_mask: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.time_of_day_end","title":"time_of_day_end  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_of_day_end: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.time_of_day_start","title":"time_of_day_start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_of_day_start: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeOfDayCondition.timezone_flag","title":"timezone_flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timezone_flag: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeQuotaMechanism","title":"TimeQuotaMechanism  <code>dataclass</code>","text":"<p>A data container that represents the \"Time-Quota-Mechanism\" (1270) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeQuotaMechanism.base_time_interval","title":"base_time_interval  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>base_time_interval: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeQuotaMechanism.time_quota_type","title":"time_quota_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_quota_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeStamps","title":"TimeStamps  <code>dataclass</code>","text":"<p>A data container that represents the \"Time-Stamps\" (833) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeStamps.sip_request_timestamp","title":"sip_request_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sip_request_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeStamps.sip_request_timestamp_fraction","title":"sip_request_timestamp_fraction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sip_request_timestamp_fraction: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeStamps.sip_response_timestamp","title":"sip_response_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sip_response_timestamp: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TimeStamps.sip_response_timestamp_fraction","title":"sip_response_timestamp_fraction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sip_response_timestamp_fraction: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.ToSpec","title":"ToSpec  <code>dataclass</code>","text":"<p>             Bases: <code>FromToSpec</code></p> <p>A data container that represents the To-Spec AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes","title":"TrafficDataVolumes  <code>dataclass</code>","text":"<p>A data container that represents the \"Traffic-Data-Volumes\" (2046) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.access_availability_change_reason","title":"access_availability_change_reason  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>access_availability_change_reason: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.accounting_input_octets","title":"accounting_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.accounting_output_octets","title":"accounting_output_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>accounting_output_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.apn_rate_control","title":"apn_rate_control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>apn_rate_control: ApnRateControl = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.change_condition","title":"change_condition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_condition: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.change_time","title":"change_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.cp_ciot_eps_optimisation_indicator","title":"cp_ciot_eps_optimisation_indicator  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cp_ciot_eps_optimisation_indicator: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.diagnostics","title":"diagnostics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>diagnostics: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.enhanced_diagnostics","title":"enhanced_diagnostics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>enhanced_diagnostics: EnhancedDiagnostics = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.presence_reporting_area_information","title":"presence_reporting_area_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_information: list[\n    PresenceReportingAreaInformation\n] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.presence_reporting_area_status","title":"presence_reporting_area_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>presence_reporting_area_status: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.qos_information","title":"qos_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>qos_information: QosInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.related_change_condition_information","title":"related_change_condition_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related_change_condition_information: RelatedChangeConditionInformation = (\n    None\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.serving_plmn_rate_control","title":"serving_plmn_rate_control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serving_plmn_rate_control: ServingPlmnRateControl = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.tgpp_charging_id","title":"tgpp_charging_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_charging_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.tgpp_rat_type","title":"tgpp_rat_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_rat_type: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.tgpp_user_location_info","title":"tgpp_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tgpp_user_location_info: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.user_csg_information","title":"user_csg_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_csg_information: UserCsgInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrafficDataVolumes.uwan_user_location_info","title":"uwan_user_location_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>uwan_user_location_info: UwanUserLocationInfo = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TransmitterInfo","title":"TransmitterInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"Transmitter-Info\" (3468) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TransmitterInfo.prose_source_ip_address","title":"prose_source_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_source_ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TransmitterInfo.prose_ue_id","title":"prose_ue_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prose_ue_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Trigger","title":"Trigger  <code>dataclass</code>","text":"<p>A data container that represents the \"Trigger\" (1264) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Trigger.trigger_type","title":"trigger_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trigger_type: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrunkGroupId","title":"TrunkGroupId  <code>dataclass</code>","text":"<p>A data container that represents the \"Application-Server-Information\" (850) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrunkGroupId.incoming_trunk_group_id","title":"incoming_trunk_group_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>incoming_trunk_group_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TrunkGroupId.outgoing_trunk_group_id","title":"outgoing_trunk_group_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>outgoing_trunk_group_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling","title":"Tunneling  <code>dataclass</code>","text":"<p>A data container that represents the \"Tunneling\" (401) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_assignment_id","title":"tunnel_assignment_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_assignment_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_client_auth_id","title":"tunnel_client_auth_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_client_auth_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_client_endpoint","title":"tunnel_client_endpoint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_client_endpoint: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_medium_type","title":"tunnel_medium_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_medium_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_password","title":"tunnel_password  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_password: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_preference","title":"tunnel_preference  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_preference: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_private_group_id","title":"tunnel_private_group_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_private_group_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_server_auth_id","title":"tunnel_server_auth_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_server_auth_id: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_server_endpoint","title":"tunnel_server_endpoint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_server_endpoint: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.Tunneling.tunnel_type","title":"tunnel_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tunnel_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TwanUserLocationInfo","title":"TwanUserLocationInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"TWAN-User-Location-Info\" (2714) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TwanUserLocationInfo.bssid","title":"bssid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bssid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TwanUserLocationInfo.civic_address_information","title":"civic_address_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>civic_address_information: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TwanUserLocationInfo.logical_access_id","title":"logical_access_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logical_access_id: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TwanUserLocationInfo.ssid","title":"ssid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ssid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.TwanUserLocationInfo.wlan_operator_id","title":"wlan_operator_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>wlan_operator_id: WlanOperatorId = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UnitCost","title":"UnitCost  <code>dataclass</code>","text":"<p>A data container that represents the \"Unit-Cost\" (2061) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UnitCost.exponent","title":"exponent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exponent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UnitCost.value_digits","title":"value_digits  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value_digits: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UnitValue","title":"UnitValue  <code>dataclass</code>","text":"<p>A data container that represents the \"Unit-Value\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UnitValue.exponent","title":"exponent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exponent: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UnitValue.value_digits","title":"value_digits  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>value_digits: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit","title":"UsedServiceUnit  <code>dataclass</code>","text":"<p>A data container that represents the \"Used-Service-Unit\" (402) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.cc_input_octets","title":"cc_input_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_input_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.cc_money","title":"cc_money  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_money: CcMoney = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.cc_output_octets","title":"cc_output_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_output_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.cc_service_specific_units","title":"cc_service_specific_units  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_service_specific_units: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.cc_time","title":"cc_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_time: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.cc_total_octets","title":"cc_total_octets  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc_total_octets: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.event_charging_timestamp","title":"event_charging_timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>event_charging_timestamp: list[datetime.datetime] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.reporting_reason","title":"reporting_reason  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reporting_reason: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UsedServiceUnit.tariff_change_usage","title":"tariff_change_usage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tariff_change_usage: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserCsgInformation","title":"UserCsgInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"User-CSG-Information\" (2319) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserCsgInformation.csg_access_mode","title":"csg_access_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>csg_access_mode: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserCsgInformation.csg_id","title":"csg_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>csg_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserCsgInformation.csg_membership_indication","title":"csg_membership_indication  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>csg_membership_indication: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfo","title":"UserEquipmentInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"User-Equipment-Info\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfo.user_equipment_info_type","title":"user_equipment_info_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfo.user_equipment_info_value","title":"user_equipment_info_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_value: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfoExtension","title":"UserEquipmentInfoExtension  <code>dataclass</code>","text":"<p>A data container that represents the \"User-Equipment-Info-Extension\" grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfoExtension.user_equipment_info_eui64","title":"user_equipment_info_eui64  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_eui64: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfoExtension.user_equipment_info_imei","title":"user_equipment_info_imei  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_imei: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfoExtension.user_equipment_info_imeisv","title":"user_equipment_info_imeisv  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_imeisv: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfoExtension.user_equipment_info_mac","title":"user_equipment_info_mac  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_mac: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserEquipmentInfoExtension.user_equipment_info_modifiedeui64","title":"user_equipment_info_modifiedeui64  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_modifiedeui64: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserPriorityRange","title":"UserPriorityRange  <code>dataclass</code>","text":"<p>A data container that represents the User-Priority-Range AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserPriorityRange.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserPriorityRange.high_user_priority","title":"high_user_priority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>high_user_priority: list[int] = dataclasses.field(\n    default_factory=list\n)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UserPriorityRange.low_user_priority","title":"low_user_priority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>low_user_priority: list[int] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo","title":"UwanUserLocationInfo  <code>dataclass</code>","text":"<p>A data container that represents the \"UWAN-User-Location-Info\" (3918) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo.bssid","title":"bssid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bssid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo.civic_address_information","title":"civic_address_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>civic_address_information: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo.ssid","title":"ssid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ssid: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo.tcp_source_port","title":"tcp_source_port  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tcp_source_port: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo.udp_source_port","title":"udp_source_port  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>udp_source_port: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo.ue_local_ip_address","title":"ue_local_ip_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ue_local_ip_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.UwanUserLocationInfo.wlan_operator_id","title":"wlan_operator_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>wlan_operator_id: WlanOperatorId = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VariablePart","title":"VariablePart  <code>dataclass</code>","text":"<p>A data container that represents the \"Variable-Part\" (3907) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VariablePart.variable_part_order","title":"variable_part_order  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>variable_part_order: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VariablePart.variable_part_type","title":"variable_part_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>variable_part_type: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VariablePart.variable_part_value","title":"variable_part_value  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>variable_part_value: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation","title":"VcsInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"VCS-Information\" (3410) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.basic_service_code","title":"basic_service_code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>basic_service_code: BasicServiceCode = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.bearer_capability","title":"bearer_capability  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bearer_capability: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.forwarding_pending","title":"forwarding_pending  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>forwarding_pending: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.isup_cause","title":"isup_cause  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isup_cause: IsupCause = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.isup_location_number","title":"isup_location_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>isup_location_number: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.msc_address","title":"msc_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>msc_address: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.network_call_reference_number","title":"network_call_reference_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>network_call_reference_number: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.ps_free_format_data","title":"ps_free_format_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ps_free_format_data: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.start_of_charging","title":"start_of_charging  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>start_of_charging: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.start_time","title":"start_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>start_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.stop_time","title":"stop_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stop_time: datetime.datetime = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VcsInformation.vlr_number","title":"vlr_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vlr_number: bytes = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VendorSpecificApplicationId","title":"VendorSpecificApplicationId  <code>dataclass</code>","text":"<p>A data container that represents the \"Vendor-Specific-Application-ID\" (260) grouped AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VendorSpecificApplicationId.acct_application_id","title":"acct_application_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>acct_application_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VendorSpecificApplicationId.auth_application_id","title":"auth_application_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VendorSpecificApplicationId.vendor_id","title":"vendor_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vendor_id: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VlanIdRange","title":"VlanIdRange  <code>dataclass</code>","text":"<p>A data container that represents the VLAN-ID-Range AVP.</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VlanIdRange.additional_avps","title":"additional_avps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>additional_avps: list[Avp] = dataclasses.field(default_factory=list)\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VlanIdRange.c_vid_end","title":"c_vid_end  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>c_vid_end: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VlanIdRange.c_vid_start","title":"c_vid_start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>c_vid_start: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VlanIdRange.s_vid_end","title":"s_vid_end  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>s_vid_end: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VlanIdRange.s_vid_start","title":"s_vid_start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>s_vid_start: int = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VolteInformation","title":"VolteInformation  <code>dataclass</code>","text":"<p>A data container that represents the \"VoLTE-Information\" (1323) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VolteInformation.callee_information","title":"callee_information  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>callee_information: CalleeInformation = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.VolteInformation.calling_party_address","title":"calling_party_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>calling_party_address: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.WlanOperatorId","title":"WlanOperatorId  <code>dataclass</code>","text":"<p>A data container that represents the \"WLAN-Operator-Id\" (1306) grouped AVP.</p> <p>3GPP TS 32.299 version 16.2.0</p>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.WlanOperatorId.wlan_operator_name","title":"wlan_operator_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>wlan_operator_name: str = None\n</code></pre>"},{"location":"api/avp/grouped/#diameter.message.avp.grouped.WlanOperatorId.wlan_plmn_id","title":"wlan_plmn_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>wlan_plmn_id: str = None\n</code></pre>"},{"location":"api/commands/aa/","title":"AA","text":"<p>API reference for <code>diameter.message.commands.aa</code>.</p> <p>This module contains AA Request and Answer messages, implementing AVPs documented in rfc7155.</p>"},{"location":"api/commands/aa/#diameter.message.commands.aa.Aa","title":"Aa","text":"<pre><code>Aa(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>An AA message.</p> <p>This message class lists message attributes based on the current rfc7155 as python properties, acessible as instance attributes. AVPs not listed in the RFC can be retrieved using the Aa.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.origin_realm\nb'mvno.net'\n&gt;&gt;&gt; msg.find_avps((AVP_ORIGIN_REALM, 0))\n[b'mvno.net']\n</code></pre> <p>When a diameter message is decoded using Message.from_bytes, it returns either an instance of <code>AaRequest</code> or <code>AaAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, AaRequest)\n</code></pre> <p>When creating a new message by hand, the <code>AaRequest</code> or <code>AaAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = AaRequest()\n&gt;&gt;&gt; msg.origin_realm = b\"mvno.net\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the Aa.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in rfc7155 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer","title":"AaAnswer","text":"<pre><code>AaAnswer(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>Aa</code></p> <p>An AA-Answer message.</p> <p>Note</p> <p>The \"Class\" AVP can be accessed via <code>state_class</code> attribute, as \"class\" is a reserved keyword.</p>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.acct_interim_interval","title":"acct_interim_interval  <code>instance-attribute</code>","text":"<pre><code>acct_interim_interval: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.arap_challenge_response","title":"arap_challenge_response  <code>instance-attribute</code>","text":"<pre><code>arap_challenge_response: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.arap_features","title":"arap_features  <code>instance-attribute</code>","text":"<pre><code>arap_features: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.arap_security","title":"arap_security  <code>instance-attribute</code>","text":"<pre><code>arap_security: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.arap_security_data","title":"arap_security_data  <code>instance-attribute</code>","text":"<pre><code>arap_security_data: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.arap_zone_access","title":"arap_zone_access  <code>instance-attribute</code>","text":"<pre><code>arap_zone_access: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.auth_grace_period","title":"auth_grace_period  <code>instance-attribute</code>","text":"<pre><code>auth_grace_period: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.callback_id","title":"callback_id  <code>instance-attribute</code>","text":"<pre><code>callback_id: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.callback_number","title":"callback_number  <code>instance-attribute</code>","text":"<pre><code>callback_number: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.configuration_token","title":"configuration_token  <code>instance-attribute</code>","text":"<pre><code>configuration_token: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.error_reporting_host","title":"error_reporting_host  <code>instance-attribute</code>","text":"<pre><code>error_reporting_host: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: list[FailedAvp]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.filter_id","title":"filter_id  <code>instance-attribute</code>","text":"<pre><code>filter_id: list[str]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_appletalk_link","title":"framed_appletalk_link  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_link: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_appletalk_network","title":"framed_appletalk_network  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_network: list[int]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_appletalk_zone","title":"framed_appletalk_zone  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_zone: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_compression","title":"framed_compression  <code>instance-attribute</code>","text":"<pre><code>framed_compression: list[int]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_interface_id","title":"framed_interface_id  <code>instance-attribute</code>","text":"<pre><code>framed_interface_id: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_ip_address","title":"framed_ip_address  <code>instance-attribute</code>","text":"<pre><code>framed_ip_address: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_ip_netmask","title":"framed_ip_netmask  <code>instance-attribute</code>","text":"<pre><code>framed_ip_netmask: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_ipv6_pool","title":"framed_ipv6_pool  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_pool: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_ipv6_prefix","title":"framed_ipv6_prefix  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_prefix: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_ipv6_route","title":"framed_ipv6_route  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_route: list[str]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_ipx_network","title":"framed_ipx_network  <code>instance-attribute</code>","text":"<pre><code>framed_ipx_network: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_mtu","title":"framed_mtu  <code>instance-attribute</code>","text":"<pre><code>framed_mtu: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_pool","title":"framed_pool  <code>instance-attribute</code>","text":"<pre><code>framed_pool: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_protocol","title":"framed_protocol  <code>instance-attribute</code>","text":"<pre><code>framed_protocol: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_route","title":"framed_route  <code>instance-attribute</code>","text":"<pre><code>framed_route: list[str]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.framed_routing","title":"framed_routing  <code>instance-attribute</code>","text":"<pre><code>framed_routing: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.idle_timeout","title":"idle_timeout  <code>instance-attribute</code>","text":"<pre><code>idle_timeout: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_ip_host","title":"login_ip_host  <code>instance-attribute</code>","text":"<pre><code>login_ip_host: list[str]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_ipv6_host","title":"login_ipv6_host  <code>instance-attribute</code>","text":"<pre><code>login_ipv6_host: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_lat_group","title":"login_lat_group  <code>instance-attribute</code>","text":"<pre><code>login_lat_group: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_lat_node","title":"login_lat_node  <code>instance-attribute</code>","text":"<pre><code>login_lat_node: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_lat_port","title":"login_lat_port  <code>instance-attribute</code>","text":"<pre><code>login_lat_port: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_lat_service","title":"login_lat_service  <code>instance-attribute</code>","text":"<pre><code>login_lat_service: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_service","title":"login_service  <code>instance-attribute</code>","text":"<pre><code>login_service: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.login_tcp_port","title":"login_tcp_port  <code>instance-attribute</code>","text":"<pre><code>login_tcp_port: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.multi_round_time_out","title":"multi_round_time_out  <code>instance-attribute</code>","text":"<pre><code>multi_round_time_out: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.nas_filter_rule","title":"nas_filter_rule  <code>instance-attribute</code>","text":"<pre><code>nas_filter_rule: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.password_retry","title":"password_retry  <code>instance-attribute</code>","text":"<pre><code>password_retry: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.port_limit","title":"port_limit  <code>instance-attribute</code>","text":"<pre><code>port_limit: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.prompt","title":"prompt  <code>instance-attribute</code>","text":"<pre><code>prompt: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.qos_filter_rule","title":"qos_filter_rule  <code>instance-attribute</code>","text":"<pre><code>qos_filter_rule: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.re_auth_request_type","title":"re_auth_request_type  <code>instance-attribute</code>","text":"<pre><code>re_auth_request_type: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.redirect_host","title":"redirect_host  <code>instance-attribute</code>","text":"<pre><code>redirect_host: list[str]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.redirect_host_usage","title":"redirect_host_usage  <code>instance-attribute</code>","text":"<pre><code>redirect_host_usage: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.redirect_max_cache_time","title":"redirect_max_cache_time  <code>instance-attribute</code>","text":"<pre><code>redirect_max_cache_time: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.reply_message","title":"reply_message  <code>instance-attribute</code>","text":"<pre><code>reply_message: list[str]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.session_timeout","title":"session_timeout  <code>instance-attribute</code>","text":"<pre><code>session_timeout: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.tunneling","title":"tunneling  <code>instance-attribute</code>","text":"<pre><code>tunneling: list[Tunneling]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest","title":"AaRequest","text":"<pre><code>AaRequest(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>Aa</code></p> <p>An AA-Request message.</p>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.arap_password","title":"arap_password  <code>instance-attribute</code>","text":"<pre><code>arap_password: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.arap_security","title":"arap_security  <code>instance-attribute</code>","text":"<pre><code>arap_security: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.arap_security_data","title":"arap_security_data  <code>instance-attribute</code>","text":"<pre><code>arap_security_data: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.auth_grace_period","title":"auth_grace_period  <code>instance-attribute</code>","text":"<pre><code>auth_grace_period: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.auth_request_type","title":"auth_request_type  <code>instance-attribute</code>","text":"<pre><code>auth_request_type: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.auth_session_state","title":"auth_session_state  <code>instance-attribute</code>","text":"<pre><code>auth_session_state: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.callback_number","title":"callback_number  <code>instance-attribute</code>","text":"<pre><code>callback_number: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.called_station_id","title":"called_station_id  <code>instance-attribute</code>","text":"<pre><code>called_station_id: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.calling_station_id","title":"calling_station_id  <code>instance-attribute</code>","text":"<pre><code>calling_station_id: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.chap_auth","title":"chap_auth  <code>instance-attribute</code>","text":"<pre><code>chap_auth: ChapAuth\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.chap_challenge","title":"chap_challenge  <code>instance-attribute</code>","text":"<pre><code>chap_challenge: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.connect_info","title":"connect_info  <code>instance-attribute</code>","text":"<pre><code>connect_info: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.framed_compression","title":"framed_compression  <code>instance-attribute</code>","text":"<pre><code>framed_compression: list[int]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.framed_interface_id","title":"framed_interface_id  <code>instance-attribute</code>","text":"<pre><code>framed_interface_id: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.framed_ip_address","title":"framed_ip_address  <code>instance-attribute</code>","text":"<pre><code>framed_ip_address: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.framed_ip_netmask","title":"framed_ip_netmask  <code>instance-attribute</code>","text":"<pre><code>framed_ip_netmask: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.framed_ipv6_prefix","title":"framed_ipv6_prefix  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_prefix: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.framed_mtu","title":"framed_mtu  <code>instance-attribute</code>","text":"<pre><code>framed_mtu: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.framed_protocol","title":"framed_protocol  <code>instance-attribute</code>","text":"<pre><code>framed_protocol: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.login_ip_host","title":"login_ip_host  <code>instance-attribute</code>","text":"<pre><code>login_ip_host: list[str]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.login_ipv6_host","title":"login_ipv6_host  <code>instance-attribute</code>","text":"<pre><code>login_ipv6_host: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.login_lat_group","title":"login_lat_group  <code>instance-attribute</code>","text":"<pre><code>login_lat_group: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.login_lat_node","title":"login_lat_node  <code>instance-attribute</code>","text":"<pre><code>login_lat_node: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.login_lat_port","title":"login_lat_port  <code>instance-attribute</code>","text":"<pre><code>login_lat_port: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.login_lat_service","title":"login_lat_service  <code>instance-attribute</code>","text":"<pre><code>login_lat_service: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.nas_identifier","title":"nas_identifier  <code>instance-attribute</code>","text":"<pre><code>nas_identifier: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.nas_ip_address","title":"nas_ip_address  <code>instance-attribute</code>","text":"<pre><code>nas_ip_address: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.nas_ipv6_address","title":"nas_ipv6_address  <code>instance-attribute</code>","text":"<pre><code>nas_ipv6_address: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.nas_port","title":"nas_port  <code>instance-attribute</code>","text":"<pre><code>nas_port: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.nas_port_id","title":"nas_port_id  <code>instance-attribute</code>","text":"<pre><code>nas_port_id: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.nas_port_type","title":"nas_port_type  <code>instance-attribute</code>","text":"<pre><code>nas_port_type: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.originating_line_info","title":"originating_line_info  <code>instance-attribute</code>","text":"<pre><code>originating_line_info: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.port_limit","title":"port_limit  <code>instance-attribute</code>","text":"<pre><code>port_limit: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: bytes\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.tunneling","title":"tunneling  <code>instance-attribute</code>","text":"<pre><code>tunneling: list[Tunneling]\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/aa/#diameter.message.commands.aa.AaRequest.user_password","title":"user_password  <code>instance-attribute</code>","text":"<pre><code>user_password: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/","title":"AA Mobile Node","text":"<p>API reference for <code>diameter.message.commands.aa_mobile_node</code>.</p> <p>This module contains AA Mobile Node Request and Answer messages, implementing AVPs documented in <code>rfc4004</code>.</p>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNode","title":"AaMobileNode","text":"<pre><code>AaMobileNode(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>An AA-Mobile-Node base message.</p> <p>This message class lists message attributes based on the current rfc4004 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the AaMobileNode.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.session_id\ndra1.mvno.net;2323;546\n&gt;&gt;&gt; msg.find_avps((AVP_SESSION_ID, 0))\n['dra1.mvno.net;2323;546']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>AaMobileNodeRequest</code> or <code>AaMobileNodeAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, AaMobileNodeRequest)\n</code></pre> <p>When creating a new message, the <code>AaMobileNodeRequest</code> or <code>AaMobileNodeAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = AaMobileNodeRequest()\n&gt;&gt;&gt; msg.session_id = \"dra1.mvno.net;2323;546\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the AaMobileNode.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in rfc4004 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer","title":"AaMobileNodeAnswer","text":"<pre><code>AaMobileNodeAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>AaMobileNode</code></p> <p>An AA-Mobile-Node-Answer message.</p>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.auth_session_state","title":"auth_session_state  <code>instance-attribute</code>","text":"<pre><code>auth_session_state: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.error_reporting_host","title":"error_reporting_host  <code>instance-attribute</code>","text":"<pre><code>error_reporting_host: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_fa_to_ha_msa","title":"mip_fa_to_ha_msa  <code>instance-attribute</code>","text":"<pre><code>mip_fa_to_ha_msa: MipFaToHaMsa\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_fa_to_mn_msa","title":"mip_fa_to_mn_msa  <code>instance-attribute</code>","text":"<pre><code>mip_fa_to_mn_msa: MipFaToMnMsa\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_feature_vector","title":"mip_feature_vector  <code>instance-attribute</code>","text":"<pre><code>mip_feature_vector: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_filter_rule","title":"mip_filter_rule  <code>instance-attribute</code>","text":"<pre><code>mip_filter_rule: list[bytes]\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_ha_to_mn_msa","title":"mip_ha_to_mn_msa  <code>instance-attribute</code>","text":"<pre><code>mip_ha_to_mn_msa: MipHaToMnMsa\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_home_agent_address","title":"mip_home_agent_address  <code>instance-attribute</code>","text":"<pre><code>mip_home_agent_address: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_mn_to_fa_msa","title":"mip_mn_to_fa_msa  <code>instance-attribute</code>","text":"<pre><code>mip_mn_to_fa_msa: MipMnToFaMsa\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_mn_to_ha_msa","title":"mip_mn_to_ha_msa  <code>instance-attribute</code>","text":"<pre><code>mip_mn_to_ha_msa: MipMnToHaMsa\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_mobile_node_address","title":"mip_mobile_node_address  <code>instance-attribute</code>","text":"<pre><code>mip_mobile_node_address: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_msa_lifetime","title":"mip_msa_lifetime  <code>instance-attribute</code>","text":"<pre><code>mip_msa_lifetime: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.mip_reg_reply","title":"mip_reg_reply  <code>instance-attribute</code>","text":"<pre><code>mip_reg_reply: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.re_auth_request_type","title":"re_auth_request_type  <code>instance-attribute</code>","text":"<pre><code>re_auth_request_type: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest","title":"AaMobileNodeRequest","text":"<pre><code>AaMobileNodeRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>AaMobileNode</code></p> <p>An AA-Mobile-Node-Request message.</p>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.auth_session_state","title":"auth_session_state  <code>instance-attribute</code>","text":"<pre><code>auth_session_state: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_candidate_home_agent_host","title":"mip_candidate_home_agent_host  <code>instance-attribute</code>","text":"<pre><code>mip_candidate_home_agent_host: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_fa_challenge","title":"mip_fa_challenge  <code>instance-attribute</code>","text":"<pre><code>mip_fa_challenge: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_feature_vector","title":"mip_feature_vector  <code>instance-attribute</code>","text":"<pre><code>mip_feature_vector: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_ha_to_fa_spi","title":"mip_ha_to_fa_spi  <code>instance-attribute</code>","text":"<pre><code>mip_ha_to_fa_spi: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_home_agent_address","title":"mip_home_agent_address  <code>instance-attribute</code>","text":"<pre><code>mip_home_agent_address: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_home_agent_host","title":"mip_home_agent_host  <code>instance-attribute</code>","text":"<pre><code>mip_home_agent_host: MipHomeAgentHost\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_mn_aaa_auth","title":"mip_mn_aaa_auth  <code>instance-attribute</code>","text":"<pre><code>mip_mn_aaa_auth: MipMnAaaAuth\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_mobile_node_address","title":"mip_mobile_node_address  <code>instance-attribute</code>","text":"<pre><code>mip_mobile_node_address: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_originating_foreign_aaa","title":"mip_originating_foreign_aaa  <code>instance-attribute</code>","text":"<pre><code>mip_originating_foreign_aaa: MipOriginatingForeignAaa\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.mip_reg_request","title":"mip_reg_request  <code>instance-attribute</code>","text":"<pre><code>mip_reg_request: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/aa_mobile_node/#diameter.message.commands.aa_mobile_node.AaMobileNodeRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/abort_session/","title":"Abort Session","text":"<p>API reference for <code>diameter.message.commands.abort_session</code>.</p> <p>This module contains Abort Session Request and Answer messages, implementing AVPs documented in <code>rfc6733</code>.</p>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSession","title":"AbortSession","text":"<pre><code>AbortSession(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>An Abort-Session base message.</p> <p>This message class lists message attributes based on the current rfc6733 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the AbortSession.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.session_id\ndra1.mvno.net;2323;546\n&gt;&gt;&gt; msg.find_avps((AVP_SESSION_ID, 0))\n['dra1.mvno.net;2323;546']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>AbortSessionRequest</code> or <code>AbortSessionAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, AbortSessionRequest)\n</code></pre> <p>When creating a new message, the <code>AbortSessionRequest</code> or <code>AbortSessionAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = AbortSessionRequest()\n&gt;&gt;&gt; msg.session_id = \"dra1.mvno.net;2323;546\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the AbortSession.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer","title":"AbortSessionAnswer","text":"<pre><code>AbortSessionAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>AbortSession</code></p> <p>An Abort-Session-Answer message.</p>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.error_reporting_host","title":"error_reporting_host  <code>instance-attribute</code>","text":"<pre><code>error_reporting_host: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: FailedAvp\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.redirect_host","title":"redirect_host  <code>instance-attribute</code>","text":"<pre><code>redirect_host: list[str]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.redirect_host_usage","title":"redirect_host_usage  <code>instance-attribute</code>","text":"<pre><code>redirect_host_usage: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.redirect_max_cache_time","title":"redirect_max_cache_time  <code>instance-attribute</code>","text":"<pre><code>redirect_max_cache_time: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest","title":"AbortSessionRequest","text":"<pre><code>AbortSessionRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>AbortSession</code></p> <p>An Abort-Session-Request message.</p>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.acct_session_id","title":"acct_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_session_id: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.called_station_id","title":"called_station_id  <code>instance-attribute</code>","text":"<pre><code>called_station_id: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.calling_station_id","title":"calling_station_id  <code>instance-attribute</code>","text":"<pre><code>calling_station_id: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.framed_interface_id","title":"framed_interface_id  <code>instance-attribute</code>","text":"<pre><code>framed_interface_id: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.framed_ip_address","title":"framed_ip_address  <code>instance-attribute</code>","text":"<pre><code>framed_ip_address: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.framed_ipv6_prefix","title":"framed_ipv6_prefix  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_prefix: list[bytes]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.nas_identifier","title":"nas_identifier  <code>instance-attribute</code>","text":"<pre><code>nas_identifier: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.nas_ip_address","title":"nas_ip_address  <code>instance-attribute</code>","text":"<pre><code>nas_ip_address: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.nas_ipv6_address","title":"nas_ipv6_address  <code>instance-attribute</code>","text":"<pre><code>nas_ipv6_address: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.nas_port","title":"nas_port  <code>instance-attribute</code>","text":"<pre><code>nas_port: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.nas_port_id","title":"nas_port_id  <code>instance-attribute</code>","text":"<pre><code>nas_port_id: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.nas_port_type","title":"nas_port_type  <code>instance-attribute</code>","text":"<pre><code>nas_port_type: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.originating_line_info","title":"originating_line_info  <code>instance-attribute</code>","text":"<pre><code>originating_line_info: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.reply_message","title":"reply_message  <code>instance-attribute</code>","text":"<pre><code>reply_message: list[str]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: bytes\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/abort_session/#diameter.message.commands.abort_session.AbortSessionRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/accounting/","title":"Accounting","text":"<p>API reference for <code>diameter.message.commands.accounting</code>.</p> <p>This module contains Accounting Request and Answer messages, implementing AVPs documented in rfc6733.</p>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.Accounting","title":"Accounting","text":"<pre><code>Accounting(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>An Accounting message.</p> <p>This message class lists message attributes based on the current RFC6733 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the Accounting.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.session_id\ndra1.mvno.net;2323;546\n&gt;&gt;&gt; msg.find_avps((AVP_SESSION_ID, 0))\n['dra1.mvno.net;2323;546']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>AccountingRequest</code> or <code>AccountingAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, AccountingRequest)\n</code></pre> <p>When creating a new message, the <code>AccountingRequest</code> or <code>AccountingAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = AccountingRequest()\n&gt;&gt;&gt; msg.session_id = \"dra1.mvno.net;2323;546\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the Accounting.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer","title":"AccountingAnswer","text":"<pre><code>AccountingAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>Accounting</code></p> <p>An Accounting-Answer message.</p>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.accounting_realtime_required","title":"accounting_realtime_required  <code>instance-attribute</code>","text":"<pre><code>accounting_realtime_required: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.accounting_record_number","title":"accounting_record_number  <code>instance-attribute</code>","text":"<pre><code>accounting_record_number: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.accounting_record_type","title":"accounting_record_type  <code>instance-attribute</code>","text":"<pre><code>accounting_record_type: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.accounting_sub_session_id","title":"accounting_sub_session_id  <code>instance-attribute</code>","text":"<pre><code>accounting_sub_session_id: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.acct_application_id","title":"acct_application_id  <code>instance-attribute</code>","text":"<pre><code>acct_application_id: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.acct_interim_interval","title":"acct_interim_interval  <code>instance-attribute</code>","text":"<pre><code>acct_interim_interval: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.acct_session_id","title":"acct_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_session_id: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.error_reporting_host","title":"error_reporting_host  <code>instance-attribute</code>","text":"<pre><code>error_reporting_host: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.event_timestamp","title":"event_timestamp  <code>instance-attribute</code>","text":"<pre><code>event_timestamp: datetime.datetime\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: FailedAvp\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.nas_identifier","title":"nas_identifier  <code>instance-attribute</code>","text":"<pre><code>nas_identifier: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.nas_ip_address","title":"nas_ip_address  <code>instance-attribute</code>","text":"<pre><code>nas_ip_address: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.nas_ipv6_address","title":"nas_ipv6_address  <code>instance-attribute</code>","text":"<pre><code>nas_ipv6_address: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.nas_port","title":"nas_port  <code>instance-attribute</code>","text":"<pre><code>nas_port: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.nas_port_id","title":"nas_port_id  <code>instance-attribute</code>","text":"<pre><code>nas_port_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.nas_port_type","title":"nas_port_type  <code>instance-attribute</code>","text":"<pre><code>nas_port_type: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.termination_cause","title":"termination_cause  <code>instance-attribute</code>","text":"<pre><code>termination_cause: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingAnswer.vendor_specific_application_id","title":"vendor_specific_application_id  <code>instance-attribute</code>","text":"<pre><code>vendor_specific_application_id: VendorSpecificApplicationId\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest","title":"AccountingRequest","text":"<pre><code>AccountingRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>Accounting</code></p> <p>An Accounting-Request message.</p>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_auth_method","title":"accounting_auth_method  <code>instance-attribute</code>","text":"<pre><code>accounting_auth_method: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_input_octets","title":"accounting_input_octets  <code>instance-attribute</code>","text":"<pre><code>accounting_input_octets: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_input_packets","title":"accounting_input_packets  <code>instance-attribute</code>","text":"<pre><code>accounting_input_packets: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_output_octets","title":"accounting_output_octets  <code>instance-attribute</code>","text":"<pre><code>accounting_output_octets: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_output_packets","title":"accounting_output_packets  <code>instance-attribute</code>","text":"<pre><code>accounting_output_packets: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_realtime_required","title":"accounting_realtime_required  <code>instance-attribute</code>","text":"<pre><code>accounting_realtime_required: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_record_number","title":"accounting_record_number  <code>instance-attribute</code>","text":"<pre><code>accounting_record_number: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_record_type","title":"accounting_record_type  <code>instance-attribute</code>","text":"<pre><code>accounting_record_type: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.accounting_sub_session_id","title":"accounting_sub_session_id  <code>instance-attribute</code>","text":"<pre><code>accounting_sub_session_id: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_application_id","title":"acct_application_id  <code>instance-attribute</code>","text":"<pre><code>acct_application_id: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_authentic","title":"acct_authentic  <code>instance-attribute</code>","text":"<pre><code>acct_authentic: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_interim_interval","title":"acct_interim_interval  <code>instance-attribute</code>","text":"<pre><code>acct_interim_interval: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_link_count","title":"acct_link_count  <code>instance-attribute</code>","text":"<pre><code>acct_link_count: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_session_id","title":"acct_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_session_id: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_session_time","title":"acct_session_time  <code>instance-attribute</code>","text":"<pre><code>acct_session_time: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_tunnel_connection","title":"acct_tunnel_connection  <code>instance-attribute</code>","text":"<pre><code>acct_tunnel_connection: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.acct_tunnel_packets_lost","title":"acct_tunnel_packets_lost  <code>instance-attribute</code>","text":"<pre><code>acct_tunnel_packets_lost: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.callback_id","title":"callback_id  <code>instance-attribute</code>","text":"<pre><code>callback_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.callback_number","title":"callback_number  <code>instance-attribute</code>","text":"<pre><code>callback_number: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.called_station_id","title":"called_station_id  <code>instance-attribute</code>","text":"<pre><code>called_station_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.calling_station_id","title":"calling_station_id  <code>instance-attribute</code>","text":"<pre><code>calling_station_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.connection_info","title":"connection_info  <code>instance-attribute</code>","text":"<pre><code>connection_info: list[str]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.event_timestamp","title":"event_timestamp  <code>instance-attribute</code>","text":"<pre><code>event_timestamp: datetime.datetime\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.filter_id","title":"filter_id  <code>instance-attribute</code>","text":"<pre><code>filter_id: list[str]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_appletalk_link","title":"framed_appletalk_link  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_link: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_appletalk_network","title":"framed_appletalk_network  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_network: list[int]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_appletalk_zone","title":"framed_appletalk_zone  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_zone: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_compression","title":"framed_compression  <code>instance-attribute</code>","text":"<pre><code>framed_compression: list[int]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_interface_id","title":"framed_interface_id  <code>instance-attribute</code>","text":"<pre><code>framed_interface_id: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_ip_address","title":"framed_ip_address  <code>instance-attribute</code>","text":"<pre><code>framed_ip_address: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_ipv6_pool","title":"framed_ipv6_pool  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_pool: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_ipv6_prefix","title":"framed_ipv6_prefix  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_prefix: list[bytes]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_ipv6_route","title":"framed_ipv6_route  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_route: list[str]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_ipx_network","title":"framed_ipx_network  <code>instance-attribute</code>","text":"<pre><code>framed_ipx_network: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_mtu","title":"framed_mtu  <code>instance-attribute</code>","text":"<pre><code>framed_mtu: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_pool","title":"framed_pool  <code>instance-attribute</code>","text":"<pre><code>framed_pool: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_protocol","title":"framed_protocol  <code>instance-attribute</code>","text":"<pre><code>framed_protocol: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_route","title":"framed_route  <code>instance-attribute</code>","text":"<pre><code>framed_route: list[str]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.framed_routing","title":"framed_routing  <code>instance-attribute</code>","text":"<pre><code>framed_routing: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.idle_timeout","title":"idle_timeout  <code>instance-attribute</code>","text":"<pre><code>idle_timeout: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_ip_host","title":"login_ip_host  <code>instance-attribute</code>","text":"<pre><code>login_ip_host: list[str]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_ipv6_host","title":"login_ipv6_host  <code>instance-attribute</code>","text":"<pre><code>login_ipv6_host: list[bytes]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_lat_group","title":"login_lat_group  <code>instance-attribute</code>","text":"<pre><code>login_lat_group: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_lat_node","title":"login_lat_node  <code>instance-attribute</code>","text":"<pre><code>login_lat_node: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_lat_port","title":"login_lat_port  <code>instance-attribute</code>","text":"<pre><code>login_lat_port: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_lat_service","title":"login_lat_service  <code>instance-attribute</code>","text":"<pre><code>login_lat_service: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_service","title":"login_service  <code>instance-attribute</code>","text":"<pre><code>login_service: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.login_tcp_port","title":"login_tcp_port  <code>instance-attribute</code>","text":"<pre><code>login_tcp_port: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.nas_filter_rule","title":"nas_filter_rule  <code>instance-attribute</code>","text":"<pre><code>nas_filter_rule: list[bytes]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.nas_identifier","title":"nas_identifier  <code>instance-attribute</code>","text":"<pre><code>nas_identifier: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.nas_ip_address","title":"nas_ip_address  <code>instance-attribute</code>","text":"<pre><code>nas_ip_address: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.nas_ipv6_address","title":"nas_ipv6_address  <code>instance-attribute</code>","text":"<pre><code>nas_ipv6_address: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.nas_port","title":"nas_port  <code>instance-attribute</code>","text":"<pre><code>nas_port: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.nas_port_id","title":"nas_port_id  <code>instance-attribute</code>","text":"<pre><code>nas_port_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.nas_port_type","title":"nas_port_type  <code>instance-attribute</code>","text":"<pre><code>nas_port_type: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.originating_line_info","title":"originating_line_info  <code>instance-attribute</code>","text":"<pre><code>originating_line_info: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.port_limit","title":"port_limit  <code>instance-attribute</code>","text":"<pre><code>port_limit: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.qos_filter_rule","title":"qos_filter_rule  <code>instance-attribute</code>","text":"<pre><code>qos_filter_rule: list[bytes]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.session_timeout","title":"session_timeout  <code>instance-attribute</code>","text":"<pre><code>session_timeout: int\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.termination_cause","title":"termination_cause  <code>instance-attribute</code>","text":"<pre><code>termination_cause: bytes\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.tunneling","title":"tunneling  <code>instance-attribute</code>","text":"<pre><code>tunneling: list[Tunneling]\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/accounting/#diameter.message.commands.accounting.AccountingRequest.vendor_specific_application_id","title":"vendor_specific_application_id  <code>instance-attribute</code>","text":"<pre><code>vendor_specific_application_id: VendorSpecificApplicationId\n</code></pre>"},{"location":"api/commands/capabilities_exchange/","title":"Capabilities Exchange","text":"<p>API reference for <code>diameter.message.commands.capabilities_exchange</code>.</p> <p>This module contains Capabilities-Exchange Request and Answer messages,  implementing AVPs documented in rfc6733.</p>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchange","title":"CapabilitiesExchange","text":"<pre><code>CapabilitiesExchange(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>A Capabilities-Exchange message.</p> <p>This message class lists message attributes based on the current RFC6733 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the CapabilitiesExchange.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.origin_realm\nb'mvno.net'\n&gt;&gt;&gt; msg.find_avps((AVP_ORIGIN_REALM, 0))\n[b'mvno.net']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>CapabilitiesExchangeRequest</code> or <code>CapabilitiesExchangeAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, CapabilitiesExchangeRequest)\n</code></pre> <p>When creating a new message, the <code>CapabilitiesExchangeRequest</code> or <code>CapabilitiesExchangeAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = CapabilitiesExchangeRequest()\n&gt;&gt;&gt; msg.origin_realm = b\"mvno.net\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the CapabilitiesExchange.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer","title":"CapabilitiesExchangeAnswer","text":"<pre><code>CapabilitiesExchangeAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>CapabilitiesExchange</code></p> <p>A Capabilities-Exchange-Answer message.</p>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.acct_application_id","title":"acct_application_id  <code>instance-attribute</code>","text":"<pre><code>acct_application_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: FailedAvp\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.firmware_revision","title":"firmware_revision  <code>instance-attribute</code>","text":"<pre><code>firmware_revision: int\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.host_ip_address","title":"host_ip_address  <code>instance-attribute</code>","text":"<pre><code>host_ip_address: list[str]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.inband_security_id","title":"inband_security_id  <code>instance-attribute</code>","text":"<pre><code>inband_security_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.product_name","title":"product_name  <code>instance-attribute</code>","text":"<pre><code>product_name: str\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.supported_vendor_id","title":"supported_vendor_id  <code>instance-attribute</code>","text":"<pre><code>supported_vendor_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.vendor_id","title":"vendor_id  <code>instance-attribute</code>","text":"<pre><code>vendor_id: int\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeAnswer.vendor_specific_application_id","title":"vendor_specific_application_id  <code>instance-attribute</code>","text":"<pre><code>vendor_specific_application_id: list[VendorSpecificApplicationId]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest","title":"CapabilitiesExchangeRequest","text":"<pre><code>CapabilitiesExchangeRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>CapabilitiesExchange</code></p> <p>A Capabilities-Exchange-Request message.</p>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.acct_application_id","title":"acct_application_id  <code>instance-attribute</code>","text":"<pre><code>acct_application_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.firmware_revision","title":"firmware_revision  <code>instance-attribute</code>","text":"<pre><code>firmware_revision: int\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.host_ip_address","title":"host_ip_address  <code>instance-attribute</code>","text":"<pre><code>host_ip_address: list[str]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.inband_security_id","title":"inband_security_id  <code>instance-attribute</code>","text":"<pre><code>inband_security_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.product_name","title":"product_name  <code>instance-attribute</code>","text":"<pre><code>product_name: str\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.supported_vendor_id","title":"supported_vendor_id  <code>instance-attribute</code>","text":"<pre><code>supported_vendor_id: list[int]\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.vendor_id","title":"vendor_id  <code>instance-attribute</code>","text":"<pre><code>vendor_id: int\n</code></pre>"},{"location":"api/commands/capabilities_exchange/#diameter.message.commands.capabilities_exchange.CapabilitiesExchangeRequest.vendor_specific_application_id","title":"vendor_specific_application_id  <code>instance-attribute</code>","text":"<pre><code>vendor_specific_application_id: list[VendorSpecificApplicationId]\n</code></pre>"},{"location":"api/commands/credit_control/","title":"Credit Control","text":"<p>API reference for <code>diameter.message.commands.credit_control</code>.</p> <p>Diameter Credit Control Application</p> <p>This module contains Credit Control Request and Answer messages, implementing AVPs documented in <code>rfc8506</code>, <code>rfc5777</code> and <code>rfc6733</code>, as well as the 3GPP  diameter charging application specification, as documented in <code>3GPP TS 32.299</code>.</p>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControl","title":"CreditControl","text":"<pre><code>CreditControl(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>A Credit-Control message.</p> <p>This message class lists message attributes based on the current rfc8506 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the CreditControl.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.session_id\ndra1.mvno.net;2323;546\n&gt;&gt;&gt; msg.find_avps((AVP_SESSION_ID, 0))\n['dra1.mvno.net;2323;546']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>CreditControlRequest</code> or <code>CreditControlAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, CreditControlRequest)\n</code></pre> <p>When creating a new message, the <code>CreditControlRequest</code> or <code>CreditControlAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = CreditControlRequest()\n&gt;&gt;&gt; msg.session_id = \"dra1.mvno.net;2323;546\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the CreditControl.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer","title":"CreditControlAnswer","text":"<pre><code>CreditControlAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>CreditControl</code></p> <p>A Credit-Control-Answer message.</p>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.cc_request_number","title":"cc_request_number  <code>instance-attribute</code>","text":"<pre><code>cc_request_number: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.cc_request_type","title":"cc_request_type  <code>instance-attribute</code>","text":"<pre><code>cc_request_type: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.cc_session_failover","title":"cc_session_failover  <code>instance-attribute</code>","text":"<pre><code>cc_session_failover: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.cc_sub_session_id","title":"cc_sub_session_id  <code>instance-attribute</code>","text":"<pre><code>cc_sub_session_id: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.check_balance_result","title":"check_balance_result  <code>instance-attribute</code>","text":"<pre><code>check_balance_result: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.cost_information","title":"cost_information  <code>instance-attribute</code>","text":"<pre><code>cost_information: CostInformation\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.credit_control_failure_handling","title":"credit_control_failure_handling  <code>instance-attribute</code>","text":"<pre><code>credit_control_failure_handling: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.direct_debiting_failure_handling","title":"direct_debiting_failure_handling  <code>instance-attribute</code>","text":"<pre><code>direct_debiting_failure_handling: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.event_timestamp","title":"event_timestamp  <code>instance-attribute</code>","text":"<pre><code>event_timestamp: datetime.datetime\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: list[FailedAvp]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.final_unit_indication","title":"final_unit_indication  <code>instance-attribute</code>","text":"<pre><code>final_unit_indication: FinalUnitIndication\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.granted_service_unit","title":"granted_service_unit  <code>instance-attribute</code>","text":"<pre><code>granted_service_unit: GrantedServiceUnit\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.low_balance_indication","title":"low_balance_indication  <code>instance-attribute</code>","text":"<pre><code>low_balance_indication: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.multiple_services_credit_control","title":"multiple_services_credit_control  <code>instance-attribute</code>","text":"<pre><code>multiple_services_credit_control: list[MultipleServicesCreditControl]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.oc_olr","title":"oc_olr  <code>instance-attribute</code>","text":"<pre><code>oc_olr: OcOlr\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.oc_supported_features","title":"oc_supported_features  <code>instance-attribute</code>","text":"<pre><code>oc_supported_features: OcSupportedFeatures\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.qos_final_unit_indication","title":"qos_final_unit_indication  <code>instance-attribute</code>","text":"<pre><code>qos_final_unit_indication: QosFinalUnitIndication\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.redirect_host","title":"redirect_host  <code>instance-attribute</code>","text":"<pre><code>redirect_host: list[str]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.redirect_host_usage","title":"redirect_host_usage  <code>instance-attribute</code>","text":"<pre><code>redirect_host_usage: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.redirect_max_cache_time","title":"redirect_max_cache_time  <code>instance-attribute</code>","text":"<pre><code>redirect_max_cache_time: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.remaining_balance","title":"remaining_balance  <code>instance-attribute</code>","text":"<pre><code>remaining_balance: RemainingBalance\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.service_information","title":"service_information  <code>instance-attribute</code>","text":"<pre><code>service_information: ServiceInformation\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.validity_time","title":"validity_time  <code>instance-attribute</code>","text":"<pre><code>validity_time: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlAnswer.add_multiple_services_credit_control","title":"add_multiple_services_credit_control","text":"<pre><code>add_multiple_services_credit_control(\n    granted_service_unit: GrantedServiceUnit = None,\n    requested_service_unit: RequestedServiceUnit = None,\n    used_service_unit: list[UsedServiceUnit] | UsedServiceUnit = None,\n    tariff_change_usage: int = None,\n    service_identifier: list[int] | int = None,\n    rating_group: int = None,\n    g_s_u_pool_reference: list[GsuPoolReference] = None,\n    validity_time: int = None,\n    result_code: int = None,\n    final_unit_indication: FinalUnitIndication = None,\n    avp: list[Avp] = None,\n)\n</code></pre> <p>Add a multiple services credit control instance to the answer.</p> <p>This is identical to doing:</p> <pre><code>&gt;&gt;&gt; ccr = CreditControlAnswer()\n&gt;&gt;&gt; ccr.multiple_services_credit_control.append(\n&gt;&gt;&gt;     MultipleServicesCreditControl()\n&gt;&gt;&gt; )\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>granted_service_unit</code> <code>GrantedServiceUnit</code> <p>Optional granted service units</p> <code>None</code> <code>requested_service_unit</code> <code>RequestedServiceUnit</code> <p>Optional requested service units</p> <code>None</code> <code>used_service_unit</code> <code>list[UsedServiceUnit] | UsedServiceUnit</code> <p>Optional reported used service units</p> <code>None</code> <code>tariff_change_usage</code> <code>int</code> <p>Optional tariff changed usage indication</p> <code>None</code> <code>service_identifier</code> <code>list[int] | int</code> <p>A list of service identifiers</p> <code>None</code> <code>rating_group</code> <code>int</code> <p>An optional rating group identifier</p> <code>None</code> <code>g_s_u_pool_reference</code> <code>list[GsuPoolReference]</code> <p>An optional list of G-S-U-Pool references</p> <code>None</code> <code>validity_time</code> <code>int</code> <p>Validity time in seconds</p> <code>None</code> <code>result_code</code> <code>int</code> <p>A sub-result code for this specific MSCC</p> <code>None</code> <code>final_unit_indication</code> <code>FinalUnitIndication</code> <p>An optional final unit indiciation</p> <code>None</code> <code>avp</code> <code>list[Avp]</code> <p>A list of custom AVPs to attach</p> <code>None</code>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest","title":"CreditControlRequest","text":"<pre><code>CreditControlRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>CreditControl</code></p> <p>A Credit-Control-Request message.</p>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.aoc_request_type","title":"aoc_request_type  <code>instance-attribute</code>","text":"<pre><code>aoc_request_type: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.cc_correlation_id","title":"cc_correlation_id  <code>instance-attribute</code>","text":"<pre><code>cc_correlation_id: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.cc_request_number","title":"cc_request_number  <code>instance-attribute</code>","text":"<pre><code>cc_request_number: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.cc_request_type","title":"cc_request_type  <code>instance-attribute</code>","text":"<pre><code>cc_request_type: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.cc_sub_session_id","title":"cc_sub_session_id  <code>instance-attribute</code>","text":"<pre><code>cc_sub_session_id: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre> <p>Destination peer; should not be set for CCR-I, but should be set for  the subsequent requests, based on the CCR-I answer.</p>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.event_timestamp","title":"event_timestamp  <code>instance-attribute</code>","text":"<pre><code>event_timestamp: datetime.datetime\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.multiple_services_credit_control","title":"multiple_services_credit_control  <code>instance-attribute</code>","text":"<pre><code>multiple_services_credit_control: list[MultipleServicesCreditControl]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.multiple_services_indicator","title":"multiple_services_indicator  <code>instance-attribute</code>","text":"<pre><code>multiple_services_indicator: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.oc_supported_features","title":"oc_supported_features  <code>instance-attribute</code>","text":"<pre><code>oc_supported_features: OcSupportedFeatures\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.requested_action","title":"requested_action  <code>instance-attribute</code>","text":"<pre><code>requested_action: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.requested_service_unit","title":"requested_service_unit  <code>instance-attribute</code>","text":"<pre><code>requested_service_unit: RequestedServiceUnit\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.service_context_id","title":"service_context_id  <code>instance-attribute</code>","text":"<pre><code>service_context_id: str\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.service_identifier","title":"service_identifier  <code>instance-attribute</code>","text":"<pre><code>service_identifier: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.service_information","title":"service_information  <code>instance-attribute</code>","text":"<pre><code>service_information: ServiceInformation\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.service_parameter_info","title":"service_parameter_info  <code>instance-attribute</code>","text":"<pre><code>service_parameter_info: list[ServiceParameterInfo]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.subscription_id","title":"subscription_id  <code>instance-attribute</code>","text":"<pre><code>subscription_id: list[SubscriptionId]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.termination_cause","title":"termination_cause  <code>instance-attribute</code>","text":"<pre><code>termination_cause: int\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.used_service_unit","title":"used_service_unit  <code>instance-attribute</code>","text":"<pre><code>used_service_unit: list[UsedServiceUnit]\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.user_equipment_info","title":"user_equipment_info  <code>instance-attribute</code>","text":"<pre><code>user_equipment_info: UserEquipmentInfo\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.user_equipment_info_extension","title":"user_equipment_info_extension  <code>instance-attribute</code>","text":"<pre><code>user_equipment_info_extension: UserEquipmentInfoExtension\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.add_multiple_services_credit_control","title":"add_multiple_services_credit_control","text":"<pre><code>add_multiple_services_credit_control(\n    granted_service_unit: GrantedServiceUnit = None,\n    requested_service_unit: RequestedServiceUnit = None,\n    used_service_unit: list[UsedServiceUnit] | UsedServiceUnit = None,\n    tariff_change_usage: int = None,\n    service_identifier: list[int] | int = None,\n    rating_group: int = None,\n    g_s_u_pool_reference: list[GsuPoolReference] = None,\n    validity_time: int = None,\n    result_code: int = None,\n    final_unit_indication: FinalUnitIndication = None,\n    avp: list[Avp] = None,\n)\n</code></pre> <p>Add a multiple services credit control instance to the request.</p> <p>This is identical to doing:</p> <pre><code>&gt;&gt;&gt; ccr = CreditControlRequest()\n&gt;&gt;&gt; ccr.multiple_services_credit_control.append(\n&gt;&gt;&gt;     MultipleServicesCreditControl()\n&gt;&gt;&gt; )\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>granted_service_unit</code> <code>GrantedServiceUnit</code> <p>Optional granted service units</p> <code>None</code> <code>requested_service_unit</code> <code>RequestedServiceUnit</code> <p>Optional requested service units</p> <code>None</code> <code>used_service_unit</code> <code>list[UsedServiceUnit] | UsedServiceUnit</code> <p>Optional reported used service units</p> <code>None</code> <code>tariff_change_usage</code> <code>int</code> <p>Optional tariff changed usage indication</p> <code>None</code> <code>service_identifier</code> <code>list[int] | int</code> <p>A list of service identifiers</p> <code>None</code> <code>rating_group</code> <code>int</code> <p>An optional rating group identifier</p> <code>None</code> <code>g_s_u_pool_reference</code> <code>list[GsuPoolReference]</code> <p>An optional list of G-S-U-Pool references</p> <code>None</code> <code>validity_time</code> <code>int</code> <p>Validity time in seconds</p> <code>None</code> <code>result_code</code> <code>int</code> <p>A sub-result code for this specific MSCC</p> <code>None</code> <code>final_unit_indication</code> <code>FinalUnitIndication</code> <p>An optional final unit indiciation</p> <code>None</code> <code>avp</code> <code>list[Avp]</code> <p>A list of custom AVPs to attach</p> <code>None</code>"},{"location":"api/commands/credit_control/#diameter.message.commands.credit_control.CreditControlRequest.add_subscription_id","title":"add_subscription_id","text":"<pre><code>add_subscription_id(\n    subscription_id_type: int, subscription_id_data: str\n)\n</code></pre> <p>Add a subscription ID to the request.</p> <p>Parameters:</p> Name Type Description Default <code>subscription_id_type</code> <code>int</code> <p>One of the <code>E_SUBSCRIPTION_ID_TYPE_*</code> constant values</p> required <code>subscription_id_data</code> <code>str</code> <p>Actual subscription ID</p> required"},{"location":"api/commands/device_watchdog/","title":"Device Watchdog","text":"<p>API reference for <code>diameter.message.commands.device_watchdog</code>.</p> <p>This module contains Device Watchdog Request and Answer messages, implementing AVPs documented in rfc6733.</p>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdog","title":"DeviceWatchdog","text":"<pre><code>DeviceWatchdog(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>A Device-Watchdog message.</p> <p>This message class lists message attributes based on the current RFC6733 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the DeviceWatchdog.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.origin_realm\nb'mvno.net'\n&gt;&gt;&gt; msg.find_avps((AVP_ORIGIN_REALM, 0))\n[b'mvno.net']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>DeviceWatchdogRequest</code> or <code>DeviceWatchdogAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, DeviceWatchdogRequest)\n</code></pre> <p>When creating a new message, the <code>DeviceWatchdogRequest</code> or <code>DeviceWatchdogAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = DeviceWatchdogRequest()\n&gt;&gt;&gt; msg.origin_realm = b\"mvno.net\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the DeviceWatchdog.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogAnswer","title":"DeviceWatchdogAnswer","text":"<pre><code>DeviceWatchdogAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DeviceWatchdog</code></p> <p>A Device-Watchdog-Answer message.</p>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: FailedAvp\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogRequest","title":"DeviceWatchdogRequest","text":"<pre><code>DeviceWatchdogRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DeviceWatchdog</code></p> <p>A Device-Watchdog-Request message.</p>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/device_watchdog/#diameter.message.commands.device_watchdog.DeviceWatchdogRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/diameter_eap/","title":"Diameter EAP","text":"<p>API reference for <code>diameter.message.commands.diameter_eap</code>.</p> <p>This module contains Diameter EAP Request and Answer messages, implementing AVPs documented in <code>rfc4072</code>.</p>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEap","title":"DiameterEap","text":"<pre><code>DiameterEap(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>A Diameter-EAP base message.</p> <p>This message class lists message attributes based on the current rfc4072 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the DiameterEap.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.session_id\ndra1.mvno.net;2323;546\n&gt;&gt;&gt; msg.find_avps((AVP_SESSION_ID, 0))\n['dra1.mvno.net;2323;546']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>DiameterEapRequest</code> or <code>DiameterEapAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, DiameterEapRequest)\n</code></pre> <p>When creating a new message, the <code>DiameterEapRequest</code> or <code>DiameterEapAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = DiameterEapRequest()\n&gt;&gt;&gt; msg.session_id = \"dra1.mvno.net;2323;546\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the DiameterEap.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer","title":"DiameterEapAnswer","text":"<pre><code>DiameterEapAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DiameterEap</code></p> <p>A Diameter-EAP-Answer message.</p> <p>Note</p> <p>The \"Class\" AVP can be accessed via <code>state_class</code> attribute, as \"class\" is a reserved keyword.</p>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.accounting_eap_auth_method","title":"accounting_eap_auth_method  <code>instance-attribute</code>","text":"<pre><code>accounting_eap_auth_method: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.acct_interim_interval","title":"acct_interim_interval  <code>instance-attribute</code>","text":"<pre><code>acct_interim_interval: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.auth_grace_period","title":"auth_grace_period  <code>instance-attribute</code>","text":"<pre><code>auth_grace_period: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.auth_request_type","title":"auth_request_type  <code>instance-attribute</code>","text":"<pre><code>auth_request_type: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.auth_session_state","title":"auth_session_state  <code>instance-attribute</code>","text":"<pre><code>auth_session_state: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.callback_id","title":"callback_id  <code>instance-attribute</code>","text":"<pre><code>callback_id: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.callback_number","title":"callback_number  <code>instance-attribute</code>","text":"<pre><code>callback_number: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.configuration_token","title":"configuration_token  <code>instance-attribute</code>","text":"<pre><code>configuration_token: list[bytes]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.eap_key_name","title":"eap_key_name  <code>instance-attribute</code>","text":"<pre><code>eap_key_name: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.eap_master_session_key","title":"eap_master_session_key  <code>instance-attribute</code>","text":"<pre><code>eap_master_session_key: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.eap_payload","title":"eap_payload  <code>instance-attribute</code>","text":"<pre><code>eap_payload: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.eap_reissued_payload","title":"eap_reissued_payload  <code>instance-attribute</code>","text":"<pre><code>eap_reissued_payload: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.error_reporting_host","title":"error_reporting_host  <code>instance-attribute</code>","text":"<pre><code>error_reporting_host: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: list[FailedAvp]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.filter_id","title":"filter_id  <code>instance-attribute</code>","text":"<pre><code>filter_id: list[str]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_appletalk_link","title":"framed_appletalk_link  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_link: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_appletalk_network","title":"framed_appletalk_network  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_network: list[int]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_appletalk_zone","title":"framed_appletalk_zone  <code>instance-attribute</code>","text":"<pre><code>framed_appletalk_zone: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_compression","title":"framed_compression  <code>instance-attribute</code>","text":"<pre><code>framed_compression: list[int]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_interface_id","title":"framed_interface_id  <code>instance-attribute</code>","text":"<pre><code>framed_interface_id: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_ip_address","title":"framed_ip_address  <code>instance-attribute</code>","text":"<pre><code>framed_ip_address: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_ip_netmask","title":"framed_ip_netmask  <code>instance-attribute</code>","text":"<pre><code>framed_ip_netmask: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_ipv6_pool","title":"framed_ipv6_pool  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_pool: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_ipv6_prefix","title":"framed_ipv6_prefix  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_prefix: list[bytes]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_ipv6_route","title":"framed_ipv6_route  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_route: list[str]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_ipx_network","title":"framed_ipx_network  <code>instance-attribute</code>","text":"<pre><code>framed_ipx_network: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_mtu","title":"framed_mtu  <code>instance-attribute</code>","text":"<pre><code>framed_mtu: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_pool","title":"framed_pool  <code>instance-attribute</code>","text":"<pre><code>framed_pool: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_protocol","title":"framed_protocol  <code>instance-attribute</code>","text":"<pre><code>framed_protocol: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_route","title":"framed_route  <code>instance-attribute</code>","text":"<pre><code>framed_route: list[str]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.framed_routing","title":"framed_routing  <code>instance-attribute</code>","text":"<pre><code>framed_routing: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.idle_timeout","title":"idle_timeout  <code>instance-attribute</code>","text":"<pre><code>idle_timeout: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.multi_round_time_out","title":"multi_round_time_out  <code>instance-attribute</code>","text":"<pre><code>multi_round_time_out: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.nas_filter_rule","title":"nas_filter_rule  <code>instance-attribute</code>","text":"<pre><code>nas_filter_rule: list[bytes]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.port_limit","title":"port_limit  <code>instance-attribute</code>","text":"<pre><code>port_limit: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.qos_filter_rule","title":"qos_filter_rule  <code>instance-attribute</code>","text":"<pre><code>qos_filter_rule: list[bytes]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.re_auth_request_type","title":"re_auth_request_type  <code>instance-attribute</code>","text":"<pre><code>re_auth_request_type: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.redirect_host","title":"redirect_host  <code>instance-attribute</code>","text":"<pre><code>redirect_host: list[str]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.redirect_host_usage","title":"redirect_host_usage  <code>instance-attribute</code>","text":"<pre><code>redirect_host_usage: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.redirect_max_cache_time","title":"redirect_max_cache_time  <code>instance-attribute</code>","text":"<pre><code>redirect_max_cache_time: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.reply_message","title":"reply_message  <code>instance-attribute</code>","text":"<pre><code>reply_message: list[str]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.session_timeout","title":"session_timeout  <code>instance-attribute</code>","text":"<pre><code>session_timeout: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.tunneling","title":"tunneling  <code>instance-attribute</code>","text":"<pre><code>tunneling: list[Tunneling]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest","title":"DiameterEapRequest","text":"<pre><code>DiameterEapRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DiameterEap</code></p> <p>A Diameter-EAP-Request message.</p>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.auth_grace_period","title":"auth_grace_period  <code>instance-attribute</code>","text":"<pre><code>auth_grace_period: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.auth_request_type","title":"auth_request_type  <code>instance-attribute</code>","text":"<pre><code>auth_request_type: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.auth_session_state","title":"auth_session_state  <code>instance-attribute</code>","text":"<pre><code>auth_session_state: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.callback_number","title":"callback_number  <code>instance-attribute</code>","text":"<pre><code>callback_number: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.called_station_id","title":"called_station_id  <code>instance-attribute</code>","text":"<pre><code>called_station_id: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.calling_station_id","title":"calling_station_id  <code>instance-attribute</code>","text":"<pre><code>calling_station_id: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.connect_info","title":"connect_info  <code>instance-attribute</code>","text":"<pre><code>connect_info: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.eap_key_name","title":"eap_key_name  <code>instance-attribute</code>","text":"<pre><code>eap_key_name: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.eap_payload","title":"eap_payload  <code>instance-attribute</code>","text":"<pre><code>eap_payload: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.framed_compression","title":"framed_compression  <code>instance-attribute</code>","text":"<pre><code>framed_compression: list[int]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.framed_interface_id","title":"framed_interface_id  <code>instance-attribute</code>","text":"<pre><code>framed_interface_id: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.framed_ip_address","title":"framed_ip_address  <code>instance-attribute</code>","text":"<pre><code>framed_ip_address: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.framed_ip_netmask","title":"framed_ip_netmask  <code>instance-attribute</code>","text":"<pre><code>framed_ip_netmask: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.framed_ipv6_prefix","title":"framed_ipv6_prefix  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_prefix: list[bytes]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.framed_mtu","title":"framed_mtu  <code>instance-attribute</code>","text":"<pre><code>framed_mtu: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.framed_protocol","title":"framed_protocol  <code>instance-attribute</code>","text":"<pre><code>framed_protocol: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.nas_identifier","title":"nas_identifier  <code>instance-attribute</code>","text":"<pre><code>nas_identifier: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.nas_ip_address","title":"nas_ip_address  <code>instance-attribute</code>","text":"<pre><code>nas_ip_address: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.nas_ipv6_address","title":"nas_ipv6_address  <code>instance-attribute</code>","text":"<pre><code>nas_ipv6_address: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.nas_port","title":"nas_port  <code>instance-attribute</code>","text":"<pre><code>nas_port: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.nas_port_id","title":"nas_port_id  <code>instance-attribute</code>","text":"<pre><code>nas_port_id: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.nas_port_type","title":"nas_port_type  <code>instance-attribute</code>","text":"<pre><code>nas_port_type: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.originating_line_info","title":"originating_line_info  <code>instance-attribute</code>","text":"<pre><code>originating_line_info: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.port_limit","title":"port_limit  <code>instance-attribute</code>","text":"<pre><code>port_limit: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: bytes\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.tunneling","title":"tunneling  <code>instance-attribute</code>","text":"<pre><code>tunneling: list[Tunneling]\n</code></pre>"},{"location":"api/commands/diameter_eap/#diameter.message.commands.diameter_eap.DiameterEapRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/disconnect_peer/","title":"Disconnect Peer","text":"<p>API reference for <code>diameter.message.commands.disconnect_peer</code>.</p> <p>This module contains Disconnect-PeerConnection Request and Answer messages, implementing AVPs documented in rfc6733.</p>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeer","title":"DisconnectPeer","text":"<pre><code>DisconnectPeer(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>A Disconnect-Peer message.</p> <p>This message class lists message attributes based on the current RFC6733 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the DisconnectPeer.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.origin_realm\nb'mvno.net'\n&gt;&gt;&gt; msg.find_avps((AVP_ORIGIN_REALM, 0))\n[b'mvno.net']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>DisconnectPeerRequest</code> or <code>DisconnectPeerAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, DisconnectPeerRequest)\n</code></pre> <p>When creating a new message, the <code>DisconnectPeerRequest</code> or <code>DisconnectPeerAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = DisconnectPeerRequest()\n&gt;&gt;&gt; msg.origin_realm = b\"mvno.net\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the DisconnectPeer.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerAnswer","title":"DisconnectPeerAnswer","text":"<pre><code>DisconnectPeerAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DisconnectPeer</code></p> <p>A Disconnect-Peer-Answer message.</p>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: FailedAvp\n</code></pre>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerRequest","title":"DisconnectPeerRequest","text":"<pre><code>DisconnectPeerRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DisconnectPeer</code></p> <p>A Disconnect-Peer-Request message.</p>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerRequest.disconnect_cause","title":"disconnect_cause  <code>instance-attribute</code>","text":"<pre><code>disconnect_cause: bytes\n</code></pre>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/disconnect_peer/#diameter.message.commands.disconnect_peer.DisconnectPeerRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/other_commands/","title":"Other","text":"<p>API reference for <code>diameter.message.commands</code>.</p> <p>Placeholder classes that extend <code>Message</code>, but do not provide any direct python API for reading and setting AVPs.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.AggregatedRUCIReport","title":"AggregatedRUCIReport","text":"<pre><code>AggregatedRUCIReport(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An Aggregated-RUCI-Report message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the AggregatedRUCIReport.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.AlertServiceCentre","title":"AlertServiceCentre","text":"<pre><code>AlertServiceCentre(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An Alert-Service-Centre message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the AlertServiceCentre.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.AuthenticationInformation","title":"AuthenticationInformation","text":"<pre><code>AuthenticationInformation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Authentication-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the AuthenticationInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.BackgroundDataTransfer","title":"BackgroundDataTransfer","text":"<pre><code>BackgroundDataTransfer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Background-Data-Transfer message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the BackgroundDataTransfer.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.BootstrapingInfo","title":"BootstrapingInfo","text":"<pre><code>BootstrapingInfo(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Bootstraping-Info message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the BootstrapingInfo.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.CancelLocation","title":"CancelLocation","text":"<pre><code>CancelLocation(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Cancel-Location message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the CancelLocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.CancelVCSGLocation","title":"CancelVCSGLocation","text":"<pre><code>CancelVCSGLocation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Cancel-VCSG-Location message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the CancelVCSGLocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.CapabilitiesUpdate","title":"CapabilitiesUpdate","text":"<pre><code>CapabilitiesUpdate(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Capabilities-Update message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the CapabilitiesUpdate.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ConfigurationInformation","title":"ConfigurationInformation","text":"<pre><code>ConfigurationInformation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Configuration-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ConfigurationInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ConnectionManagement","title":"ConnectionManagement","text":"<pre><code>ConnectionManagement(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Connection-Management message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ConnectionManagement.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DataPull","title":"DataPull","text":"<pre><code>DataPull(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Data-Pull message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DataPull.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DataUpdate","title":"DataUpdate","text":"<pre><code>DataUpdate(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Data-Update message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DataUpdate.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DeleteSubscriberData","title":"DeleteSubscriberData","text":"<pre><code>DeleteSubscriberData(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Delete-Subscriber-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DeleteSubscriberData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DeliveryReport","title":"DeliveryReport","text":"<pre><code>DeliveryReport(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Delivery-Report message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DeliveryReport.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DeviceAction","title":"DeviceAction","text":"<pre><code>DeviceAction(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Device-Action message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DeviceAction.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DeviceNotification","title":"DeviceNotification","text":"<pre><code>DeviceNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Device-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DeviceNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DeviceTrigger","title":"DeviceTrigger","text":"<pre><code>DeviceTrigger(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Device-Trigger message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DeviceTrigger.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.DistributedCharging","title":"DistributedCharging","text":"<pre><code>DistributedCharging(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Distributed Charging message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the DistributedCharging.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.EricssonBindingData","title":"EricssonBindingData","text":"<pre><code>EricssonBindingData(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An Ericsson-Binding-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the EricssonBindingData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.EricssonSL","title":"EricssonSL","text":"<pre><code>EricssonSL(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An Ericsson-SL message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the EricssonSL.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.EricssonSN","title":"EricssonSN","text":"<pre><code>EricssonSN(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An Ericsson-SN message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the EricssonSN.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.EricssonTraceReport","title":"EricssonTraceReport","text":"<pre><code>EricssonTraceReport(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An Ericsson-Trace-Report message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the EricssonTraceReport.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.GCSAction","title":"GCSAction","text":"<pre><code>GCSAction(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A GCS-Action message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the GCSAction.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.GCSNotification","title":"GCSNotification","text":"<pre><code>GCSNotification(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A GCS-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the GCSNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.GetGateway","title":"GetGateway","text":"<pre><code>GetGateway(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Get-Gateway message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the GetGateway.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.IKEv2SK","title":"IKEv2SK","text":"<pre><code>IKEv2SK(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An IKEv2-SK message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the IKEv2SK.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.InsertSubscriberData","title":"InsertSubscriberData","text":"<pre><code>InsertSubscriberData(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Insert-Subscriber-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the InsertSubscriberData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.JuniperSessionDiscovery","title":"JuniperSessionDiscovery","text":"<pre><code>JuniperSessionDiscovery(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Juniper-Session-Discovery message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the JuniperSessionDiscovery.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.JuniperSyncEvent","title":"JuniperSyncEvent","text":"<pre><code>JuniperSyncEvent(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Juniper-Sync-Event message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the JuniperSyncEvent.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.LCSRoutingInfo","title":"LCSRoutingInfo","text":"<pre><code>LCSRoutingInfo(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-LCS-Routing-Info message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the LCSRoutingInfo.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.LocationInfo","title":"LocationInfo","text":"<pre><code>LocationInfo(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Location-Info message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the LocationInfo.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.LocationReport","title":"LocationReport","text":"<pre><code>LocationReport(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Location-Report message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the LocationReport.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MIp6","title":"MIp6","text":"<pre><code>MIp6(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A MIP6 message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MIp6.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MOData","title":"MOData","text":"<pre><code>MOData(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An MO-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MOData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MOForwardShortMessage","title":"MOForwardShortMessage","text":"<pre><code>MOForwardShortMessage(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An MO-Forward-Short-Message message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MOForwardShortMessage.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MTData","title":"MTData","text":"<pre><code>MTData(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An MT-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MTData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MTForwardShortMessage","title":"MTForwardShortMessage","text":"<pre><code>MTForwardShortMessage(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An MT-Forward-Short-Message message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MTForwardShortMessage.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MeIdentityCheck","title":"MeIdentityCheck","text":"<pre><code>MeIdentityCheck(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-ME-Identity-Check message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the AaMobileNode.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MessageProcess","title":"MessageProcess","text":"<pre><code>MessageProcess(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Message-Process message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MessageProcess.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MobileApplication","title":"MobileApplication","text":"<pre><code>MobileApplication(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Mobile-Application message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MobileApplication.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ModifyUecontext","title":"ModifyUecontext","text":"<pre><code>ModifyUecontext(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Modify-Uecontext message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ModifyUecontext.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MsgInterface","title":"MsgInterface","text":"<pre><code>MsgInterface(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Msg-Interface message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MsgInterface.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.MultimediaAuth","title":"MultimediaAuth","text":"<pre><code>MultimediaAuth(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Multimedia-Auth message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MultimediaAuth.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NATControl","title":"NATControl","text":"<pre><code>NATControl(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A NAT-Control message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NATControl.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NIDDInformation","title":"NIDDInformation","text":"<pre><code>NIDDInformation(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An NIDD-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NIDDInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NSNCancelLocationMS","title":"NSNCancelLocationMS","text":"<pre><code>NSNCancelLocationMS(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An NSN-Cancel-LocationMS message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NSNCancelLocationMS.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NSNProfileUpdateMS","title":"NSNProfileUpdateMS","text":"<pre><code>NSNProfileUpdateMS(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An NSN-Profile-UpdateMS message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NSNProfileUpdateMS.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NSNPushNotificationMS","title":"NSNPushNotificationMS","text":"<pre><code>NSNPushNotificationMS(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An NSN-Push-NotificationMS message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NSNPushNotificationMS.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NSNSubscribeNotificationsMS","title":"NSNSubscribeNotificationsMS","text":"<pre><code>NSNSubscribeNotificationsMS(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An NSN-Subscribe-NotificationsMS message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NSNSubscribeNotificationsMS.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NSNUserDataMS","title":"NSNUserDataMS","text":"<pre><code>NSNUserDataMS(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An NSN-User-DataMS message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NSNUserDataMS.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NetworkStatus","title":"NetworkStatus","text":"<pre><code>NetworkStatus(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Network-Status message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NetworkStatus.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NetworkStatusContinuousReport","title":"NetworkStatusContinuousReport","text":"<pre><code>NetworkStatusContinuousReport(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Network-Status-Continuous-Report message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NetworkStatusContinuousReport.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NokiaCoreService","title":"NokiaCoreService","text":"<pre><code>NokiaCoreService(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Nokia Core Service message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NokiaCoreService.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NokiaExtendedCommand","title":"NokiaExtendedCommand","text":"<pre><code>NokiaExtendedCommand(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Nokia Extended Command message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NokiaExtendedCommand.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NokiaFetchSession","title":"NokiaFetchSession","text":"<pre><code>NokiaFetchSession(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Nokia Fetch-Session message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NokiaFetchSession.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NokiaSessionMassSync","title":"NokiaSessionMassSync","text":"<pre><code>NokiaSessionMassSync(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Nokia Session-Mass-Sync message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NokiaSessionMassSync.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NokiaSessionSync","title":"NokiaSessionSync","text":"<pre><code>NokiaSessionSync(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Nokia Session-Sync message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NokiaSessionSync.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NonAggregatedRUCIReport","title":"NonAggregatedRUCIReport","text":"<pre><code>NonAggregatedRUCIReport(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Non-Aggregated-RUCI-Report message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NonAggregatedRUCIReport.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.Notif","title":"Notif","text":"<pre><code>Notif(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Notif message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the Notif.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.NotificationData","title":"NotificationData","text":"<pre><code>NotificationData(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Notification-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the NotificationData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.Notify","title":"Notify","text":"<pre><code>Notify(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Notify message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the Notify.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeAlert","title":"ProSeAlert","text":"<pre><code>ProSeAlert(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Alert message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeAlert.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeAuthorization","title":"ProSeAuthorization","text":"<pre><code>ProSeAuthorization(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Authorization message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeAuthorization.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeCancellation","title":"ProSeCancellation","text":"<pre><code>ProSeCancellation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Cancellation message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeCancellation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeDiscovery","title":"ProSeDiscovery","text":"<pre><code>ProSeDiscovery(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Discovery message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeDiscovery.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeInitialLocationInformation","title":"ProSeInitialLocationInformation","text":"<pre><code>ProSeInitialLocationInformation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Initial-Location-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeInitialLocationInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeLocationUpdate","title":"ProSeLocationUpdate","text":"<pre><code>ProSeLocationUpdate(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Location-Update message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeLocationUpdate.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeMatch","title":"ProSeMatch","text":"<pre><code>ProSeMatch(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Match message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeMatch.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeMatchReportInfo","title":"ProSeMatchReportInfo","text":"<pre><code>ProSeMatchReportInfo(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Match-Report-Info message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeMatchReportInfo.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeNotify","title":"ProSeNotify","text":"<pre><code>ProSeNotify(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Notify message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeNotify.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeProximity","title":"ProSeProximity","text":"<pre><code>ProSeProximity(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Proximity message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeProximity.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProSeSubscriberInformation","title":"ProSeSubscriberInformation","text":"<pre><code>ProSeSubscriberInformation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProSe-Subscriber-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProSeSubscriberInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProXimityAction","title":"ProXimityAction","text":"<pre><code>ProXimityAction(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProXimity-Action message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProXimityAction.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProXimityApplication","title":"ProXimityApplication","text":"<pre><code>ProXimityApplication(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A ProXimity-Application message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProXimityApplication.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProfileUpdate","title":"ProfileUpdate","text":"<pre><code>ProfileUpdate(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Profile-Update message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProfileUpdate.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ProvideLocation","title":"ProvideLocation","text":"<pre><code>ProvideLocation(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Provide-Location message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ProvideLocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.PurgeUE","title":"PurgeUE","text":"<pre><code>PurgeUE(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Purge-UE message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the PurgeUE.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.PushNotification","title":"PushNotification","text":"<pre><code>PushNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Push-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the PushNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.PushProfile","title":"PushProfile","text":"<pre><code>PushProfile(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Push-Profile message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the PushProfile.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.QoSAuthorization","title":"QoSAuthorization","text":"<pre><code>QoSAuthorization(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A QoS-Authorization message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the QoSAuthorization.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.QoSInstall","title":"QoSInstall","text":"<pre><code>QoSInstall(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A QoS-Install message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the QoSInstall.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.QueryProfile","title":"QueryProfile","text":"<pre><code>QueryProfile(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Query Profile message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the QueryProfile.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RegistrationTermination","title":"RegistrationTermination","text":"<pre><code>RegistrationTermination(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Registration-Termination message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the [AaMobileNode.append_avpRegistrationTerminationdiameter.message.Message.append_avp] method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ReportSMDeliveryStatus","title":"ReportSMDeliveryStatus","text":"<pre><code>ReportSMDeliveryStatus(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Report-SM-Delivery-Status message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ReportSMDeliveryStatus.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ReportingInformation","title":"ReportingInformation","text":"<pre><code>ReportingInformation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Reporting-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ReportingInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.Reset","title":"Reset","text":"<pre><code>Reset(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Reset message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the MTData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXaDPCRegistration","title":"RivadaXaDPCRegistration","text":"<pre><code>RivadaXaDPCRegistration(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xa DPC-Registration message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXaDPCRegistration.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXaHeartBeat","title":"RivadaXaHeartBeat","text":"<pre><code>RivadaXaHeartBeat(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xa Heart-Beat message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXaHeartBeat.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXaResourceAllocation","title":"RivadaXaResourceAllocation","text":"<pre><code>RivadaXaResourceAllocation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xa Resource-Allocation message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXaResourceAllocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXaResourceRelease","title":"RivadaXaResourceRelease","text":"<pre><code>RivadaXaResourceRelease(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xa Resource-Release message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXaResourceRelease.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXaResourceReleaseNotification","title":"RivadaXaResourceReleaseNotification","text":"<pre><code>RivadaXaResourceReleaseNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xa Resource-Release-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXaResourceReleaseNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdCellInfoModification","title":"RivadaXdCellInfoModification","text":"<pre><code>RivadaXdCellInfoModification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Cell-Info-Modification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdCellInfoModification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdCellInfoModificationNotification","title":"RivadaXdCellInfoModificationNotification","text":"<pre><code>RivadaXdCellInfoModificationNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Cell-Info-Modification-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdCellInfoModificationNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdCellInfoNotification","title":"RivadaXdCellInfoNotification","text":"<pre><code>RivadaXdCellInfoNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Cell-Info-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdCellInfoNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdCellInfoTransfer","title":"RivadaXdCellInfoTransfer","text":"<pre><code>RivadaXdCellInfoTransfer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Cell-Info-Transfer message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdCellInfoTransfer.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdDSCRegistration","title":"RivadaXdDSCRegistration","text":"<pre><code>RivadaXdDSCRegistration(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd DSC-Registration message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdDSCRegistration.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdHeartBeat","title":"RivadaXdHeartBeat","text":"<pre><code>RivadaXdHeartBeat(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Heart-Beat message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdHeartBeat.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceAllocation","title":"RivadaXdResourceAllocation","text":"<pre><code>RivadaXdResourceAllocation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Allocation message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceAllocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceAllocationNotification","title":"RivadaXdResourceAllocationNotification","text":"<pre><code>RivadaXdResourceAllocationNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Allocation-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceAllocationNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceHold","title":"RivadaXdResourceHold","text":"<pre><code>RivadaXdResourceHold(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Hold message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceHold.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceHoldNotification","title":"RivadaXdResourceHoldNotification","text":"<pre><code>RivadaXdResourceHoldNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Hold-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceHoldNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceModification","title":"RivadaXdResourceModification","text":"<pre><code>RivadaXdResourceModification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Modification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceModification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceModificationNotification","title":"RivadaXdResourceModificationNotification","text":"<pre><code>RivadaXdResourceModificationNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Modification-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceModificationNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceRelease","title":"RivadaXdResourceRelease","text":"<pre><code>RivadaXdResourceRelease(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Release message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceRelease.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceReleaseNotification","title":"RivadaXdResourceReleaseNotification","text":"<pre><code>RivadaXdResourceReleaseNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Release-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceReleaseNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceResume","title":"RivadaXdResourceResume","text":"<pre><code>RivadaXdResourceResume(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Resume message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceResume.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceResumeNotification","title":"RivadaXdResourceResumeNotification","text":"<pre><code>RivadaXdResourceResumeNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Resume-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceResumeNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceUsageNotification","title":"RivadaXdResourceUsageNotification","text":"<pre><code>RivadaXdResourceUsageNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Usage-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceUsageNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXdResourceUsageUpdate","title":"RivadaXdResourceUsageUpdate","text":"<pre><code>RivadaXdResourceUsageUpdate(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xd Resource-Usage-Update message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXdResourceUsageUpdate.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXhUserData","title":"RivadaXhUserData","text":"<pre><code>RivadaXhUserData(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xh User-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXhUserData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmAddUEContext","title":"RivadaXmAddUEContext","text":"<pre><code>RivadaXmAddUEContext(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Add-UE-Context message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmAddUEContext.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmDeleteUEContext","title":"RivadaXmDeleteUEContext","text":"<pre><code>RivadaXmDeleteUEContext(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Delete-UE-Context message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmDeleteUEContext.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmDetachUE","title":"RivadaXmDetachUE","text":"<pre><code>RivadaXmDetachUE(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Detach-UE message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmDetachUE.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmHeartBeat","title":"RivadaXmHeartBeat","text":"<pre><code>RivadaXmHeartBeat(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Heart-Beat message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmHeartBeat.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmPageUE","title":"RivadaXmPageUE","text":"<pre><code>RivadaXmPageUE(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Page-UE message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmPageUE.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmResourceAllocation","title":"RivadaXmResourceAllocation","text":"<pre><code>RivadaXmResourceAllocation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Resource-Allocation message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmResourceAllocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmResourceAllocationNotify","title":"RivadaXmResourceAllocationNotify","text":"<pre><code>RivadaXmResourceAllocationNotify(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Resource-Allocation-Notify message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmResourceAllocationNotify.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmResourceHold","title":"RivadaXmResourceHold","text":"<pre><code>RivadaXmResourceHold(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Resource-Hold message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmResourceHold.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmResourceModify","title":"RivadaXmResourceModify","text":"<pre><code>RivadaXmResourceModify(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Resource-Modify message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmResourceModify.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmResourceRelease","title":"RivadaXmResourceRelease","text":"<pre><code>RivadaXmResourceRelease(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Resource-Release message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmResourceRelease.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmResourceResume","title":"RivadaXmResourceResume","text":"<pre><code>RivadaXmResourceResume(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Resource-Resume message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmResourceResume.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.RivadaXmUpdateUEContext","title":"RivadaXmUpdateUEContext","text":"<pre><code>RivadaXmUpdateUEContext(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Rivada Xm Update-UE-Context message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the RivadaXmUpdateUEContext.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SendRoutingInfoforSM","title":"SendRoutingInfoforSM","text":"<pre><code>SendRoutingInfoforSM(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Send-Routing-Info-for-SM message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SendRoutingInfoforSM.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.ServerAssignment","title":"ServerAssignment","text":"<pre><code>ServerAssignment(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Server-Assignment message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the ServerAssignment.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SipLocationInfo","title":"SipLocationInfo","text":"<pre><code>SipLocationInfo(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A SIP-Location-Info message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SipLocationInfo.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SipMultimediaAuth","title":"SipMultimediaAuth","text":"<pre><code>SipMultimediaAuth(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A SIP-Multimedia-Auth message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SipMultimediaAuth.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SipPushProfile","title":"SipPushProfile","text":"<pre><code>SipPushProfile(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A SIP-Push-Profile message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SipPushProfile.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SipRegistrationTermination","title":"SipRegistrationTermination","text":"<pre><code>SipRegistrationTermination(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A SIP-Registration-Termination message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SipRegistrationTermination.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SipServerAssignment","title":"SipServerAssignment","text":"<pre><code>SipServerAssignment(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A SIP-Server-Assignment message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SipServerAssignment.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SipUserAuthorization","title":"SipUserAuthorization","text":"<pre><code>SipUserAuthorization(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A SIP-User-Authorization message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SipUserAuthorization.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SubscribeNotifications","title":"SubscribeNotifications","text":"<pre><code>SubscribeNotifications(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Subscribe-Notifications message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SubscribeNotifications.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SubscriberInformation","title":"SubscriberInformation","text":"<pre><code>SubscriberInformation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Subscriber-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SubscriberInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.SubscriptionInformationApplication","title":"SubscriptionInformationApplication","text":"<pre><code>SubscriptionInformationApplication(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Subscription Information Application message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the SubscriptionInformationApplication.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.TDFSession","title":"TDFSession","text":"<pre><code>TDFSession(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A TDF-Session message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the TDFSession.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.TSSFNotification","title":"TSSFNotification","text":"<pre><code>TSSFNotification(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A TSSF-Notification message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the TSSFNotification.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.Tggp2SubscriberInformation","title":"Tggp2SubscriberInformation","text":"<pre><code>Tggp2SubscriberInformation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP2 Subscriber-Information message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the 3GPP2SubscriberInformation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.TgppReset","title":"TgppReset","text":"<pre><code>TgppReset(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Reset message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the Reset.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.TriggerEstablishment","title":"TriggerEstablishment","text":"<pre><code>TriggerEstablishment(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Trigger-Establishment message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the TriggerEstablishment.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.UpdateLocation","title":"UpdateLocation","text":"<pre><code>UpdateLocation(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Update-Location message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the UpdateLocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.UpdateProSeSubscriberData","title":"UpdateProSeSubscriberData","text":"<pre><code>UpdateProSeSubscriberData(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>An Update-ProSe-Subscriber-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the UpdateProSeSubscriberData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.UpdateVCSGLocation","title":"UpdateVCSGLocation","text":"<pre><code>UpdateVCSGLocation(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A 3GPP-Update-VCSG-Location message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the UpdateVCSGLocation.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.UserAuthorization","title":"UserAuthorization","text":"<pre><code>UserAuthorization(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A User-Authorization message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the UserAuthorization.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.UserData","title":"UserData","text":"<pre><code>UserData(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A User-Data message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the UserData.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.VerizonSessionDataRecovery","title":"VerizonSessionDataRecovery","text":"<pre><code>VerizonSessionDataRecovery(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A Verizon Session Data Recovery message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the VerizonSessionDataRecovery.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WIMAXHRPDSFF","title":"WIMAXHRPDSFF","text":"<pre><code>WIMAXHRPDSFF(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WIMAX-HRPD-SFF message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WIMAXHRPDSFF.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXAbortSession","title":"WiMAXAbortSession","text":"<pre><code>WiMAXAbortSession(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Abort-Session message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXAbortSession.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXChangeofAuthorization","title":"WiMAXChangeofAuthorization","text":"<pre><code>WiMAXChangeofAuthorization(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Change-of-Authorization message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXChangeofAuthorization.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXDHCP","title":"WiMAXDHCP","text":"<pre><code>WiMAXDHCP(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-DHCP message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXDHCP.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXDiameterEAP","title":"WiMAXDiameterEAP","text":"<pre><code>WiMAXDiameterEAP(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Diameter-EAP message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXDiameterEAP.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXHomeAgentIPv4","title":"WiMAXHomeAgentIPv4","text":"<pre><code>WiMAXHomeAgentIPv4(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Home-Agent-IPv4 message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXHomeAgentIPv4.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXHomeAgentIPv6","title":"WiMAXHomeAgentIPv6","text":"<pre><code>WiMAXHomeAgentIPv6(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Home-Agent-IPv6 message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXHomeAgentIPv6.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXLAA","title":"WiMAXLAA","text":"<pre><code>WiMAXLAA(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-LAA message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXLAA.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXLocationAccounting","title":"WiMAXLocationAccounting","text":"<pre><code>WiMAXLocationAccounting(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Location-Accounting message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXLocationAccounting.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXLocationMeasurementQuery","title":"WiMAXLocationMeasurementQuery","text":"<pre><code>WiMAXLocationMeasurementQuery(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Location-Measurement-Query message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXLocationMeasurementQuery.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXReauthentication","title":"WiMAXReauthentication","text":"<pre><code>WiMAXReauthentication(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Reauthentication message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXReauthentication.append_avp method.</p>"},{"location":"api/commands/other_commands/#diameter.message.commands.WiMAXSessionTermination","title":"WiMAXSessionTermination","text":"<pre><code>WiMAXSessionTermination(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>UndefinedMessage</code></p> <p>A WiMAX-Session-Termination message.</p> <p>This message implementation provides no python subclasses for requests and answers; AVPs must be created manually and added using the WiMAXSessionTermination.append_avp method.</p>"},{"location":"api/commands/re_auth/","title":"Re Auth","text":"<p>API reference for <code>diameter.message.commands.re_auth</code>.</p> <p>This module contains Re-Auth Request and Answer messages, implementing AVPs documented in rfc6733.</p>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuth","title":"ReAuth","text":"<pre><code>ReAuth(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>A Re-Auth message.</p> <p>This message class lists message attributes based on the current RFC6733 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the ReAuth.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.origin_realm\nb'mvno.net'\n&gt;&gt;&gt; msg.find_avps((AVP_ORIGIN_REALM, 0))\n[b'mvno.net']\n</code></pre> <p>When a diameter message is decoded using Message.from_bytes, it returns either an instance of <code>ReAuthRequest</code> or <code>ReAuthAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, ReAuthRequest)\n</code></pre> <p>When creating a new message by hand, the <code>ReAuthRequest</code> or <code>ReAuthAnswer</code> class should be instantiated directly, and values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = ReAuthRequest()\n&gt;&gt;&gt; msg.origin_realm = b\"mvno.net\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the ReAuth.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer","title":"ReAuthAnswer","text":"<pre><code>ReAuthAnswer(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>ReAuth</code></p> <p>A Re-Auth-Answer message.</p>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.auth_grace_period","title":"auth_grace_period  <code>instance-attribute</code>","text":"<pre><code>auth_grace_period: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.authorization_lifetime","title":"authorization_lifetime  <code>instance-attribute</code>","text":"<pre><code>authorization_lifetime: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.configuration_token","title":"configuration_token  <code>instance-attribute</code>","text":"<pre><code>configuration_token: list[bytes]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.error_reporting_host","title":"error_reporting_host  <code>instance-attribute</code>","text":"<pre><code>error_reporting_host: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: FailedAvp\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.idle_timeout","title":"idle_timeout  <code>instance-attribute</code>","text":"<pre><code>idle_timeout: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.prompt","title":"prompt  <code>instance-attribute</code>","text":"<pre><code>prompt: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.re_auth_request_type","title":"re_auth_request_type  <code>instance-attribute</code>","text":"<pre><code>re_auth_request_type: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.redirect_host","title":"redirect_host  <code>instance-attribute</code>","text":"<pre><code>redirect_host: list[str]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.redirect_host_usage","title":"redirect_host_usage  <code>instance-attribute</code>","text":"<pre><code>redirect_host_usage: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.redirect_max_cache_time","title":"redirect_max_cache_time  <code>instance-attribute</code>","text":"<pre><code>redirect_max_cache_time: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.reply_message","title":"reply_message  <code>instance-attribute</code>","text":"<pre><code>reply_message: list[str]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest","title":"ReAuthRequest","text":"<pre><code>ReAuthRequest(header: MessageHeader = None, avps: list[Avp] = None)\n</code></pre> <p>             Bases: <code>ReAuth</code></p> <p>A Re-Auth-Request message.</p>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.acct_multi_session_id","title":"acct_multi_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_multi_session_id: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.acct_session_id","title":"acct_session_id  <code>instance-attribute</code>","text":"<pre><code>acct_session_id: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.called_station_id","title":"called_station_id  <code>instance-attribute</code>","text":"<pre><code>called_station_id: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.calling_station_id","title":"calling_station_id  <code>instance-attribute</code>","text":"<pre><code>calling_station_id: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.framed_interface_id","title":"framed_interface_id  <code>instance-attribute</code>","text":"<pre><code>framed_interface_id: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.framed_ip_address","title":"framed_ip_address  <code>instance-attribute</code>","text":"<pre><code>framed_ip_address: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.framed_ipv6_prefix","title":"framed_ipv6_prefix  <code>instance-attribute</code>","text":"<pre><code>framed_ipv6_prefix: list[bytes]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.g_s_u_pool_identifier","title":"g_s_u_pool_identifier  <code>instance-attribute</code>","text":"<pre><code>g_s_u_pool_identifier: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.nas_identifier","title":"nas_identifier  <code>instance-attribute</code>","text":"<pre><code>nas_identifier: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.nas_ip_address","title":"nas_ip_address  <code>instance-attribute</code>","text":"<pre><code>nas_ip_address: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.nas_ipv6_address","title":"nas_ipv6_address  <code>instance-attribute</code>","text":"<pre><code>nas_ipv6_address: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.nas_port","title":"nas_port  <code>instance-attribute</code>","text":"<pre><code>nas_port: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.nas_port_id","title":"nas_port_id  <code>instance-attribute</code>","text":"<pre><code>nas_port_id: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.nas_port_type","title":"nas_port_type  <code>instance-attribute</code>","text":"<pre><code>nas_port_type: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.originating_line_info","title":"originating_line_info  <code>instance-attribute</code>","text":"<pre><code>originating_line_info: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.rating_group","title":"rating_group  <code>instance-attribute</code>","text":"<pre><code>rating_group: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.re_auth_request_type","title":"re_auth_request_type  <code>instance-attribute</code>","text":"<pre><code>re_auth_request_type: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.reply_message","title":"reply_message  <code>instance-attribute</code>","text":"<pre><code>reply_message: list[str]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.service_identifier","title":"service_identifier  <code>instance-attribute</code>","text":"<pre><code>service_identifier: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.service_type","title":"service_type  <code>instance-attribute</code>","text":"<pre><code>service_type: int\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: bytes\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/re_auth/#diameter.message.commands.re_auth.ReAuthRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/session_termination/","title":"Session Termination","text":"<p>API reference for <code>diameter.message.commands.session_termination</code>.</p> <p>This module contains Session-Termination Request and Answer messages, implementing AVPs documented in rfc6733.</p>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTermination","title":"SessionTermination","text":"<pre><code>SessionTermination(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>DefinedMessage</code></p> <p>A Session-Termination message.</p> <p>This message class lists message attributes based on the current RFC6733 as python properties, acessible as instance attributes. AVPs not listed in the base protocol can be retrieved using the SessionTermination.find_avps search method.</p> <p>Examples:</p> <p>AVPs accessible either as instance attributes or by searching:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; msg.session_id\ndra1.mvno.net;2323;546\n&gt;&gt;&gt; msg.find_avps((AVP_SESSION_ID, 0))\n['dra1.mvno.net;2323;546']\n</code></pre> <p>When diameter message is decoded using Message.from_bytes, it returns either an instance of <code>SessionTerminationRequest</code> or <code>SessionTerminationAnswer</code> automatically:</p> <pre><code>&gt;&gt;&gt; msg = Message.from_bytes(b\"...\")\n&gt;&gt;&gt; assert msg.header.is_request is True\n&gt;&gt;&gt; assert isinstance(msg, SessionTerminationRequest)\n</code></pre> <p>When creating a new message, the <code>SessionTerminationRequest</code> or <code>SessionTerminationAnswer</code> class should be instantiated directly, and the values for AVPs set as class attributes:</p> <pre><code>&gt;&gt;&gt; msg = SessionTerminationRequest()\n&gt;&gt;&gt; msg.session_id = \"dra1.mvno.net;2323;546\"\n</code></pre> <p>Other, custom AVPs can be appended to the message using the SessionTermination.append_avp method, or by overwriting the <code>avp</code> attribute entirely. Regardless of the custom AVPs set, the mandatory values listed in RFC6733 must be set, however they can be set as <code>None</code>, if they are not to be used.</p> <p>Warning</p> <p>Every AVP documented for the subclasses of this command can be accessed as an instance attribute, even if the original network-received message did not contain that specific AVP. Such AVPs will be returned with the value <code>None</code> when accessed.</p> <p>Every other AVP not mentioned here, and not present in a network-received message will raise an <code>AttributeError</code> when being accessed; their presence should be validated with <code>hasattr</code> before accessing.</p>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer","title":"SessionTerminationAnswer","text":"<pre><code>SessionTerminationAnswer(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>SessionTermination</code></p> <p>An Abort-Session-Answer message.</p> <p>Note</p> <p>The \"Class\" AVP can be accessed via <code>state_class</code> attribute, as \"class\" is a reserved keyword.</p>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.error_message","title":"error_message  <code>instance-attribute</code>","text":"<pre><code>error_message: str\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.error_reporting_host","title":"error_reporting_host  <code>instance-attribute</code>","text":"<pre><code>error_reporting_host: bytes\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.failed_avp","title":"failed_avp  <code>instance-attribute</code>","text":"<pre><code>failed_avp: FailedAvp\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.redirect_host","title":"redirect_host  <code>instance-attribute</code>","text":"<pre><code>redirect_host: list[str]\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.redirect_host_usage","title":"redirect_host_usage  <code>instance-attribute</code>","text":"<pre><code>redirect_host_usage: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.redirect_max_cache_time","title":"redirect_max_cache_time  <code>instance-attribute</code>","text":"<pre><code>redirect_max_cache_time: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.result_code","title":"result_code  <code>instance-attribute</code>","text":"<pre><code>result_code: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationAnswer.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest","title":"SessionTerminationRequest","text":"<pre><code>SessionTerminationRequest(\n    header: MessageHeader = None, avps: list[Avp] = None\n)\n</code></pre> <p>             Bases: <code>SessionTermination</code></p> <p>An Abort-Session-Request message.</p>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.auth_application_id","title":"auth_application_id  <code>instance-attribute</code>","text":"<pre><code>auth_application_id: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.destination_host","title":"destination_host  <code>instance-attribute</code>","text":"<pre><code>destination_host: bytes\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.destination_realm","title":"destination_realm  <code>instance-attribute</code>","text":"<pre><code>destination_realm: bytes\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.origin_aaa_protocol","title":"origin_aaa_protocol  <code>instance-attribute</code>","text":"<pre><code>origin_aaa_protocol: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.origin_host","title":"origin_host  <code>instance-attribute</code>","text":"<pre><code>origin_host: bytes\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.origin_realm","title":"origin_realm  <code>instance-attribute</code>","text":"<pre><code>origin_realm: bytes\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.origin_state_id","title":"origin_state_id  <code>instance-attribute</code>","text":"<pre><code>origin_state_id: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.proxy_info","title":"proxy_info  <code>instance-attribute</code>","text":"<pre><code>proxy_info: list[ProxyInfo]\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.route_record","title":"route_record  <code>instance-attribute</code>","text":"<pre><code>route_record: list[bytes]\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.session_id","title":"session_id  <code>instance-attribute</code>","text":"<pre><code>session_id: str\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.state_class","title":"state_class  <code>instance-attribute</code>","text":"<pre><code>state_class: list[bytes]\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.termination_cause","title":"termination_cause  <code>instance-attribute</code>","text":"<pre><code>termination_cause: int\n</code></pre>"},{"location":"api/commands/session_termination/#diameter.message.commands.session_termination.SessionTerminationRequest.user_name","title":"user_name  <code>instance-attribute</code>","text":"<pre><code>user_name: str\n</code></pre>"},{"location":"examples/credit_control_sms_client/","title":"Credit Control SMS client","text":"<p>This example demonstrates a diameter client script that sets up a local node, connects to a peer and then sends a single credit control request for charging an SMS, waits for the answer and then exits.</p> <p>This file is available as <code>examples/credit_control_sms_client.py</code>. <pre><code>\"\"\"\nA diameter credit control application sample, which establishes connection to\na peer and sends a single credit control EVENT request, with additional SMS\ninformation present and then exits.\n\"\"\"\nimport datetime\nimport logging\n\nfrom diameter.message.commands.credit_control import CreditControlRequest\nfrom diameter.message.commands.credit_control import RequestedServiceUnit\nfrom diameter.message.commands.credit_control import ServiceInformation\nfrom diameter.message.commands.credit_control import SmsInformation\nfrom diameter.message.commands.credit_control import RecipientInfo\nfrom diameter.message.commands.credit_control import RecipientAddress\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import SimpleThreadingApplication\n\nlogging.basicConfig(format=\"%(asctime)s %(name)s %(levelname)s %(message)s\")\n# this shows a human-readable message dump in the logs\nlogging.getLogger(\"diameter.peer.msg\").setLevel(logging.DEBUG)\n\n\n# Configure our client node\nnode = Node(\n    \"smsgw.gy\", \"testrealm.local\",\n    vendor_ids=[VENDOR_ETSI, VENDOR_TGPP, VENDOR_TGPP2])\n# Add the destination peer\nocs_cfg = node.add_peer(\n    \"aaa://ocs.gy\", \"testrealm.local\",\n    ip_addresses=[\"10.0.0.50\"], is_persistent=True)\nnode.start()\n\n\n# Configure our client application\nclient = SimpleThreadingApplication(\n    APP_DIAMETER_CREDIT_CONTROL_APPLICATION,\n    is_auth_application=True)\n# Add application for `ocs.gy` peer\nnode.add_application(client, [ocs_cfg])\n\n\n# Construct a credit control request\nccr = CreditControlRequest()\n\n# These are required:\nccr.session_id = client.node.session_generator.next_id()\nccr.origin_host = client.node.origin_host.encode()\nccr.origin_realm = client.node.realm_name.encode()\nccr.destination_realm = client.node.realm_name.encode()\nccr.auth_application_id = client.application_id\nccr.service_context_id = \"32274@3gpp.org\"\nccr.cc_request_type = E_CC_REQUEST_TYPE_EVENT_REQUEST\nccr.cc_request_number = 1\n\n# These are usually wanted by charging servers:\nccr.user_name = \"diameter\"\nccr.event_timestamp = datetime.datetime.now()\nccr.requested_action = E_REQUESTED_ACTION_DIRECT_DEBITING\n\nccr.add_subscription_id(\n    subscription_id_type=E_SUBSCRIPTION_ID_TYPE_END_USER_E164,\n    subscription_id_data=\"41780000001\")\nccr.add_multiple_services_credit_control(\n    requested_service_unit=RequestedServiceUnit(cc_service_specific_units=1),\n    service_identifier=1)\n\n# Adds the following 3GPP vendor-specific AVP structure at the end, which\n# contains the SMS type and recipient. Looks like:\n#\n#   Service-Information &lt;Code: 0x369, Flags: 0xc0 (VM-), Length: 120, Vnd: TGPP&gt;\n#     SMS-Information &lt;Code: 0x7d0, Flags: 0x80 (V--), Length: 108, Vnd: TGPP&gt;\n#       Data-Coding-Scheme &lt;Code: 0x7d1, Flags: 0x80 (V--), Length: 16, Vnd: TGPP, Val: 8&gt;\n#       SM-Message-Type &lt;Code: 0x7d7, Flags: 0x80 (V--), Length: 16, Vnd: TGPP, Val: 0&gt;\n#       Recipient-Info &lt;Code: 0x7ea, Flags: 0x80 (V--), Length: 64, Vnd: TGPP&gt;\n#         Recipient-Address &lt;Code: 0x4b1, Flags: 0x80 (V--), Length: 52, Vnd: TGPP&gt;\n#           Address-Type &lt;Code: 0x383, Flags: 0xc0 (VM-), Length: 16, Vnd: TGPP, Val: 1&gt;\n#           Address-Data &lt;Code: 0x381, Flags: 0xc0 (VM-), Length: 23, Vnd: TGPP, Val: 41780000001&gt;\n#\n# Actual content wanted by the OCS on the receiving end may vary depending on\n# the vendor and their implementation.\n#\n# Note that `RecipientInfo` and `RecipientAddress` are wrapped in lists, as the\n# specification allows more than one recipient.\nccr.service_information = ServiceInformation(\n    sms_information=SmsInformation(\n        data_coding_scheme=8,\n        sm_message_type=E_SM_MESSAGE_TYPE_SUBMISSION,\n        recipient_info=[RecipientInfo(\n            recipient_address=[RecipientAddress(\n                address_type=E_ADDRESS_TYPE_MSISDN,\n                address_data=\"41780000002\"\n            )]\n        )]\n    )\n)\n\n# Wait for CER/CEA to complete\nclient.wait_for_ready()\ncca = client.send_request(ccr, timeout=5)\n\n# Should print 2001, if all goes well\nprint(cca.result_code)\n\n# Disconnect from peer and exit\nnode.stop()\n</code></pre></p>"},{"location":"examples/idle_server_client/","title":"Idling server and client","text":"<p>This example demonstrates a server-client setup with two scripts that connect to each other, one as the sender and one as the receiver. The scripts do  nothing except send keepalive device-watchdog-request occasionally (roughly  every 20 seconds).</p>"},{"location":"examples/idle_server_client/#server","title":"Server","text":"<p>This file is available as <code>examples/idle_server.py</code>.</p> <pre><code>\"\"\"\nA sample of a node acting as a server that does nothing.\n\nStarting this script, and then starting the `idle_client.py` script, located\nin the same directory, will result in the two nodes exchanging CER/CEA and then\nidling forever, with occasional Device-Watchdog messages being sent back and\nforth.\n\"\"\"\nimport logging\nimport time\n\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import SimpleThreadingApplication\n\n\nlogging.basicConfig(format=\"%(asctime)s %(name)-22s %(levelname)-7s %(message)s\",\n                    level=logging.DEBUG)\n\n# this shows a human-readable message dump in the logs\nlogging.getLogger(\"diameter.peer.msg\").setLevel(logging.DEBUG)\n\n\n# Configure our server node\nnode = Node(\"relay1.test.realm\", \"test.realm\",\n            ip_addresses=[\"127.0.0.1\"],\n            tcp_port=6090,\n            vendor_ids=[VENDOR_ETSI, VENDOR_TGPP, VENDOR_TGPP2])\n# Sets a lower Device-Watchdog trigger than the client, so that the nodes will\n# not send DWRs simultaneously\nnode.idle_timeout = 20\n\n# Adding the other idler as a peer, setting `is_persistent` on our side only,\n# however it can also be set on both sides if that behaviour is wanted\npeer = node.add_peer(\"aaa://relay2.test.realm:6091\",\n                     ip_addresses=[\"127.0.0.2\"],\n                     is_persistent=True)\n# Lowering the time to wait before connecting to the peer\npeer.reconnect_wait = 5\n\n\n# Constructing an app that does nothing and advertises it as a relay. Relay\n# agents are accepted by any diameter node as compatible, even if they do not\n# support any applications at all.\napp = SimpleThreadingApplication(APP_RELAY, is_auth_application=True)\nnode.add_application(app, [peer])\n\n\n# Start the node and idle until interrupted with CTRL+C\nnode.start()\n\ntry:\n    while True:\n        time.sleep(1)\n\nexcept (KeyboardInterrupt, SystemExit) as e:\n    node.stop()\n</code></pre>"},{"location":"examples/idle_server_client/#client","title":"Client","text":"<p>This file is available as <code>examples/idle_client.py</code>.</p> <pre><code>\"\"\"\nA sample of a node acting as a client that does nothing.\n\nStarting this script, and then starting the `idle_server.py` script, located\nin the same directory, will result in the two nodes exchanging CER/CEA and then\nidling forever, with occasional Device-Watchdog messages being sent back and\nforth.\n\"\"\"\nimport logging\nimport time\n\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import SimpleThreadingApplication\n\n\nlogging.basicConfig(format=\"%(asctime)s %(name)-22s %(levelname)-7s %(message)s\",\n                    level=logging.DEBUG)\n\n# this shows a human-readable message dump in the logs\nlogging.getLogger(\"diameter.peer.msg\").setLevel(logging.DEBUG)\n\n\n# Configure our server node\nnode = Node(\"relay2.test.realm\", \"test.realm\",\n            ip_addresses=[\"127.0.0.2\"],\n            tcp_port=6091,\n            vendor_ids=[VENDOR_ETSI, VENDOR_TGPP, VENDOR_TGPP2])\n# Sets a higher Device-Watchdog trigger than the server, so that the nodes will\n# not send DWRs simultaneously\nnode.idle_timeout = 30\n\n# Adding the other idler as a peer, but not configuring it as persistent. The\n# connectivity will only be established by the other peer.\npeer = node.add_peer(\"aaa://relay1.test.realm\")\n\n\n# Constructing an app that does nothing and advertises it as a relay. Relay\n# agents are accepted by any diameter node as compatible, even if they do not\n# support any applications at all.\napp = SimpleThreadingApplication(APP_RELAY, is_auth_application=True)\nnode.add_application(app, [peer])\n\n\n# Start the node and idle until interrupted with CTRL+C\nnode.start()\n\ntry:\n    while True:\n        time.sleep(1)\n\nexcept (KeyboardInterrupt, SystemExit) as e:\n    node.stop()\n</code></pre>"},{"location":"guide/","title":"Using the diameter stack","text":"<p>The <code>diameter</code> package offers tools for parsing and creating AVPs, parsing and creating diameter messages, connecting to diameter peers and writing diameter applications.</p>"},{"location":"guide/#modules","title":"Modules","text":"<p>The entire package can be imported as <code>diameter</code>. It provides following  importable modules:</p> <ul> <li><code>diameter.message</code><ul> <li><code>diameter.message.avp</code></li> <li><code>diameter.message.commands</code></li> <li><code>diameter.message.constants</code></li> </ul> </li> <li><code>diameter.node</code><ul> <li><code>diameter.node.application</code></li> <li><code>diameter.node.peer</code></li> </ul> </li> </ul>"},{"location":"guide/#avp-and-message-modules","title":"AVP and message modules","text":"<p>The AVP and message handling modules are part of <code>diameter.message</code>.</p> <pre><code># base class for parsing and creating AVPs\nfrom diameter.message import Avp\n\n# subclasses of AVPs are in the `avp` module\nfrom diameter.message.avp import AvpTime, AvpOctetString\n\n# all package constants for AVPs, applications, vendors, enums etc\nfrom diameter.message.constants import *\n</code></pre> <p>See working with AVPs for a guide on AVPs.</p> <pre><code># base class for parsing and creating messages\nfrom diameter.message import Message\n\n# subclasses of messages ae in the `commands` module\nfrom diameter.message.commands import AbortSessionRequest, ReAuthRequest\n</code></pre> <p>See working with messages for a guide on diameter messages.</p>"},{"location":"guide/#node-application-and-peer-modules","title":"Node, application and peer modules","text":"<p>The diameter connectivity and application support are part of <code>diameter.node</code>.</p> <pre><code># Nodes and peers\nfrom diameter.node import Node\nfrom diameter.node.peer import Peer, PeerConnection\n</code></pre> <p>See connecting to peers for a guide on node and peer connectivity.</p> <pre><code># application base classes\nfrom diameter.node.application import Application, SimpleThreadingApplication\n</code></pre> <p>See application basics and sample application for guides on writing applications.</p>"},{"location":"guide/application/","title":"Working with diameter applications","text":"<p>A diameter application is the highest level of abstraction provided by the  <code>diameter</code> package. It automates tasks such as:</p> <ul> <li>Synchronous return of answers after sending messages</li> <li>Tracking requests that require answers</li> <li>Routing requests to any suitable peers, including load balancing</li> <li>Constructing answers from received request messages</li> </ul> <p>An \"application\" is any instance of a subclass of  <code>Application</code>. An application is  handed over to a configured node and the node will route every received request and answer message to the application, when necessary. Protocol-level message exchanges, i.e. CER (Capabilities-Exchange), DWR (Device-Watchdog) and DPR (Disconnect-Peer) never reach any application, but every other message is  expected to be handled by at least one application.</p> <p>If a node receives a message that no application has been configured to handle, it will reject the message with a <code>DIAMETER_APPLICATION_UNSUPPORTED</code> error.</p> <p>An example of the most basic client application:</p> <pre><code>from diameter.message import Message\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import SimpleThreadingApplication\n\nmy_app = SimpleThreadingApplication(APP_DIAMETER_BASE_ACCOUNTING, \n                                    is_acct_application=True)\n\nnode = Node(\"peername.gy\", \"realm.net\")\npeer = node.add_peer(\"aaa://ocs2.gy;transport=sctp\", \"realm.net\", \n                     ip_addresses=[\"10.16.0.8\", \"10.16.5.8\"], \n                     is_persistent=True)\nnode.add_application(my_app, [peer])\nnode.start()\n\nmsg = Message()\n\nmy_app.wait_for_ready()\nanswer = my_app.send_request(msg, timeout=10)\n</code></pre> <p>The <code>add_application</code> call configures  also the peers that the application will use. More than one application of  same type can be added at the same time, as long as they use different peers.</p> <p>The application provides a  <code>wait_for_ready</code> method,  which will block until at least one of the configured peers becomes available  to receive requests.</p> <p>The <code>send_request</code>  application instance method will block until an answer message has been  received, and then returns the message, synchronously.</p> <p>The <code>diameter</code> package offers three different application implementations:</p> <code>Application</code> <p>The most basic form of an application. Must be subclassed and contains two  methods, <code>handle_request</code>, which must be overridden, and <code>handle_answer</code>, which may be overriden, but is usually not necessary. </p> <p>The <code>Application</code> class calls internally <code>handle_request</code> for each  received diameter request in the main thread. It calls <code>handle_answer</code> for each answer that comes unexpected, i.e. without a request waiting for it.</p> <pre><code>from diameter.message import Message\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import Application\n\nclass MyApplication(Application):\n    def handle_request(self, message: Message):\n        print(\"Got request\", message)\n\nmy_app = MyApplication(APP_DIAMETER_BASE_ACCOUNTING, \n                       is_acct_application=True)\n\nnode = Node(\"peername.gy\", \"realm.net\")\npeer = node.add_peer(\"aaa://ocs2.gy;transport=sctp\", \"realm.net\")\nnode.add_application(my_app, [peer])\n</code></pre> <p>Warning</p> <p>The request and answer are called in the main <code>Node</code> work thread and  they will block the node from processing any other messages. When this class is used, the implementing party is expected to build a queue and/or threading based solution on top, which would not block the main thread.</p> <code>ThreadingApplication</code> <p>A variation of application, which spawns a new thread for each incoming  request, up to an optional maximum amount of threads. Must be subclassed. Also contains two methods, <code>handle_request</code>, which must be overridden,  and <code>handle_answer</code>, which may be overriden, but is usually not necessary.</p> <p>Unlike in the base <code>Application</code> class, the threading application expects that the overridden <code>handle_request</code> returns a valid diameter message as an answer to the received request. Failing to do so results in an automatic  generation of a <code>DIAMETER_UNABLE_TO_COMPLY</code> error message.</p> <pre><code>from diameter.message import Message\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import ThreadingApplication\n\nclass MyApplication(ThreadingApplication):\n    def handle_request(self, message: Message) -&gt; Message:\n        print(\"Got request\", message)\n        answer = self.generate_answer(message)\n        return answer\n\nmy_app = MyApplication(APP_DIAMETER_BASE_ACCOUNTING, \n                       is_acct_application=True,\n                       max_threads=50)\n\nnode = Node(\"peername.gy\", \"realm.net\")\npeer = node.add_peer(\"aaa://ocs2.gy;transport=sctp\", \"realm.net\")\nnode.add_application(my_app, [peer])\n</code></pre> <code>SimpleThreadingApplication</code> <p>A variation of threading application, which does not need to be subclassed  and handles incoming requests only optionally. Also spawns a new thread for  each incoming request, up to an optional maximum amount of threads. </p> <p>In order to receive requests, the <code>SimpleThreadingApplication</code> accepts a  callback method in its constructor and calls it in a separate spawned  thread. Similar to the threading application, the callback function must return a valid answer, otherwise a <code>DIAMETER_UNABLE_TO_COMPLY</code> error is  sent back to the network.</p> <p>If no callback is provided, the <code>SimpleThreadingApplication</code> acts as a  client only and accepts no incoming requests.</p> <pre><code>from diameter.message import Message\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import SimpleThreadingApplication\n\ndef recv_request(app: SimpleThreadingApplication, message: Message) -&gt; Message:\n    print(\"Got request\", message, \"through application\", app)\n    answer = app.generate_answer(message)\n    answer.result_code = E_RESULT_CODE_DIAMETER_SUCCESS\n    return answer\n\nmy_app = SimpleThreadingApplication(APP_DIAMETER_BASE_ACCOUNTING, \n                                    is_acct_application=True,\n                                    max_threads=50,\n                                    request_handler=recv_request)\n\nnode = Node(\"peername.gy\", \"realm.net\")\npeer = node.add_peer(\"aaa://ocs2.gy;transport=sctp\", \"realm.net\")\nnode.add_application(my_app, [peer])\n</code></pre>"},{"location":"guide/avp/","title":"Parsing and writing AVPs","text":"<p>The <code>diameter</code> package contains an extensive dictionary, with ~2700 AVPs,  ~140 Applications, ~100 command codes, ~30 Vendors and ~2400 ENUM values  defined. These can be imported as:</p> <pre><code>from diameter.message.constants import *\n</code></pre> <p>This imports following constants:</p> <ul> <li><code>APP_</code>, application identifiers, e.g. <code>APP_3GPP_GX</code></li> <li><code>VENDOR_</code>, vendor codes, e.g. <code>VENDOR_NOKIA</code></li> <li><code>CMD_</code>, diameter command codes, e.g. <code>CMD_ACCOUNTING</code></li> <li><code>AVP_</code>, diameter AVPs. These are either labeled <code>AVP_&lt;name&gt;</code>, for the     diameter base protocol (e.g. <code>AVP_SERVICE_TYPE</code>), or <code>AVP_&lt;vendor&gt;_&lt;name&gt;</code>,     for the vendor-specific AVPs (e.g. <code>AVP_TGPP_GGSN_ADDRESS</code>)</li> <li><code>E_</code>, for all the enumerations, e.g. <code>E_DISCONNECT_CAUSE_BUSY</code></li> </ul> <p>The package does support also creating and parsing AVPs that are not included in the dictionary, as long as the AVP code and its type is known.</p>"},{"location":"guide/avp/#reading-an-avp","title":"Reading an AVP","text":"<p>Each AVP is an instance of <code>Avp</code> and consists of  attributes <code>code</code>, <code>is_mandatory</code>, <code>is_private</code>, <code>is_vendor</code>, <code>length</code>,  <code>vendor_id</code> and <code>value</code>. </p> <p>Most commonly, AVPs are received as bytes from the network and can be converted into their Python types by using  <code>Avp.from_bytes</code>.</p> <pre><code>from diameter.message import Avp\nfrom diameter.message.constants import *\n\navp_bytes = bytes.fromhex(\"000001cd40000016333232353140336770702e6f72670000\")\na = Avp.from_bytes(avp_bytes)\n\nassert a.code == 461\nassert a.code == AVP_SERVICE_CONTEXT_ID\nassert a.is_mandatory is True\nassert a.is_private is False\nassert a.is_vendor is False\nassert a.length == 22\nassert a.value == \"32251@3gpp.org\"\n</code></pre> <p>When parsing, as long as the AVP is of a known type, an instance of a subclass  of <code>Avp</code> is returned. Each subclass represents a specific AVP type; e.g. an \"Integer32\" AVP is represented by  <code>AvpInteger32</code>, a \"Grouped\" AVP is  <code>AvpGrouped</code>, etc.</p> <p>The AVPs hold two attributes, <code>payload</code> and <code>value</code>. The payload is the actual encoded byte string, while value is the Python value that can be set and read.</p> <pre><code>from diameter.message.avp import AvpInteger32\nfrom diameter.message.constants import *\n\na = AvpInteger32(AVP_ACCT_INPUT_PACKETS)\na.value = 294967\n\nassert a.value == 294967  # Python value\nassert a.payload == b\"\\x00\\x04\\x807\"  # Network bytes representation\n</code></pre> <p>Each individual AVP type has their specific python value, refer to  AVP API reference for details.</p>"},{"location":"guide/avp/#creating-an-avp","title":"Creating an AVP","text":"<p><code>Avp.new</code> class method is the expected way to  build new AVPs. It ensures that a correct type of AVP is returned,  i.e \"Float32\", \"OctetString\" etc. AVPs encode and decode their content automatically according to the RFC, when their <code>value</code> attribute is altered. The actual, byte-encoded payload is stored in the <code>payload</code> attribute.</p> <pre><code>from diameter.message import Avp\nfrom diameter.message.avp import AvpUtf8String\nfrom diameter.message.constants import *\n\na = Avp.new(AVP_USER_NAME)\n# Has returned an instance of AvpUtf8String\nassert isinstance(a, AvpUtf8String)\na.value = \"\u6c49\u8bed\"\n\n# `value` is human-readable, `payload` has the network bytes\nassert a.value == \"\u6c49\u8bed\"\nassert a.payload == b\"\\xe6\\xb1\\x89\\xe8\\xaf\\xad\"\n</code></pre> <p>When creating an AVP, its vendor must be specified, if the AVP does not belong to the Diameter Base RFCs:</p> <pre><code>from diameter.message import Avp\nfrom diameter.message.constants import *\n\nua = Avp.new(AVP_CISCO_USER_AGENT, VENDOR_CISCO)\n</code></pre> <p>When creating an AVP, its flags and value can also be set during creation,  which can be practical especially for nested \"Grouped\" type AVPs:</p> <pre><code>from diameter.message import Avp\nfrom diameter.message.constants import *\n\nps_information = Avp.new(AVP_TGPP_PS_INFORMATION, VENDOR_TGPP, value=[\n    Avp.new(AVP_TGPP_3GPP_PDP_TYPE, VENDOR_TGPP, value=0),\n    Avp.new(AVP_TGPP_PDP_ADDRESS, VENDOR_TGPP, value=\"10.40.93.32\")\n])\n</code></pre> <p>Each individual AVP type has their specific type of python value, and  attempting to set a value that has an invalid type will raise an exception.  Refer to AVP API reference for details for each AVP  type.</p>"},{"location":"guide/avp/#using-the-avp-dictionary","title":"Using the AVP dictionary","text":"<p>The package contains a large dictionary that holds a definition for each AVP,  with which AVPs can be constructed. This dictionary is automatically consulted when creating AVPs using <code>Avp.new</code> and <code>Avp.from_bytes</code>, however it permits  also direct access:</p> <pre><code>from diameter.message.avp import AvpEnumerated\nfrom diameter.message.avp.dictionary import AVP_DICTIONARY\nfrom diameter.message.constants import *\n\navp_def =  AVP_DICTIONARY[AVP_SERVICE_TYPE]\n\nassert avp_def[\"name\"] == \"Service-Type\"\nassert avp_def[\"type\"] == AvpEnumerated\nassert avp_def[\"mandatory\"] is True\n</code></pre> <p>Vendor-specific AVPs are stored in individual dictionaries, separate for each  vendor:</p> <pre><code>from diameter.message.avp import AvpUtf8String\nfrom diameter.message.avp.dictionary import AVP_VENDOR_DICTIONARY\nfrom diameter.message.constants import *\n\navp_def =  AVP_VENDOR_DICTIONARY[VENDOR_TGPP][AVP_TGPP_CONTENT_TYPE]\n\nassert avp_def[\"name\"] == \"Content-Type\"\nassert avp_def[\"type\"] == AvpUtf8String\nassert avp_def[\"mandatory\"] is True\nassert avp_def[\"vendor\"] == 10415\nassert avp_def[\"vendor\"] == VENDOR_TGPP\n</code></pre>"},{"location":"guide/message/","title":"Parsing and writing messages","text":"<p>The <code>diameter</code> package can parse network-received diameter command messages into Python structures that have AVP values accessible as instance attributes. Some  of these structures can also be converted back to actual diameter commands.</p> <p>The diameter stack handles command messages in three different ways:</p> <ol> <li> Full Python implementation A small set of diameter command messages have an implementation written  fully in Python. These implementations all inherit from same base class <code>DefinedMessage</code> and allow reading AVPs  as instance attributes, as well as setting values for AVPs just by assigning  a value to an instance attribute. These implementations exist mostly for the most commonly used messages, such as CER/CEA, DWR/DEA, CCR/CCA, however the  list is extended periodically. </li> <li> Known message with no implementation The stack contains a large list of command messages that are known, but  have no actual implementation. These messages inherit  <code>UndefinedMessage</code> and also permit reading AVP values as instance attributes. The message class attempts to generate an instance attribute name that matches the name of each AVP as closely as possible. These messages are essentially read-only, the AVP values cannot be altered, and new messages cannot be created by assigning values to instance attributes. </li> <li> Unknown messages The diameter stack can also parse messages that are entirely unknown. These will also inherit <code>UndefinedMessage</code>, however the stack will not be able to map them to known command codes and names and will name each message just as \"Unknown\". AVP values are also accessible as instance attributes. </li> </ol>"},{"location":"guide/message/#reading-messages","title":"Reading messages","text":"<p>Messages received from the network can be converted directly to Python types  using <code>Message.from_bytes</code>.</p> <pre><code>from diameter.message import Message\nfrom diameter.message.commands import CreditControlRequest\n\nccr = Message.from_bytes(b\"\\x01\\x00\\x02\\x90\\xc0 ... \")\nassert isinstance(ccr, CreditControlRequest)\n</code></pre> <p>Messages that have a Python implementation (e.g. \"Accounting\", \"Credit-Control\") are further split into \"Request\" and \"Answer\" classes. Parsing an \"Accounting\" message that is also a request will return an instance of  <code>AccountingRequest</code>, while an answer message would return an instance of  <code>AccountingRequest</code>.</p> <p>Python implementations with direct attribute access are currently provided for  the following Diameter Commands:</p> <ul> <li>AA</li> <li>AA-Mobile-Node</li> <li>Abort-Session</li> <li>Accounting</li> <li>Capabilities-Exchange</li> <li>Credit-Control</li> <li>Device-Watchdog</li> <li>Disconnect-PeerConnection</li> <li>Home-Agent-MIP</li> <li>Re-Auth</li> <li>Session-Termination</li> <li>Spending-Limit</li> <li>Spending-Status-Notification</li> </ul> <p>For messages that do not have a Python implementation, an instance of  <code>UndefinedMessage</code>, or one of its  subclasses is returned. For these, refer to  the full list.</p>"},{"location":"guide/message/#accessing-message-avps","title":"Accessing message AVPs","text":"<p>For any command message that is known to the diameter stack, any AVP part of the  specification can be accessed as an instance attribute:</p> <pre><code>from diameter.message import Message\n\n# Will generate a diameter.message.commands.CreditControlRequest instance\nccr = Message.from_bytes(b\"\\x01\\x00\\x02\\x90\\xc0 ... \")\n\n# AVPs are directly accessible as attributes:\nassert ccr.origin_host == b\"dra2.gy.mno.net\"\nassert ccr.destination_realm == b\"mvno.net\"\n# Works also for Grouped AVPs:\nassert ccr.multiple_services_credit_control[0].requested_service_unit.cc_total_octets == 0\n</code></pre> <p>For AVPs not part of the specification, a  <code>find_avps</code> instance method is provided,  which can be used to find any AVP within a message:</p> <pre><code>from diameter.message import Message\nfrom diameter.message.constants import *\n\n# Will generate a diameter.message.commands.CreditControlRequest instance\nccr = Message.from_bytes(b\"\\x01\\x00\\x02\\x90\\xc0 ... \")\n\n# Find accepts tuples of AVP-vendor pairs to search. More than one pair is \n# interpreted as a nested chain, i.e. an AVP within a grouped AVP. This chain \n# searches for a \"3GPP-RAT-Type\" AVP within a \"PS-Information\" AVP within a \n# \"Service-Information\" AVP, all TGPP vendor AVPs. \navps = ccr.find_avps(\n    (AVP_TGPP_SERVICE_INFORMATION, VENDOR_TGPP), \n    (AVP_TGPP_PS_INFORMATION, VENDOR_TGPP),\n    (AVP_TGPP_3GPP_RAT_TYPE, VENDOR_TGPP))\nassert avps[0].value == b\"\\x06\"\n</code></pre> <p>Command messages that are known to the diameter stack (see  the full list), but do not have a written  Python implementation, still provide read-only access to AVPs as instance  attributes. Command messages that inherit  <code>UndefinedMessage</code> attempt to automatically convert every AVP that the message contains into instance attributes, by  converting the AVP name to lowercase and replacing dashes with underscore, e.g. a \"Visited-PLMN-Id\" AVP becomes a <code>visited_plmn_id</code> instance attribute. This  conversion may also result in attribute names that cannot be accessed using the dot notation. E.g. a \"3GPP-User-Location-Info\" converts into  <code>3gpp_user_location_info</code>, which cannot be accessed with dot notation. For  these, use of <code>hasattr</code> and <code>getattr</code> is recommended.</p> <p>The automatic conversion will also work for grouped AVPs. If an AVP appears  more than once, it will be converted to a list:</p> <pre><code>from diameter.message import Message\nfrom diameter.message.constants import *\n\n# Contains a 3GPP-Update-Location-Request\nulr = Message.from_bytes(b\"\\x01\\x00\\x02\\xc8\\xc0\\x00 ... \")\nassert ulr.session_id == \"epc.mnc003.mcc228.3gppnetwork.org;02472683;449d027e;13a0091b\"\nassert ulr.vendor_specific_application_id.auth_application_id == 16777251\n\n# Searching will also work:\nsession_id = ulr.find_avps((AVP_SESSION_ID, 0))[0]\n\n# In this message, the \"Route-Record\" AVP is included multiple times, so it has\n# been converted to a list:\nfor route_record in ulr.route_record:\n    print(route_record)\n</code></pre>"},{"location":"guide/message/#creating-messages","title":"Creating messages","text":"<p>Message types that have a Python implementation can be built by creating new  instances of the needed type, and AVPs can be set directly as instance  attributes.</p> <pre><code>from diameter.message.commands import CreditControlRequest\nfrom diameter.message.constants import *\n\nccr = CreditControlRequest()\n# AVPs included in the base RFCs can be set as instance attributes. AVPs that \n# are listed as mandatory in the spec are also mandatory here\nccr.session_id = \"dsrkat01.mnc003.mcc260.3gppnetwork.org;65574b0c-2d02\"\nccr.origin_host = b\"dra2.gy.mno.net\"\nccr.origin_realm = b\"mno.net\"\nccr.destination_realm = b\"mvno.net\"\nccr.service_context_id = \"32251@3gpp.org\"\nccr.cc_request_type = E_CC_REQUEST_TYPE_UPDATE_REQUEST\nccr.cc_request_number = 952\nccr.destination_host = b\"dra3.mvno.net\"\n\n# Message header can be manipulated as well:\nccr.header.hop_by_hop_identifier = 10001\nccr.header.end_to_end_identifier = 20001\nccr.header.is_proxyable = False\n\n# For AVPs that can appear multiple times, `add_` methods are provided:\nccr.add_subscription_id(E_SUBSCRIPTION_ID_TYPE_END_USER_E164, \"485089163847\")\nccr.add_subscription_id(E_SUBSCRIPTION_ID_TYPE_END_USER_IMSI, \"260036619905065\")\n\n# Message can be built by converting it into bytes, which returns the entire\n# message, including its header and auto-generates all AVPs\nccr_bytes = ccr.as_bytes()\n</code></pre> <p>Note</p> <p>There is no checking for mandatory AVPs being set; it is the responsibility of the implementing party to ensure that all AVPs required are included. Leaving out a required AVP will emit a debug log entry, but will produce no other visible warning.</p> <p>For commands that accept additional AVPs according to the RFCs, custom AVPs can be added:</p> <pre><code>from diameter.message import Avp\nfrom diameter.message.commands import AbortSessionRequest\nfrom diameter.message.constants import *\n\nasr = AbortSessionRequest()\nasr.append_avp(\n    Avp.new(AVP_TGPP_ABORT_CAUSE, VENDOR_TGPP, value=E_ABORT_CAUSE_BEARER_RELEASED)\n)\n</code></pre> <p>Commands can be constructed manually as well, in case a Python implementation is not ready yet, or if custom behaviour is required:</p> <pre><code>from diameter.message import Avp, Message, dump\nfrom diameter.message.commands import UpdateLocation\nfrom diameter.message.constants import *\n\n# UpdateLocation is known but has no implementation, AVPs must be created\n# manually and added to the command\nulr = UpdateLocation()\nulr.header.is_request = True\nulr.avps = [\n    Avp.new(AVP_SESSION_ID, value=\"mnc003.mcc228.3gppnetwork.org;02472683\")\n]\nprint(dump(ulr))\n# produces:\n# 3GPP-Update-Location &lt;Version: 0x01, Length: 68, Flags: 0x80 (request), Hop-by-Hop Identifier: 0x0, End-to-End Identifier: 0x0&gt;\n#   Session-Id &lt;Code: 0x107, Flags: 0x40 (-M-), Length: 46, Val: mnc003.mcc228.3gppnetwork.org;02472683&gt;\n\n\n# When building a message using the `Message` base class, command code must\n# be provided manually:\nmsg = Message()\nmsg.header.command_code = 262\nmsg.header.is_request = True\nmsg.avps = [\n    Avp.new(AVP_SESSION_ID, value=\"mnc003.mcc228.3gppnetwork.org;02472683\")\n]\nprint(dump(msg))\n# produces:\n# Unknown &lt;Version: 0x01, Length: 0, Flags: 0x80 (request), Hop-by-Hop Identifier: 0x0, End-to-End Identifier: 0x0&gt;\n#   Session-Id &lt;Code: 0x107, Flags: 0x40 (-M-), Length: 46, Val: mnc003.mcc228.3gppnetwork.org;02472683&gt;\n</code></pre>"},{"location":"guide/node/","title":"Connecting to Diameter Peers","text":"<p>The <code>diameter</code> package provides tools to connect to multiple diameter peers  within the same diameter realm, with automated CER/CEA, DWR/DWA and DPR/DPA  handling, as well as message routing to local applications.</p> <p>The diameter node implementation supports both TCP and SCTP transports. It does not support secure transports.</p>"},{"location":"guide/node/#diameter-node","title":"Diameter Node","text":"<p>A diameter node represents the local diameter peer. It can be either a server, or a client, with the only difference being in the applications that want to  receive requests (server) and applications that want to send requests (client) through the node.</p> <p>In both cases, the diameter node is the same, and it will handle messages  flowing in both directions.</p>"},{"location":"guide/node/#basic-client-usage","title":"Basic client usage","text":"<p>A basic node that acts as a client is constructed with <code>Node</code>.</p> <pre><code>from diameter.node import Node\n\nnode = Node(\"peername.gy\", \"realm.net\")\n</code></pre> <p>A client node with no other arguments than the origin host and the local realm name will connect to any other peer and will advertise support for every vendor known to the <code>diameter</code> package. If necessary, the list of advertised vendors can be limited with:</p> <pre><code>from diameter.message.constants import *\nfrom diameter.node import Node\n\nnode = Node(\"peername.gy\", \"realm.net\",\n            vendor_ids=[VENDOR_ETSI, VENDOR_TGPP, VENDOR_TGPP2])\n</code></pre> <p>A node will only establish outgoing connections to known peers. Each peer must be added individually:</p> <pre><code>from diameter.node import Node\n\nnode = Node(\"peername.gy\", \"realm.net\")\nnode.add_peer(\"aaa://ocs1.gy\", \"realm.net\", \n              ip_addresses=[\"10.16.0.7\"])\nnode.add_peer(\"aaa://ocs2.gy;transport=sctp\", \"realm.net\", \n              ip_addresses=[\"10.16.0.8\", \"10.16.5.8\"], is_persistent=True)\n</code></pre> <p>Adding a peer as <code>persistent</code> will result in the node establishing an outgoing  connection at startup and ensuring that the connection remains up, by means of reconnecting after connection loss, if necessary. A peer that is not set as  persistent will never be automatically connected to. A reconnect attempt is  not made, if the peer has been disconnected after a successful  \"Disconnect-Peer-Request\". This can be overridden by setting the  <code>always_reconnect</code> attribute to  true.</p> <p>Adding a peer without specifying its ip addresses will only make the peer  \"known\"; no outgoing connection is ever attempted and the initial connection  must be made by the peer themselves, towards our node (for this the node must  act as a server).</p> <p>Peers must be added using a \"DiameterURI\" syntax, consisting of a scheme, peer FQDN, a connection port and transport protocol. Valid URIs are for instance:</p> <ul> <li>aaa://node1.gy;3868;transport=tcp</li> <li>aaa://node1.gy.realm.net;9009;transport=sctp</li> </ul> <p>If not specified, a peer defaults <code>tcp</code> over  port <code>3868</code>. Whether the realm FQDN should contain also the realm name or not, depends on how the peer on the receiving side of the connection is configured.</p> <p>A utility function exists for parsing the \"DiameterURI\" syntax.</p> <p>After one or more peers have been configured, the node must be started with  <code>start</code> and stopped with  <code>stop</code>. When started, the node will establish an  outgoing connection with every connected peer and perform a CER/CEA message  exchange. When asked to stop, the node sends a DPR (Disconnect-Peer-Request)  towards every connected peer and ends its operations as soon as a  DPA (Disconnect-Peer-Answer) has been received from every peer.</p> <pre><code>from diameter.node import Node\n\nnode = Node(\"peername.gy\", \"realm.net\")\nnode.start()\n# wait\nnode.stop(wait_timeout=120, force=False)\n</code></pre> <p>Starting the node will spawn a thread in the background, i.e. <code>node.start()</code> will not block.</p> <p>The stop command has optional timeout and force arguments; the timeout argument controls how long the node should wait for DPAs to arrive and for the peer  connections to empty their outgoing message buffers before giving up and  exiting. The force argument will just close all connections without even  sending out DPRs first.</p> <p>For sending diameter messages through the node, see  writing diameter applications.</p>"},{"location":"guide/node/#starting-a-server","title":"Starting a server","text":"<p>Operating a node as a server is near-identical to starting a node as a client. The only difference is, that a server will also be listening for incoming  connections on local socket(s):</p> <pre><code>from diameter.message.constants import *\nfrom diameter.node import Node\n\nnode = Node(\"peername.gy\", \"realm.net\",\n            ip_addresses=[\"10.17.20.9\", \"172.16.13.9\"],\n            tcp_port=3868,\n            sctp_port=3868,\n            vendor_ids=[VENDOR_ETSI, VENDOR_TGPP, VENDOR_TGPP2])\nnode.start()\n</code></pre> <p>The node can handle both TCP and SCTP transports simultaneously. More than one IP address can be provided for SCTP multi-homing. The same address list is  used for both TCP and SCTP. If more than one address is provided and only a  <code>tcp_port</code> is given, the node will only listen on the first address of the list. TCP will also always use the first address provided.</p> <p>For sending and receiving diameter messages through the node, see  writing diameter applications.</p>"},{"location":"guide/node/#node-attributes","title":"Node attributes","text":"<p>A node has several attributes that can be used or altered after its creation:</p> <code>vendor_id</code> The vendor ID that node will advertise in every CER and CEA. Defaults to  99999, i.e. \"Unknown\". Can be changed at any time, though preferably before <code>Node.start()</code> is called. <code>product_name</code> The product name that the noed will advertise in CER and CEA. Defaults to  \"python-diameter\". Can be changed at any time, though preferably before <code>Node.start()</code> is called. <code>cea_timeout</code> Default time in seconds that the node will wait for a CEA to arrive after sending a CER. This can also be set individually for each peer. <code>cer_timeout</code> Default time in seconds that the node will wait for a CER to arrive after a connection attempt is received. This can also be set individually for  each peer. <code>dwa_timeout</code> Default time in seconds that the node will wait for a DWA to arrive after a DWR has been sent. This can also be set individually for each peer. <code>idle_timeout</code> Default time of peer inactivity, in seconds that the node will accept  before a DWR will be sent. This can also be set individually for each peer. <code>wakeup_interval</code> <p>Time in seconds between forced wakeups while waiting for connection sockets to become active. This timer value controls how often peer  timers are checked, how often reconnects are attempted and how often  statistics are dumped in the logfiles. </p> <p>As this also defines the interval at which peer timers are checked, it  is also the smallest possible value for a peer timer value. Setting  this value very low will consume more CPU, setting it too high will  make observing short timeouts impossible.</p> <p>This value also defines how long a node will continue to run, after  <code>stop</code> with <code>force</code> argument set to <code>True</code> is called.</p> <code>peers_logging</code> If enabled, will dump a JSON representation of each peer configuration and  their current connection status, at every <code>wakeup_interval</code> seconds. The  logging will be done through \"diameter.stats\" log facility and can also be  silenced by changing the log level to anything above DEBUG. <code>stats_logging</code> If enabled, will dump a JSON representation of the statistics for each peer  in the logs, at every <code>wakeup_interval</code> seconds. The logging will be done  through \"diameter.stats\" log facility and can also be silenced by changing  the log level to anything above DEBUG. Enabling this may have a slight  performance impact, as the main thread will block while the statistics are  being gathered. <code>end_to_end_seq</code> <p>The end-to-end identifier generator. This must be used every time a new  request message is to be sent through the node:</p> <pre><code>n = Node()\nm = Message()\nm.header.end_to_end_identifier = n.end_to_end_seq.next_sequence()\n</code></pre> <p>Note that when working with applications, the end-to-end  identifier will be set automatically for every outgoing request.</p> <code>session_generator</code> <p>A generator that produces \"globally and eternally unique\" IDs, as required by rfc6733. The produced session IDs consist of the node's diameter  identity, a node startup timestamp and a 64-bit counter that is increased by one for each session ID and is initialised to a random integer at node  startup.</p> <pre><code>&gt;&gt;&gt; n = Node(\"test1.gy\")\n&gt;&gt;&gt; n.session_generator.next_id()\ntest1.gy;6571a525;5bd295f2;6c76d6b6\n&gt;&gt;&gt; n.session_generator.next_id()\ntest1.gy;6571a525;5bd295f2;6c76d6b7\n</code></pre> <code>peers</code> Contains a dictionary of all peers known to the node, both those that have  been configured manually using <code>add_peer</code> and those that have been  discovered. The dictionary holds host identities as strings as its keys and instances of <code>Peer</code> as its values. <code>statistics</code> Returns an instance of <code>NodeStats</code>, which  contains statistical values, cumulated over every configured peer, at the time of retrieval. <code>statistics_history</code> A list of dictionaries, each representing a serialised snapshot of a  <code>NodeStats</code> instance, retrieved every 60  seconds since the node startup, rotating at 1440 minutes. The historical  statistics values are preserved over node restarts, but only stored in  memory."},{"location":"guide/node/#diameter-peer","title":"Diameter peer","text":"<p>An instance of <code>Peer</code> represents a single diameter peer in the realm, other than the local node. The local diameter node collects  one instance of <code>Peer</code> for each connection that it either makes, receives, will  connect to, or will accept a connection from.</p> <p>An instance of a peer is returned every time  <code>Node.add_peer</code> is called:</p> <pre><code>from diameter.node import Node\n\nnode = Node(\"peername.gy\", \"realm.net\")\npeer = node.add_peer(\"aaa://ocs2.gy;transport=sctp\", \"realm.net\", \n                     ip_addresses=[\"10.16.0.8\", \"10.16.5.8\"])\n</code></pre> <p>A configured peer can be passed on to a diameter application. </p> <p>A peer may be configured with a realm other than the Node and multiple realms with various realms may coexist.</p> <p>An instance of a peer will exist always, whether the peer is connected or not. The connectivity of the peer is indicated by the  <code>Peer.connection</code> instance attribute,  which holds an instance of a <code>PeerConnection</code>  if the peer is currently connected, otherwise <code>None</code>.</p>"},{"location":"guide/node/#peer-attributes","title":"Peer attributes","text":"<p>Peers have several attributes that can be queried and/or altered after creation:</p> <code>cea_timeout</code> Time in seconds that the node will wait for a CEA to arrive for the peer  after sending a CER. Not set by default, uses the values configured for the node. <code>cer_timeout</code> Default time in seconds that the node will wait for a CER to arrive for the peer after a connection attempt is received.  Not set by default, uses  the values configured for the node. <code>dwa_timeout</code> Default time in seconds that the node will wait for a DWA to arrive for the peer after a DWR has been sent. Not set by default, uses the values  configured for the node. <code>idle_timeout</code> Time of peer inactivity, in seconds that the node will accept before a DWR  will be sent. Not set by default, uses the values configured for the node. <code>always_reconnect</code> Force a persistent peer to always reconnect after connection loss, even if the peer has closed its connection after a successful  \"Disconnect-Peer-Request\" exchange. Defaults to <code>false</code>. <code>reconnect_wait</code> Time to wait before attempting a re-connect for a persistent peer. Must be set individually for each peer, there are no default values provided by the node. <code>connection</code> An instance of <code>PeerConnection</code>, if the peer is currently connected. <code>last_connect</code> A unix timestamp indicating when the peer was last time successfully connected. The timestamp is set for outgoing connections at the time the socket is established and of incoming connections when a CER has been received. <code>last_disconnect</code> A unix timestamp indicating when the peer was last disconnected. <code>counters</code> An instance of <code>PeerCounters</code>, which counts each CER, CEA, DWR, DWA, DPR, DPA and other app-routed requests and answers individually. <code>statistics</code> An instance of <code>PeerStats</code>, which keeps a record of response times, sent  answer result codes, amount of requests received and rate of requests  being processed. <code>disconnect_reason</code> Holds a value that indicates the reason for the most recent peer disconnect. The value is <code>None</code>, if the peer has so far never been disconnected, or if the peer is currently in a connected state. The value is one of the  <code>PEER_DISCONNECT_REASON_*</code> constants and it gets set at the same time as  the <code>connection</code> attribute gets unset. The reason is reset back to <code>None</code>, if the peer reconnects and performs a successful CER/CEA exchange. <p>For a full list of instance attributes, see <code>Peer API reference</code>.</p>"},{"location":"guide/node/#peer-connection-attributes","title":"Peer connection attributes","text":"<p>Peer connections have several attributes that can be queried and/or altered  after creation:</p> <code>auth_application_ids</code> and <code>acct_application_ids</code> List of authentication and accounting application IDs that have been  determined as the supported application IDs after a CER/CEA has taken place. <code>hop_by_hop_seq</code> <p>The hop-by-hop identifier generator. This must be used every time a new  request message is to be sent through the peer:</p> <pre><code>from diameter.node import Node\nfrom diameter.node.peer import PEER_READY_STATES\n\nn = Node()\n# just pick any ready peer\nusable_peers = [\n    peer for peer in node.peers.values()\n    if peer.conenction and peer.connection.state in PEER_READY_STATES]\npeer = usable_peers[0]\nm.header.hop_by_hop_identifier = peer.connection.hop_by_hop_seq.next_sequence()\n</code></pre> <p>Note that when working with applications, the end-to-end  identifier will be set automatically for every outgoing request, when  <code>Node.route_request</code> is used.</p> <code>state</code> <p>The current connection state. One of the <code>\"PEER_*\"</code> constants within  <code>diameter.node.peer</code>. A connection will go through state transition \"CONNECTING\" -&gt; \"CONNECTED\" -&gt; \"READY\" -&gt; \"DISCONNECTING\" -&gt; \"CLOSING\" -&gt; \"CLOSED\" and will accept requests and answers from other peers and own applications  when it is \"READY\". </p> <p>The \"ready\" state can have several sub-states. When checking readiness,  it should be checked that the <code>Peer.connection.state</code> is within  <code>diameter.peer.PEER_READY_STATES</code>.</p> <code>is_sender</code> and <code>is_receiver</code> These read-only attributes indicate the direction the original connection was established as. A \"receiver\" connection is one that was established by a remote peer towards us, a \"sender\" connection was established by us  towards a remote peer. <p>For a full list of connection instance attributes, see  <code>PeerConnection API reference</code>.</p>"},{"location":"guide/node/#sending-messages-through-a-peer","title":"Sending messages through a peer","text":"<p>Normally incoming and outgoing messages are expected to be handled and  generated by applications, however a message can also be  manually pushed through any connected peer:</p> <pre><code>from diameter.message.commands.re_auth import ReAuthRequest\nfrom diameter.node import Node\nfrom diameter.node.peer import PEER_READY_STATES\n\nnode = Node(\"peername.gy\", \"realm.net\")\npeer = node.add_peer(\"aaa://ocs2.gy;transport=sctp\", \"realm.net\", \n                     ip_addresses=[\"10.16.0.8\", \"10.16.5.8\"], \n                     is_persistent=True)\nnode.start()\n\n# ideally should wait until connection becomes available; the READY state is not \n# achieved until CER/CEA has completed, which is likely to take a few seconds\nif peer.connection and peer.connection.state in PEER_READY_STATES:\n    rar = ReAuthRequest()\n    rar.header.end_to_end_identifier = node.end_to_end_seq.next_sequence()\n    rar.header.hop_by_hop_identifier = peer.connection.hop_by_hop_seq.next_sequence()\n    rar.session_id = node.session_generator.next_id()\n    # ... set all other required attributes and then send\n    node.send_message(peer.connection, rar)\n\nnode.stop()\n</code></pre>"},{"location":"guide/node_statistics/","title":"Node statistics and performance values","text":"<p>The diameter stack collects statistical data on its performance.</p> <p>Statistics are provided on three different levels:</p>"},{"location":"guide/node_statistics/#peer-statistics","title":"Peer statistics","text":"<p>Statistics are collected individually for each configured peer, accessible  through the <code>statistics</code> instance  attribute, which holds an instance of <code>PeerStats</code>.</p> <p>Peer statistics record the following values:</p> <code>avg_response_time</code> <p>Average time in seconds spent processing a request, recorded individually for each received request type. Contains a dictionary, with request types as keys and average response times as values, e.g.:</p> <pre><code>{\"Capabilities-Exchange\": 1.0, \"Device-Watchdog\": 0.000157}\n</code></pre> <p>The value is calculated from the time spent processing the last 1024  requests.</p> <code>avg_response_time_overall</code> <p>Average time in seconds spent processing any request received through the  peer.</p> <p>The value is calculated from the time spent processing the last 1024  requests.</p> <code>processed_req_per_second</code> <p>The rate of requests processed, per second, recorded individually for  each received request type. Contains a dictionary, with request types as keys and rate of processed requests as values. E.g.:</p> <pre><code>{\"Capabilities-Exchange\": 1.0, \"Device-Watchdog\": 3.0}\n</code></pre> <p>The rate is calculated by adding the total sum of time spent processing the last 1024 requests, separately for each request type, and dividing the sums by the amount of requests. </p> <p>The request rate is likely to be very high, if the peer receives low  traffic.</p> <code>processed_req_per_second_overall</code> <p>The overall rate of requests processed, per second, for the entire peer.</p> <p>Similar to <code>processed_req_per_second</code>, the rate is calculated by adding the total sum of time spent on processing the last 1024 requests, for any  request type, and diving the sum by the amount of requests.</p>"},{"location":"guide/node_statistics/#node-statistics","title":"Node statistics","text":"<p>The diameter node collects statistics for all of its peers and calculates  cumulated values. The node statistics are available as the  <code>statistics</code> instance attribute, which returns  an instance of <code>NodeStats</code>.</p> <p>The node statistics record following values:</p> <code>avg_response_time</code> Average response time, recorded individually for each request type.  Identical to the same attribute in peer statistics, except calculated  cumulated over all peers. <code>avg_response_time_overall</code> Average response time for the entire node. Identical to the same attribute in peer statistics, except calculated  cumulated over all peers. <code>processed_req_per_second</code> Rate of requests processed per second. Identical to the same attribute in  peer statistics, except calculated cumulated over all peers. <code>processed_req_per_second_overall</code> Rate of requests processed per second. Identical to the same attribute in  peer statistics, except calculated cumulated over all peers. <code>received_req_counters</code> A list containing three integer values, indicating the exact amount of  request received by the node in the last minute, five minutes and the last 15 minutes. <code>sent_result_code_range_counters</code> <p>A dictionary containing exact values of sent result code types. The  dictionary holds result code ranges as keys, and lists of integers as  values. Each result code range has the format of \"1xxx\", \"2xxx\" etc. Each value is a list with three integers; the amount of sent result codes for  the last minute, last 5 minutes and last 15 minutes. E.g.:</p> <pre><code>{\"2xxx\": [150,321,321], \"4xxx\": [58,103,103], \"5xxx\": [1,1,1]}\n</code></pre>"},{"location":"guide/node_statistics/#historical-statistics","title":"Historical statistics","text":"<p>The node, as long as it is running, takes a snapshot of the <code>Node.statistics</code>  return value every 60 seconds and stores it as a serialised dictionary in the <code>statistics_history</code>  instance attribute. The history is a list (a deque) of dictionaries and holds  1440 entries, i.e. historical values for the past 24 hours.</p> <p>Values of each dictionary correspond to attribute names of <code>NodeStats</code>, with one <code>timestamp</code> key added, containing the UNIX timestamp of the snapshot.</p> <pre><code>[\n    {\n        \"avg_response_time\": {\n            \"Capabilities-Exchange\": 1.0,\n            \"Credit-Control\": 0.033816425120772944,\n            \"Device-Watchdog\": 0.3333333333333333\n        },\n        \"avg_response_time_overall\": 0.029674902627634447,\n        \"processed_req_per_second\": {\n            \"Capabilities-Exchange\": 1.0,\n            \"Credit-Control\": 29.571428571428573,\n            \"Device-Watchdog\": 3.0\n        },\n        \"processed_req_per_second_overall\": 30.714285714285715,\n        \"received_req_counters\": [209, 213, 213],\n        \"sent_result_code_range_counters\": {\n            \"2xxx\": [166, 171, 171],\n            \"4xxx\": [44, 44, 44]\n        },\n        \"timestamp\": 1705507856\n    },\n    {\n        \"avg_response_time\": {\n            \"Capabilities-Exchange\": 1.0,\n            \"Credit-Control\": 0.03357314148681055,\n            \"Device-Watchdog\": 0.3333333333333333\n        },\n        \"avg_response_time_overall\": 0.028846585890826056,\n        \"processed_req_per_second\": {\n            \"Capabilities-Exchange\": 1.0,\n            \"Credit-Control\": 29.785714285714285,\n            \"Device-Watchdog\": 3.0\n        },\n        \"processed_req_per_second_overall\": 30.357142857142858,\n        \"received_req_counters\": [209, 423, 423],\n        \"sent_result_code_range_counters\": {\n            \"2xxx\": [150, 321, 321],\n            \"4xxx\": [58, 103, 103],\n            \"5xxx\": [1, 1, 1]\n        },\n        \"timestamp\": 1705507916\n    }\n]\n</code></pre>"},{"location":"guide/sample_application/","title":"A sample application","text":"<p>This section goes through the <code>\"examples/credit_control_sms_client.py\"</code> file, which demonstrates how to build a diameter client that performs a single SMS charging request and then disconnects and exits.</p>"},{"location":"guide/sample_application/#setting-up-logging","title":"Setting up logging","text":"<p>All parts of the diameter stack use logging extensively. For the purposes of this example, the logs will be dumped in the console.</p> <pre><code>import logging\n\nlogging.basicConfig(format=\"%(asctime)s %(name)s %(levelname)s %(message)s\")\n# this shows a human-readable message dump in the logs\nlogging.getLogger(\"diameter.peer.msg\").setLevel(logging.DEBUG)\n</code></pre>"},{"location":"guide/sample_application/#creating-a-diameter-node","title":"Creating a diameter node","text":"<p>A node represents our own peer and is required for the connectivity to exist. The node will be configured with one remote peer, which is the destination of our charging request.</p> <pre><code>from diameter.message.constants import *\nfrom diameter.node import Node\n\n# Configure our client node\nnode = Node(\n    \"smsgw.gy\", \"testrealm.local\",\n    vendor_ids=[VENDOR_ETSI, VENDOR_TGPP, VENDOR_TGPP2])\n# Add the destination peer\nocs_cfg = node.add_peer(\n    \"aaa://ocs.gy\", \"testrealm.local\",\n    ip_addresses=[\"10.0.0.50\"], is_persistent=True)\nnode.start()\n</code></pre>"},{"location":"guide/sample_application/#creating-the-charging-application","title":"Creating the charging application","text":"<p>As we are going to act only as a client, our application can be as simple as  possible. An instance of <code>SimpleThreadingApplication</code> with no callback function to receive messages is sufficient.</p> <pre><code>from diameter.message.constants import *\nfrom diameter.node.application import SimpleThreadingApplication\n\n# Configure our client application. Credit Control Applications advertise their\n# application ID in auth-application-id.\nclient = SimpleThreadingApplication(\n    APP_DIAMETER_CREDIT_CONTROL_APPLICATION,\n    is_auth_application=True)\n# Add application for `ocs.gy` peer configured above\nnode.add_application(client, [ocs_cfg])\n</code></pre> <p>If we were to act as a server and also expect incoming requests, a callback  function should be passed for the <code>SimpleThreadingApplication</code> constructor.</p>"},{"location":"guide/sample_application/#constructing-a-charging-request","title":"Constructing a charging request","text":"<p>The charging request will be an instance of <code>CreditControlRequest</code>. The header values, e.g. the hop-by-hop identifier and the application ID will be set  automatically by the application as the message is submitted, but everything  else must be set manually.</p> <p>This example uses multiple services credit control to specify the requested units, which is a common approach. An alternative would be to provide the  requested units directly as a value for the <code>ccr.requested_service_unit</code>  attribute.</p> <p>The example also appends a 3GGP-specified AVP structure at the end, containing  3GPP identifiers for an SMS submission, in our case the recipient address, the message data coding scheme and the type of the short message being sent.</p> <pre><code>import datetime\n\nfrom diameter.message.commands.credit_control import CreditControlRequest\nfrom diameter.message.commands.credit_control import RequestedServiceUnit\nfrom diameter.message.commands.credit_control import ServiceInformation\nfrom diameter.message.commands.credit_control import SmsInformation\nfrom diameter.message.commands.credit_control import RecipientInfo\nfrom diameter.message.commands.credit_control import RecipientAddress\nfrom diameter.message.constants import *\n\n# Construct a credit control request\nccr = CreditControlRequest()\n\n# These are required:\nccr.session_id = client.node.session_generator.next_id()\nccr.origin_host = client.node.origin_host.encode()\nccr.origin_realm = client.node.realm_name.encode()\nccr.destination_realm = client.node.realm_name.encode()\nccr.auth_application_id = client.application_id\nccr.service_context_id = \"32274@3gpp.org\"  # SMS\nccr.cc_request_type = E_CC_REQUEST_TYPE_EVENT_REQUEST\nccr.cc_request_number = 1\n\n# These are usually wanted by charging servers:\nccr.user_name = \"diameter\"\nccr.event_timestamp = datetime.datetime.now()\nccr.requested_action = E_REQUESTED_ACTION_DIRECT_DEBITING\n\nccr.add_subscription_id(\n    subscription_id_type=E_SUBSCRIPTION_ID_TYPE_END_USER_E164,\n    subscription_id_data=\"41780000001\")\nccr.add_multiple_services_credit_control(\n    requested_service_unit=RequestedServiceUnit(cc_service_specific_units=1),\n    service_identifier=1)\n\n# Adds the following 3GPP vendor-specific AVP structure at the end, which\n# contains the SMS type and recipient. Looks like:\n#\n#   Service-Information &lt;Code: 0x369, Flags: 0xc0 (VM-), Length: 120, Vnd: TGPP&gt;\n#     SMS-Information &lt;Code: 0x7d0, Flags: 0x80 (V--), Length: 108, Vnd: TGPP&gt;\n#       Data-Coding-Scheme &lt;Code: 0x7d1, Flags: 0x80 (V--), Length: 16, Vnd: TGPP, Val: 8&gt;\n#       SM-Message-Type &lt;Code: 0x7d7, Flags: 0x80 (V--), Length: 16, Vnd: TGPP, Val: 0&gt;\n#       Recipient-Info &lt;Code: 0x7ea, Flags: 0x80 (V--), Length: 64, Vnd: TGPP&gt;\n#         Recipient-Address &lt;Code: 0x4b1, Flags: 0x80 (V--), Length: 52, Vnd: TGPP&gt;\n#           Address-Type &lt;Code: 0x383, Flags: 0xc0 (VM-), Length: 16, Vnd: TGPP, Val: 1&gt;\n#           Address-Data &lt;Code: 0x381, Flags: 0xc0 (VM-), Length: 23, Vnd: TGPP, Val: 41780000001&gt;\n#\n# Actual content wanted by the OCS on the receiving end may vary depending on\n# the vendor and their implementation.\n#\n# Note that `RecipientInfo` and `RecipientAddress` are wrapped in lists, as the\n# specification allows more than one recipient.\nccr.service_information = ServiceInformation(\n    sms_information=SmsInformation(\n        data_coding_scheme=8,\n        sm_message_type=E_SM_MESSAGE_TYPE_SUBMISSION,\n        recipient_info=[RecipientInfo(\n            recipient_address=[RecipientAddress(\n                address_type=E_ADDRESS_TYPE_MSISDN,\n                address_data=\"41780000002\"\n            )]\n        )]\n    )\n)\n</code></pre>"},{"location":"guide/sample_application/#sending-the-message","title":"Sending the message","text":"<p>The constructed message will be sent through the application. Calling  <code>wait_for_ready</code> before sending the first message is recommended, as our  destination peer will not accept any messages until the capabilities exchange procedure has been completed in the background. <code>wait_for_ready</code> will also  block if the remote peer has gone away.</p> <p>When sending a request through an application, the application will block  until a given timeout (default 30 seconds) has passed, waiting for an answer to arrive through the peer. If an answer is received, it is returned, otherwise an exception is raised.</p> <p>As we are only going to send one single message, the noed can be stopped  afterwards, which will cleanly disconnect from the remote peer.</p> <pre><code># Wait for CER/CEA to complete\nclient.wait_for_ready()\ncca = client.send_request(ccr, timeout=5)\n\n# Should print 2001, if all goes well\nprint(cca.result_code)\n\n# Disconnect from peer and exit\nnode.stop()\n</code></pre>"},{"location":"guide/sample_application/#the-complete-script","title":"The complete script","text":"<pre><code>import datetime\nimport logging\n\nfrom diameter.message.commands.credit_control import CreditControlRequest\nfrom diameter.message.commands.credit_control import RequestedServiceUnit\nfrom diameter.message.commands.credit_control import ServiceInformation\nfrom diameter.message.commands.credit_control import SmsInformation\nfrom diameter.message.commands.credit_control import RecipientInfo\nfrom diameter.message.commands.credit_control import RecipientAddress\nfrom diameter.message.constants import *\nfrom diameter.node import Node\nfrom diameter.node.application import SimpleThreadingApplication\n\nlogging.basicConfig(format=\"%(asctime)s %(name)s %(levelname)s %(message)s\")\n# this shows a human-readable message dump in the logs\nlogging.getLogger(\"diameter.peer.msg\").setLevel(logging.DEBUG)\n# this silences periodic dumping of peer statistics\nlogging.getLogger(\"diameter.stats\").setLevel(logging.INFO)\n\n\n# Configure our client node\nnode = Node(\n    \"smsgw.gy\", \"testrealm.local\",\n    vendor_ids=[VENDOR_ETSI, VENDOR_TGPP, VENDOR_TGPP2])\n# Add the destination peer\nocs_cfg = node.add_peer(\n    \"aaa://ocs.gy\", \"testrealm.local\",\n    ip_addresses=[\"10.0.0.50\"], is_persistent=True)\nnode.start()\n\n\n# Configure our client application\nclient = SimpleThreadingApplication(\n    APP_DIAMETER_CREDIT_CONTROL_APPLICATION,\n    is_auth_application=True)\n# Add application for `ocs.gy` peer\nnode.add_application(client, [ocs_cfg])\n\n\n# Construct a credit control request\nccr = CreditControlRequest()\n\n# These are required:\nccr.session_id = client.node.session_generator.next_id()\nccr.origin_host = client.node.origin_host.encode()\nccr.origin_realm = client.node.realm_name.encode()\nccr.destination_realm = client.node.realm_name.encode()\nccr.auth_application_id = client.application_id\nccr.service_context_id = \"32274@3gpp.org\"\nccr.cc_request_type = E_CC_REQUEST_TYPE_EVENT_REQUEST\nccr.cc_request_number = 1\n\n# These are usually wanted by charging servers:\nccr.user_name = \"diameter\"\nccr.event_timestamp = datetime.datetime.now()\nccr.requested_action = E_REQUESTED_ACTION_DIRECT_DEBITING\n\nccr.add_subscription_id(\n    subscription_id_type=E_SUBSCRIPTION_ID_TYPE_END_USER_E164,\n    subscription_id_data=\"41780000001\")\nccr.add_multiple_services_credit_control(\n    requested_service_unit=RequestedServiceUnit(cc_service_specific_units=1),\n    service_identifier=1)\n\n# Adds the following 3GPP vendor-specific AVP structure at the end, which\n# contains the SMS type and recipient. Looks like:\n#\n#   Service-Information &lt;Code: 0x369, Flags: 0xc0 (VM-), Length: 120, Vnd: TGPP&gt;\n#     SMS-Information &lt;Code: 0x7d0, Flags: 0x80 (V--), Length: 108, Vnd: TGPP&gt;\n#       Data-Coding-Scheme &lt;Code: 0x7d1, Flags: 0x80 (V--), Length: 16, Vnd: TGPP, Val: 8&gt;\n#       SM-Message-Type &lt;Code: 0x7d7, Flags: 0x80 (V--), Length: 16, Vnd: TGPP, Val: 0&gt;\n#       Recipient-Info &lt;Code: 0x7ea, Flags: 0x80 (V--), Length: 64, Vnd: TGPP&gt;\n#         Recipient-Address &lt;Code: 0x4b1, Flags: 0x80 (V--), Length: 52, Vnd: TGPP&gt;\n#           Address-Type &lt;Code: 0x383, Flags: 0xc0 (VM-), Length: 16, Vnd: TGPP, Val: 1&gt;\n#           Address-Data &lt;Code: 0x381, Flags: 0xc0 (VM-), Length: 23, Vnd: TGPP, Val: 41780000001&gt;\n#\n# Actual content wanted by the OCS on the receiving end may vary depending on\n# the vendor and their implementation.\n#\n# Note that `RecipientInfo` and `RecipientAddress` are wrapped in lists, as the\n# specification allows more than one recipient.\nccr.service_information = ServiceInformation(\n    sms_information=SmsInformation(\n        data_coding_scheme=8,\n        sm_message_type=E_SM_MESSAGE_TYPE_SUBMISSION,\n        recipient_info=[RecipientInfo(\n            recipient_address=[RecipientAddress(\n                address_type=E_ADDRESS_TYPE_MSISDN,\n                address_data=\"41780000002\"\n            )]\n        )]\n    )\n)\n\n# Wait for CER/CEA to complete\nclient.wait_for_ready()\ncca = client.send_request(ccr, timeout=5)\n\n# Should print 2001, if all goes well\nprint(cca.result_code)\n\n# Disconnect from peer and exit\nnode.stop()\n</code></pre>"}]}